<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>config.h</name>
    <path>/tmp/pspdev/pspsdk/</path>
    <filename>config_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_FCNTL_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>765d75020849aa0a9b6becd9a5b7a193</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_GETCWD</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>88f2f3e38594f0902031b6c14c75c399</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_INTTYPES_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>b90a030ff2790ebdc176660a6dd2a478</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_MALLOC</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>14503280ca0cb757db915eea09282bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_MALLOC_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>7981d8bf53b0cb48f41ab0e4ddb7c629</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_MEMORY_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>e93a78f9d076138897af441c9f86f285</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_STDINT_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>b6cd6d1c63c1e26ea2d4537b77148354</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_STDLIB_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>9e0e434ec1a6ddbd97db12b5a32905e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_STRCHR</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>37eb0020e42f0ebb6cba24c2888cc48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_STRINGS_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>405d10d46190bcb0320524c54eafc850</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_STRING_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>d4c234dd1625255dc626a15886306e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_SYS_STAT_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>ce156430ba007d19b4348a950d0c692b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_SYS_TYPES_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>69dc70bea5d1f8bd2be9740e974fa666</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_UNISTD_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>219b06937831d0da94d801ab13987639</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PACKAGE</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>ca8570fb706c81df371b7f9bc454ae03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PACKAGE_BUGREPORT</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>1d1d2d7f8d2f95b376954d649ab03233</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PACKAGE_NAME</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>1c0439e4355794c09b64274849eb0279</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PACKAGE_STRING</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>c73e6f903c16eca7710f92e36e1c6fbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PACKAGE_TARNAME</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>f415af6bfede0e8d5453708afe68651c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PACKAGE_VERSION</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>a326a05d5e30f9e9a4bb0b4469d5d0c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSPSDK_TOPDIR</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>97097633f722e4e60776f57c27cde38d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STDC_HEADERS</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>550e5c272cc3cf3814651721167dcd23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>1c6d5de492ac61ad29aec7aa9a436bbf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspatrac3.h</name>
    <path>/tmp/pspdev/pspsdk/src/atrac3/</path>
    <filename>pspatrac3_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>sceAtracSetDataAndGetID</name>
      <anchorfile>pspatrac3_8h.html</anchorfile>
      <anchor>a6631290a9d15ff7265e8e6747d33d3c</anchor>
      <arglist>(void *buf, SceSize bufsize)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAtracDecodeData</name>
      <anchorfile>pspatrac3_8h.html</anchorfile>
      <anchor>67fe3195778a58f3355fb55f99076349</anchor>
      <arglist>(int atracID, u16 *outSamples, int *outN, int *outEnd, int *outRemainFrame)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAtracGetRemainFrame</name>
      <anchorfile>pspatrac3_8h.html</anchorfile>
      <anchor>e26745994dfb9a17b90fe83d82f8395c</anchor>
      <arglist>(int atracID, int *outRemainFrame)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAtracGetBitrate</name>
      <anchorfile>pspatrac3_8h.html</anchorfile>
      <anchor>055592552866cba1101eacf7ed3b0ecd</anchor>
      <arglist>(int atracID, int *outBitrate)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAtracSetLoopNum</name>
      <anchorfile>pspatrac3_8h.html</anchorfile>
      <anchor>20635141c711efe887f20869691c0f4b</anchor>
      <arglist>(int atracID, int nloops)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAtracReleaseAtracID</name>
      <anchorfile>pspatrac3_8h.html</anchorfile>
      <anchor>a41e7e1f9c740bd1b52877ca7b13f3e4</anchor>
      <arglist>(int atracID)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAtracGetNextSample</name>
      <anchorfile>pspatrac3_8h.html</anchorfile>
      <anchor>e3abc099554ff2182d6b8c9c638ac970</anchor>
      <arglist>(int atracID, int *outN)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAtracGetMaxSample</name>
      <anchorfile>pspatrac3_8h.html</anchorfile>
      <anchor>3352698c52ccff06ad889659fec754e3</anchor>
      <arglist>(int atracID, int *outMax)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspaudio.h</name>
    <path>/tmp/pspdev/pspsdk/src/audio/</path>
    <filename>pspaudio_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_VOLUME_MAX</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gaab777e0b57444bed7ac07c18ff872ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_CHANNEL_MAX</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g3bd90f8c4aa5dbc381fe8cdb58be6e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_NEXT_CHANNEL</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g0e01e447bf4113d7c6bd559d2b6e36b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_SAMPLE_MIN</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g87cfa28a9144f86cd76650fe8b238dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_SAMPLE_MAX</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g3e9b128344bcc6bdbc6240015884eaf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_SAMPLE_ALIGN</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gb8e37624a159b94eefda6233ad984d2d</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="enumeration">
      <name>PspAudioFormats</name>
      <anchor>g6702fbaaa77ffb52c74d793a75fa360b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_AUDIO_FORMAT_STEREO</name>
      <anchor>gg6702fbaaa77ffb52c74d793a75fa360b12c202f73d11a6b26bef848062ed9e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_AUDIO_FORMAT_MONO</name>
      <anchor>gg6702fbaaa77ffb52c74d793a75fa360b9f623888ae7964db1138fdc08a521421</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioChReserve</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gbab65eb9c2159293645e8303cef44899</anchor>
      <arglist>(int channel, int samplecount, int format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioChRelease</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g877ee14881ad511ae41f3d71e87c2056</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioOutput</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gb2a5d427b64fcaa332c5f1378c289d8f</anchor>
      <arglist>(int channel, int vol, void *buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioOutputBlocking</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gd5949b6f96df0361dfb44b351a204d51</anchor>
      <arglist>(int channel, int vol, void *buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioOutputPanned</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g76a51277df01b4fa85a0840bce2e6678</anchor>
      <arglist>(int channel, int leftvol, int rightvol, void *buffer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioOutputPannedBlocking</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>ga035cfe8d6c8342ac14ae5941948ac2a</anchor>
      <arglist>(int channel, int leftvol, int rightvol, void *buffer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioGetChannelRestLen</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gf4cbd647f859f501e7a1f5bea48dca7d</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioSetChannelDataLen</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gea7a75ede127573d72db93f24f5c5dde</anchor>
      <arglist>(int channel, int samplecount)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioChangeChannelConfig</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gc2adda2ba525f28786309b106d02ffe6</anchor>
      <arglist>(int channel, int format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioChangeChannelVolume</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g359bc8aaf48d5064b5e05e7af7bdd550</anchor>
      <arglist>(int channel, int leftvol, int rightvol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspaudiocodec.h</name>
    <path>/tmp/pspdev/pspsdk/src/audio/</path>
    <filename>pspaudiocodec_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>sceAudiocodecCheckNeedMem</name>
      <anchorfile>pspaudiocodec_8h.html</anchorfile>
      <anchor>26671bfe1921eb98888e9b7aa174eb68</anchor>
      <arglist>(unsigned long *Buffer, int Type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudiocodecInit</name>
      <anchorfile>pspaudiocodec_8h.html</anchorfile>
      <anchor>15e159b55e3dc6cb78e65a711bd913f6</anchor>
      <arglist>(unsigned long *Buffer, int Type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudiocodecDecode</name>
      <anchorfile>pspaudiocodec_8h.html</anchorfile>
      <anchor>8f87a6732abd05599875ea2db808fe2f</anchor>
      <arglist>(unsigned long *Buffer, int Type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudiocodecGetEDRAM</name>
      <anchorfile>pspaudiocodec_8h.html</anchorfile>
      <anchor>00359a04db67304c85709fd4611ba855</anchor>
      <arglist>(unsigned long *Buffer, int Type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudiocodecReleaseEDRAM</name>
      <anchorfile>pspaudiocodec_8h.html</anchorfile>
      <anchor>77dbc1f209b3850867c6c2adae917574</anchor>
      <arglist>(unsigned long *Buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspaudiolib.c</name>
    <path>/tmp/pspdev/pspsdk/src/audio/</path>
    <filename>pspaudiolib_8c</filename>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="pspthreadman_8h" name="pspthreadman.h" local="no" imported="no">pspthreadman.h</includes>
    <includes id="pspaudio_8h" name="pspaudio.h" local="no" imported="no">pspaudio.h</includes>
    <includes id="pspaudiolib_8h" name="pspaudiolib.h" local="yes" imported="no">pspaudiolib.h</includes>
    <member kind="function">
      <type>void</type>
      <name>pspAudioSetVolume</name>
      <anchorfile>pspaudiolib_8c.html</anchorfile>
      <anchor>a793d0e240f59c0fb97c571fd86a5c77</anchor>
      <arglist>(int channel, int left, int right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspAudioChannelThreadCallback</name>
      <anchorfile>pspaudiolib_8c.html</anchorfile>
      <anchor>27833bb82018bcba67faff678e796de1</anchor>
      <arglist>(int channel, void *buf, unsigned int reqn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspAudioSetChannelCallback</name>
      <anchorfile>pspaudiolib_8c.html</anchorfile>
      <anchor>0b6a8c025156c55f07fe27b2051e1053</anchor>
      <arglist>(int channel, pspAudioCallback_t callback, void *pdata)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspAudioOutBlocking</name>
      <anchorfile>pspaudiolib_8c.html</anchorfile>
      <anchor>6022c5aa649231ba6ba56ccf9392fa2b</anchor>
      <arglist>(unsigned int channel, unsigned int vol1, unsigned int vol2, void *buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspAudioInit</name>
      <anchorfile>pspaudiolib_8c.html</anchorfile>
      <anchor>b8037a432302ae4ff4d89710e59919f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspAudioEndPre</name>
      <anchorfile>pspaudiolib_8c.html</anchorfile>
      <anchor>ee3dbcaf12a863ffcf6b2f679e749ebf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspAudioEnd</name>
      <anchorfile>pspaudiolib_8c.html</anchorfile>
      <anchor>358b09d96d8a7ac9921dbe70630878a7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspaudiolib.h</name>
    <path>/tmp/pspdev/pspsdk/src/audio/</path>
    <filename>pspaudiolib_8h</filename>
    <class kind="struct">psp_audio_channelinfo</class>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NUM_AUDIO_CHANNELS</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>9875df89fd0fe28a4e64a92dc43f42f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NUM_AUDIO_SAMPLES</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>dacd926aacc7ce4d3ce6fbe4859feb02</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_VOLUME_MAX</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>ee826c90f9532274079cb8f93ef38767</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>pspAudioCallback_t</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>232d5800a0497d47bb161fadcc76ac75</anchor>
      <arglist>)(void *buf, unsigned int reqn, void *pdata)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>pspAudioThreadfunc_t</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>e0fe99b195060d1d89368914f4f3e3ce</anchor>
      <arglist>)(int args, void *argp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspAudioInit</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>b8037a432302ae4ff4d89710e59919f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspAudioEndPre</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>ee3dbcaf12a863ffcf6b2f679e749ebf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspAudioEnd</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>358b09d96d8a7ac9921dbe70630878a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspAudioSetVolume</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>a793d0e240f59c0fb97c571fd86a5c77</anchor>
      <arglist>(int channel, int left, int right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspAudioChannelThreadCallback</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>27833bb82018bcba67faff678e796de1</anchor>
      <arglist>(int channel, void *buf, unsigned int reqn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspAudioSetChannelCallback</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>0b6a8c025156c55f07fe27b2051e1053</anchor>
      <arglist>(int channel, pspAudioCallback_t callback, void *pdata)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspAudioOutBlocking</name>
      <anchorfile>pspaudiolib_8h.html</anchorfile>
      <anchor>6022c5aa649231ba6ba56ccf9392fa2b</anchor>
      <arglist>(unsigned int channel, unsigned int vol1, unsigned int vol2, void *buf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>as_reg_compat.h</name>
    <path>/tmp/pspdev/pspsdk/src/base/</path>
    <filename>as__reg__compat_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>zero</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>361b1d0588e13a7b5994f24b40138ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>at</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>49051184e38a66c46d0d914b0180ca0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>v0</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>2b3f75463b42545c79b95790e5bc0329</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>v1</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>e6c3ee9933cc50ea02782419401e84f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>a0</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>a42b800f0f58b50bc7604c67cc2853ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>a1</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>b89a77e63a7226fffaecb2e2c2ab5219</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>a2</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>a3fd046b2956875cf908d73a51a96b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>a3</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>2ef3c16c90bcffd5105806b0180c9a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>t0</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>30084bbf7aceeb26e3e6c2dbc88cfa33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>t1</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>65f7891fccbfcf7d08964555630773b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>t2</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>a4652e2d6053d420dcbea07a113db5fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>t3</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>71a491fa5f35065b954a3001ebed0f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>t4</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>49808b2a2a734d04d911b470650d62ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>t5</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>23736b7d7e692a622d949bf0f5a0381a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>t6</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>3251c52844f479a53f9aaf92b969e7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>t7</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>bcb950951e0465c8084f450b16b27388</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>s0</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>83fef61a4d1350cc7e3eb6ba499d8449</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>s1</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>09dff3d9a89874939fa7cc9d056b114c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>s2</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>3ec77fc652b1787d9ace19f0f8fb6072</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>s3</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>20531fe98982898fb1f3f997b54995ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>s4</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>0ecc63c812e4aac66e23514da35af9cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>s5</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>1dcda58963e0d3d8f04c25f3d75f0971</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>s6</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>2e16c3751b528f4b73722b1d09d9f76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>s7</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>4314db02eb192868fcba723f4896b79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>t8</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>615d3eec77486053814547832b23de2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>t9</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>80523f21f0b3b4443a9dd0d33cc1fd9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>k0</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>8d58e214b7b5b075466aecc6c0c295ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>k1</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>a786777ce0a77f3d766d53dfa93da3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>gp</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>e9c24f3b396f6bdaacd0e52f68b9a314</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sp</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>8d40798874dab99986478ef00ff3e297</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>fp</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>e771351dd440a8640270282362e338d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ra</name>
      <anchorfile>as__reg__compat_8h.html</anchorfile>
      <anchor>6c3a7669c6bdfd66528633d977cdb6b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psptypes.h</name>
    <path>/tmp/pspdev/pspsdk/src/base/</path>
    <filename>psptypes_8h</filename>
    <class kind="struct">ScePspSRect</class>
    <class kind="struct">ScePspIRect</class>
    <class kind="struct">ScePspL64Rect</class>
    <class kind="struct">ScePspFRect</class>
    <class kind="struct">ScePspSVector2</class>
    <class kind="struct">ScePspIVector2</class>
    <class kind="struct">ScePspL64Vector2</class>
    <class kind="struct">ScePspFVector2</class>
    <class kind="union">ScePspVector2</class>
    <class kind="struct">ScePspSVector3</class>
    <class kind="struct">ScePspIVector3</class>
    <class kind="struct">ScePspL64Vector3</class>
    <class kind="struct">ScePspFVector3</class>
    <class kind="union">ScePspVector3</class>
    <class kind="struct">ScePspSVector4</class>
    <class kind="struct">ScePspIVector4</class>
    <class kind="struct">ScePspL64Vector4</class>
    <class kind="struct">ScePspFVector4</class>
    <class kind="struct">ScePspFVector4Unaligned</class>
    <class kind="union">ScePspVector4</class>
    <class kind="struct">ScePspIMatrix2</class>
    <class kind="struct">ScePspFMatrix2</class>
    <class kind="union">ScePspMatrix2</class>
    <class kind="struct">ScePspIMatrix3</class>
    <class kind="struct">ScePspFMatrix3</class>
    <class kind="union">ScePspMatrix3</class>
    <class kind="struct">ScePspIMatrix4</class>
    <class kind="struct">ScePspIMatrix4Unaligned</class>
    <class kind="struct">ScePspFMatrix4</class>
    <class kind="struct">ScePspFMatrix4Unaligned</class>
    <class kind="union">ScePspMatrix4</class>
    <class kind="struct">ScePspFQuaternion</class>
    <class kind="struct">ScePspFQuaternionUnaligned</class>
    <class kind="struct">ScePspFColor</class>
    <class kind="struct">ScePspFColorUnaligned</class>
    <class kind="union">ScePspUnion32</class>
    <class kind="union">ScePspUnion64</class>
    <class kind="union">ScePspUnion128</class>
    <class kind="struct">ScePspDateTime</class>
    <member kind="define">
      <type>#define</type>
      <name>_PSPTYPES_H_</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>046ef893d380144f39ad8723a2beeb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>u8</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>92c50087ca0e64fa93fc59402c55f8ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>u16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>ce9d960e74685e2cd84b36132dbbf8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>u32</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>faa62991928fb9fb18ff0db62a040aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>u64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>3f7e2bcbb0b4c338f3c4f6c937cd4234</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int8_t</type>
      <name>s8</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>9e382f207c65ca13ab4ae98363aeda80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>s16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>a980e2c02ba2305e0f489d5650655425</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>s32</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>e9b1af5c037e57a98884758875d3a7c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>s64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>350c6fc928e3bdc6c6486268ac8fb269</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>volatile uint8_t</type>
      <name>vu8</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>fc0480114e6521460db73c241c27d407</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>volatile uint16_t</type>
      <name>vu16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>f330c832a9771ca3e7a27fdeaeb6c59c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>volatile uint32_t</type>
      <name>vu32</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>f72be3e3a584df2103f9efd73dcdb3f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>volatile uint64_t</type>
      <name>vu64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>701f5ef84cb213b4676fcf98fda505d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>volatile int8_t</type>
      <name>vs8</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>88f02a386ebc3b6499aa1283ca208b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>volatile int16_t</type>
      <name>vs16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>620f1fb0e80e88f8b39120b5078a5a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>volatile int32_t</type>
      <name>vs32</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>91483cebc9f19cec9e3fddc1b64271a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>volatile int64_t</type>
      <name>vs64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>91bddbeff611affdd1fbfa2d98e23a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>u_char8</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>5385680a0f59d1be8afd768bacd57251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>u_short16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>454abefef7a116729b4b14948846ccfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>u_int16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>01654b98809814fc1177df4c86efc6b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>u_int32</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>2562bd18340b11f7490b975c522f12c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>u_int64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>8c2b463304bd7f7fa4e9129387ee4f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>u_long64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>4bf77cad2a004b45fa184071b2ef8348</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>char</type>
      <name>char8</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>c9e1c0f508ae0f5f8a2b704a91e1ae86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>short16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>f6974448919d550fac9862aeb4ae9cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>int16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>a0d0fdc87fd135ef2bedb030901cdb9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>int32</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>b7903878916593daecbeb95b98115ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>int64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>7cde0074dfd288f2d70c0e035dacb28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>long64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>670963f3c538c19a154fa565967b746f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>SceUChar8</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>f294bdcad7755f12ab8f48e98c028971</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>SceUShort16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>825c46506a2edbe5e714cf330e1d54bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>SceUInt32</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>b5754ec0168b4b65a5334d9ddada460a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>SceUInt64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>b1bcf7d8b15df17d3b286f6580ba2492</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>SceULong64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>f47723b332a4cf70bd27c027e1e65c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>char</type>
      <name>SceChar8</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>e7ab720f6a5ad3074734ca6dacfdd2a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>SceShort16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>6ac76d3692b13ab566275e1a0c6e2fa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>SceInt32</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>65a319f178d71bb18ca0a0f47eb36385</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>SceInt64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>a705ed0781e372b13b3f964be7e5b161</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>SceLong64</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>8eb39f117cc18b32b8ea6e5b75156429</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>SceFloat</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>ff9822a21436b59d750edd910b390e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>SceFloat32</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>9b3b844b1a60926dc6db6a721d8449c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short unsigned int</type>
      <name>SceWChar16</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>c67a58a498e8938c490b9ce043bf29e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SceWChar32</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>fb0bc24b44c27b9b0ae8200b1467c9bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>SceBool</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>492e1dc38bbe2713a4c93c64ec127d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>SceVoid</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>3c8a0746fb1e68de4a180ba16ab4c134</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>ScePVoid</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>86de71e2e740ac5ec08a007e9e2726f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScePspFVector4</type>
      <name>aligned</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>d3fdc5cfa9d0dc7e3c1407d22f9e2d81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScePspVector4</type>
      <name>aligned</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>01137ddd0aa5335377ba72b85b94bf3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScePspIMatrix4</type>
      <name>aligned</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>dd94e61f82c0228bd6dc30e13c6ab29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScePspFMatrix4</type>
      <name>aligned</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>20eb13e37c1563068dace07b9a8e68bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScePspFQuaternion</type>
      <name>aligned</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>c3456fc8f63ad04888e3c3df17781647</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScePspFColor</type>
      <name>aligned</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>dbcdc8c3cb34ea135b2b73d137e530fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>ScePspRGBA8888</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>f73343681b66d7f92a350e61e69d96cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>ScePspRGBA4444</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>96aa894de4cdcfff47add1bb85a3e3fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>ScePspRGBA5551</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>0dbd5492e4eb1822fc99d3c84391f613</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>ScePspRGB565</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>00eb08e2eb441b3781f75ee5a3d41b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScePspUnion128</type>
      <name>aligned</name>
      <anchorfile>psptypes_8h.html</anchorfile>
      <anchor>9f717004a391c280b1140e58a42e26ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspctrl.h</name>
    <path>/tmp/pspdev/pspsdk/src/ctrl/</path>
    <filename>pspctrl_8h</filename>
    <class kind="struct">SceCtrlData</class>
    <class kind="struct">SceCtrlLatch</class>
    <member kind="enumeration">
      <name>PspCtrlButtons</name>
      <anchor>gc080131ea3904c97efb6c31b1c4deb10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_SELECT</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10d602fe3cbb11af7d64cf0b026fd85ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_START</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb1083e1c527a4ffa833285106fb06e7409d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_UP</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb1006adc5c729726b68c158523f42ec2f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_RIGHT</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb100a9aa3f41b0eceb0570d5a44fbb98ba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_DOWN</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb1098174c2018bbe81da89c184147cef4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_LEFT</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10b1f3734d378520b3dd40eae9a056eab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_LTRIGGER</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10963eb5b0694c1d3743b2cad51aae576f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_RTRIGGER</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10693b6d46deb030ca8e20c02b2fb56076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_TRIANGLE</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10c4d072525ea17c12cbc96eeb52b1edfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_CIRCLE</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10a6f5a4ab35b6bb385151fea86b32781f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_CROSS</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb103198f413c14494e38dc9bd7d03ec48c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_SQUARE</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb100d39b80f965fd4f5a8b643ad850f77ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_HOME</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10f41ad6b8d068398a9a03c6158007978e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_HOLD</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb1017d94c81e78bb8152fcbec71514871c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_NOTE</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb1012d9fd8c1c68986f8feee0bf8e0729b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_SCREEN</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10b8fdbeea9bf93449489b22d48924bb54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_VOLUP</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb106809fd0241f39dc51ffe9f99b6365eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_VOLDOWN</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10de97447183c8eaf6438cbc1035b58607</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_WLAN_UP</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10e6512a1de7855d7c27f4c75cc2a1d4d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_REMOTE</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb104f94cffe72dda91a5158e6e05ce739e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_DISC</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10a9e6e64dff7456e24ccc45e00a2e9bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_MS</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb108fce19cf9d00d074d4ee22193ab33682</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspCtrlMode</name>
      <anchor>g96dbe09509f8f258460c3f4eac17e2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_MODE_DIGITAL</name>
      <anchor>gg96dbe09509f8f258460c3f4eac17e2d741bb88c9849adda182c1c0e044d9271d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_MODE_ANALOG</name>
      <anchor>gg96dbe09509f8f258460c3f4eac17e2d7dfda9a89371309d59a86b018a34365c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlSetSamplingCycle</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g38cf8d7ba138a0c0edbedb5fd55731be</anchor>
      <arglist>(int cycle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlGetSamplingCycle</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g4d8bc5a7ff3d7e0de7745478b6591540</anchor>
      <arglist>(int *pcycle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlSetSamplingMode</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>gd4ffc21082be15723e6d1eb0979417e9</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlGetSamplingMode</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g29caa4711ddf8755fdf667f81a8d8de9</anchor>
      <arglist>(int *pmode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlPeekBufferPositive</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>gb7da915280028d02754ea42effacf995</anchor>
      <arglist>(SceCtrlData *pad_data, int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlPeekBufferNegative</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g2de9122992b1c88cbe07715f2ae45d8e</anchor>
      <arglist>(SceCtrlData *pad_data, int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlReadBufferPositive</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>gb6f0094cadc48b008c2079a9e89fba7f</anchor>
      <arglist>(SceCtrlData *pad_data, int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlReadBufferNegative</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>gded41c0b81c56158d720539cd7ced12e</anchor>
      <arglist>(SceCtrlData *pad_data, int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlPeekLatch</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g0bbdc4798a87ee1ceb0246aaf9bb65bc</anchor>
      <arglist>(SceCtrlLatch *latch_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlReadLatch</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g440b3c15e9c77294fd04a4c1d378b8a6</anchor>
      <arglist>(SceCtrlLatch *latch_data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspctrl_kernel.h</name>
    <path>/tmp/pspdev/pspsdk/src/ctrl/</path>
    <filename>pspctrl__kernel_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>sceCtrlSetButtonMasks</name>
      <anchorfile>pspctrl__kernel_8h.html</anchorfile>
      <anchor>74256fe44011cce865ce6f86827fd662</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceCtrlGetButtonMask</name>
      <anchorfile>pspctrl__kernel_8h.html</anchorfile>
      <anchor>9b047d268338c7facfb2934e4f78c0e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceCtrlRegisterButtonCallback</name>
      <anchorfile>pspctrl__kernel_8h.html</anchorfile>
      <anchor>5cd2a32771bfb28447aafa3a076582c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceCtrl_driver_7CA723DC</name>
      <anchorfile>pspctrl__kernel_8h.html</anchorfile>
      <anchor>0098602b15150a53f9130ba1505ecb42</anchor>
      <arglist>(unsigned int mask, unsigned type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrl_driver_5E77BC8A</name>
      <anchorfile>pspctrl__kernel_8h.html</anchorfile>
      <anchor>082920926acca6ceb0d77477f53f2e2d</anchor>
      <arglist>(unsigned int mask)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrl_driver_5C56C779</name>
      <anchorfile>pspctrl__kernel_8h.html</anchorfile>
      <anchor>4baa2807c5564dab8e70e70c3e330bae</anchor>
      <arglist>(int no, unsigned int mask, void(*cb)(int, int, void *), void *arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>callstack.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>callstack_8c</filename>
    <includes id="pspdebug_8h" name="pspdebug.h" local="yes" imported="no">pspdebug.h</includes>
    <class kind="struct">_returnCache</class>
    <member kind="define">
      <type>#define</type>
      <name>RESTORE_RETURNVAL</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>7e3a61d6a58d16769b88aa3536387025</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RESTORE_RETURNVAL_MASK</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>37c3934b7717ffd2f0ffabde930a2cde</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RESTORE_RETURNVAL2</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>625d01d90b94caad0712df67520169a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RESTORE_RETURNVAL3</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>4eff45927fcb03db8ea06cab4f8a4385</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADJUST_STACKP_C</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>27527a1ad3cd9bcf83c8a5765ff45243</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADJUST_STACKP_C_MASK</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>d7d43962630b101a5e3ac8e5765bcabb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADJUST_STACKP_V</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>e510f17f77733e7f8b70c18b5100b123</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADJUST_STACKP_V_MASK</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>379af0e8e88abde0380308f180c5e959</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET_UPPER_C</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>ecf5fc37c17742669b1281b0eb2c0ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET_UPPER_C_MASK</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>d566dce274e24c7d345a5c3058c55cea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OR_LOWER_C</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>57bba72c34997fed29be063dd94dcba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OR_LOWER_C_MASK</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>8bd743ad01ebad690bbf8ba436581932</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET_LOWER_C</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>b33055cdc48c8666b481f5778c65066d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET_LOWER_C_MASK</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>b4fe6428cd0d57e4d1101f9cafadd90d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETURN</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>6a0e6b80dd3d5ca395cf58151749f5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CALL</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>39d65ffdc09f44e301e690309f1473c4</anchor>
      <arglist>(f)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_SIZE</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>d6074dd11ab3c97c8135c43aab03ae95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>69ca5315cae3075e1fcd22b17fdbdf05</anchor>
      <arglist>(ra)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>a8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>a93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_returnCache</type>
      <name>ReturnCacheRec</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>3a5fd55b53471e6be62539307658f795</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_returnCache *</type>
      <name>ReturnCachePtr</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>43ee70d9864d4ffddc8316ca19dfb664</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Bool</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>fdcfe6db5bea87bd493a3fe2c513d5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned int *</type>
      <name>pspGetReturnAddress</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>d4674fe49f08a17ffd21712022aa12c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int *</type>
      <name>pspGetStackPointer</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>e28aa5b7642a98273902c7d04a24e5b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>callstack_8c.html</anchorfile>
      <anchor>e66f6b31b5ad750f1fe042a706a4e3d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugGetStackTrace</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>ge7d79791ee824851275743e7b14baa94</anchor>
      <arglist>(unsigned int *results, int max)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>exception.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>exception_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdisplay_8h" name="pspdisplay.h" local="no" imported="no">pspdisplay.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <member kind="function">
      <type>void</type>
      <name>_pspDebugExceptionHandler</name>
      <anchorfile>exception_8c.html</anchorfile>
      <anchor>f7ca2aac32343643219a862fb831a254</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterDefaultExceptionHandler</name>
      <anchorfile>exception_8c.html</anchorfile>
      <anchor>c1d4ba4d5f4c1330284d03bfd842728d</anchor>
      <arglist>(void *func)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallErrorHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g3c958d6fd5eafdd6fba0b09f7a36cdbb</anchor>
      <arglist>(PspDebugErrorHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugDumpException</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g99fae026f36eb39cef48a9bd047a3b89</anchor>
      <arglist>(PspDebugRegBlock *regs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_pspDebugTrapEntry</name>
      <anchorfile>exception_8c.html</anchorfile>
      <anchor>a0446eca6a754224cc920ae40cddfae2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>PspDebugRegBlock</type>
      <name>_pspDebugExceptRegs</name>
      <anchorfile>exception_8c.html</anchorfile>
      <anchor>f2bd0537bf07d649e868193e4d4a6718</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>font.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>font_8c</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <member kind="variable">
      <type>u8</type>
      <name>msx</name>
      <anchorfile>font_8c.html</anchorfile>
      <anchor>fd6d8db70c0aefa39fc4dea1108e309b</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gdb-kernellib.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>gdb-kernellib_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <member kind="function">
      <type>void</type>
      <name>putDebugChar</name>
      <anchorfile>gdb-kernellib_8c.html</anchorfile>
      <anchor>7ac497fcfd50ea686e300ac6f7807f73</anchor>
      <arglist>(char ch)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getDebugChar</name>
      <anchorfile>gdb-kernellib_8c.html</anchorfile>
      <anchor>9ee15faf44247e5c6914d7c90db361a8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheWBinvAll</name>
      <anchorfile>gdb-kernellib_8c.html</anchorfile>
      <anchor>fe9ea255e7e3cae3773e551169c9b39e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelIcacheClearAll</name>
      <anchorfile>gdb-kernellib_8c.html</anchorfile>
      <anchor>25e2eacbf67f0a0132bf6550b5e31f2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_gdbSupportLibFlushCaches</name>
      <anchorfile>gdb-kernellib_8c.html</anchorfile>
      <anchor>9f9107672936277d9e562923393e8ce0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_gdbSupportLibReadByte</name>
      <anchorfile>gdb-kernellib_8c.html</anchorfile>
      <anchor>eeab7ed2321b1e1ec556e9871f8cfeaf</anchor>
      <arglist>(unsigned char *address, unsigned char *dest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_gdbSupportLibWriteByte</name>
      <anchorfile>gdb-kernellib_8c.html</anchorfile>
      <anchor>eb706976fd9f4890ffb7f6f88cd4669b</anchor>
      <arglist>(char val, unsigned char *dest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_gdbSupportLibInit</name>
      <anchorfile>gdb-kernellib_8c.html</anchorfile>
      <anchor>26c32508b1b70f048db8e1da4fd1edc1</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gdb-stub.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>gdb-stub_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <class kind="struct">sw_breakpoint</class>
    <class kind="struct">hard_trap_info</class>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_PRINTF</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>7f7c16f15b51a8706eca9914f378323f</anchor>
      <arglist>(fmt,)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_BUF</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>2491303d0fe260aaba8f46717cda66cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SW_BREAK_INST</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>6b6a3fdc66e820a4b6a4ae1e59b38db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEQ_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>ff4236d6969a97e2b21197ee4311c374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEQL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>c2727fb99560e1afbf939e2f7686e8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BGTZ_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>644799a4623f760fa9dc8e62138e9a39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BGTZL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>0d07d8a93f5ab2e569cd853858dd8e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLEZ_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>800cb9a391a3d852ce222772947b3861</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLEZL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>3dd0747b12360f6082bd9ee85afe0447</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BNE_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>f4f2e2e981e19fdaf1e2913235ec1fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BNEL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>1c3f8ed7d5c6378cbd4b89975cadecfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REGIMM_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>fdb5fb4c62dc26338fdb50db6ac156c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BGEZ_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>1e8ae11aa0c0ff876f089553cc7bef7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BGEZAL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>02a602dafabb727700bb5934bf743733</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BGEZALL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>ddd5a6b26b9cb23241ff70e8a1db6cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BGEZL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>0515cb77595767192b702e3b94b84488</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLTZ_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>01bcbefcf686bc5ad55eb469793db1d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLTZAL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>e2cf812c390a0e6a260e511fe7180303</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLTZALL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>0ee9932ece56fce8347168f6b4e48a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLTZL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>f258049e02e713dac8fdd9859db9ea99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>3e79b4c384dcf483b0f68a35e4c56908</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>JAL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>174ab5bba54ee87b257f727dd30da193</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPECIAL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>766a59024e8d4c782684a140262be8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>JALR_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>7f088b2cf8c49c7160a5c55e611deee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>JR_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>3c82754f1732c9c87625598759b0a631</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COP0_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>52b76d81b37c8584bfe560ebecf5934b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COP1_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>6c1b68f6daf6f6532a935c49abe95841</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COP2_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>113483de85a476239773e5e8a501bd47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BCXF_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>6ad9d467f8098bd5eea3930d2072678c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BCXFL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>033bce50beb3d1e14cb28922a3110c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BCXT_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>56b9fe2f28976e2a96f6c28ece6c4ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BCXTL_OPCODE</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>06b58f7d9297a916c7007ccd94aa5026</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugBreakpoint</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>6267156e18eb382c8919f703627ae73c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putDebugChar</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>7ac497fcfd50ea686e300ac6f7807f73</anchor>
      <arglist>(char ch)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getDebugChar</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>9ee15faf44247e5c6914d7c90db361a8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_gdbSupportLibWriteByte</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>eb706976fd9f4890ffb7f6f88cd4669b</anchor>
      <arglist>(char val, unsigned char *dest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_gdbSupportLibReadByte</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>eeab7ed2321b1e1ec556e9871f8cfeaf</anchor>
      <arglist>(unsigned char *address, unsigned char *dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugResumeFromException</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>2185af14815577c28650c4f0171dfff3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_gdbSupportLibFlushCaches</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>9f9107672936277d9e562923393e8ce0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSuspendIntr</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>60575fdae2b4ba2433889a5cb632390f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelResumeIntr</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>b4c78511c486ec9144eafc4cfd27500f</anchor>
      <arglist>(int intr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_GdbExceptionHandler</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>a2b0689f659f55cbc52db137a256c380</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_gdbSupportLibInit</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>26c32508b1b70f048db8e1da4fd1edc1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugGdbStubInit</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g21799ac24d3d70e71f1920b24f8bc5bb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build_trap_cmd</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>4c560535898c0ccd96fc1b5f7b223eaf</anchor>
      <arglist>(int sigval, PspDebugRegBlock *regs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>asm</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>e4023218d73706726311b8dff6253f14</anchor>
      <arglist>(&quot;.global pspDebugBreakpoint\n&quot;&quot;.set noreorder\n&quot;&quot;pspDebugBreakpoint:\tbreak\n&quot;&quot;jr    $31\n&quot;&quot;nop\n&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>_pspDebugResumePatch</name>
      <anchorfile>gdb-stub_8c.html</anchorfile>
      <anchor>3c5991666b12f788b3363c98cf3b6079</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gdb-userlib.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>gdb-userlib_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <member kind="function">
      <type>void</type>
      <name>putDebugChar</name>
      <anchorfile>gdb-userlib_8c.html</anchorfile>
      <anchor>7ac497fcfd50ea686e300ac6f7807f73</anchor>
      <arglist>(char ch)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getDebugChar</name>
      <anchorfile>gdb-userlib_8c.html</anchorfile>
      <anchor>9ee15faf44247e5c6914d7c90db361a8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheWBinvAll</name>
      <anchorfile>gdb-userlib_8c.html</anchorfile>
      <anchor>fe9ea255e7e3cae3773e551169c9b39e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelIcacheClearAll</name>
      <anchorfile>gdb-userlib_8c.html</anchorfile>
      <anchor>25e2eacbf67f0a0132bf6550b5e31f2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_gdbSupportLibReadByte</name>
      <anchorfile>gdb-userlib_8c.html</anchorfile>
      <anchor>eeab7ed2321b1e1ec556e9871f8cfeaf</anchor>
      <arglist>(unsigned char *address, unsigned char *dest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_gdbSupportLibWriteByte</name>
      <anchorfile>gdb-userlib_8c.html</anchorfile>
      <anchor>eb706976fd9f4890ffb7f6f88cd4669b</anchor>
      <arglist>(char val, unsigned char *dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_gdbSupportLibFlushCaches</name>
      <anchorfile>gdb-userlib_8c.html</anchorfile>
      <anchor>9f9107672936277d9e562923393e8ce0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_gdbSupportLibInit</name>
      <anchorfile>gdb-userlib_8c.html</anchorfile>
      <anchor>26c32508b1b70f048db8e1da4fd1edc1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>g_initialised</name>
      <anchorfile>gdb-userlib_8c.html</anchorfile>
      <anchor>8840923246c0120045661b915823dafd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>kprintf.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>kprintf_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterKprintfHandler</name>
      <anchorfile>kprintf_8c.html</anchorfile>
      <anchor>c88f93d64ceafcf7bae7343c05f1a227</anchor>
      <arglist>(void *func, void *args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallKprintfHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0c2d5eaaf0d22cdff836ff320088a88b</anchor>
      <arglist>(PspDebugKprintfHandler handler)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>profiler.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>profiler_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PROFILER_REG_BASE</name>
      <anchorfile>profiler_8c.html</anchorfile>
      <anchor>cabe0b3b2ddf621b2ef28579db406995</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROFILER_REG_COUNT</name>
      <anchorfile>profiler_8c.html</anchorfile>
      <anchor>281dbd45afb0d205684fd36d464def81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerEnable</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gda92d9c1ce23a795b25ab4ab5b3ead73</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerDisable</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g477c88ead96847d58dcee3042c36b7e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerClear</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g30815af8ac341a0810ed6da0f518ea0b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerGetRegs</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g71b88c22bd36e9a18bfd7619bfb16dc7</anchor>
      <arglist>(PspDebugProfilerRegs *regs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerPrint</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g5c83cbc8151971c490e9ece83aa78a91</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspdebug.h</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>pspdebug_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspmoduleinfo_8h" name="pspmoduleinfo.h" local="no" imported="no">pspmoduleinfo.h</includes>
    <class kind="struct">_PspDebugRegBlock</class>
    <class kind="struct">_PspDebugStackTrace</class>
    <class kind="struct">_PspDebugProfilerRegs</class>
    <member kind="typedef">
      <type>_PspDebugRegBlock</type>
      <name>PspDebugRegBlock</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gf8d9fc67d83617eed6366d7373f4feb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PspDebugErrorHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>ga07aff507b18bcbe00061a66e6051aee</anchor>
      <arglist>)(PspDebugRegBlock *regs)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>PspDebugKprintfHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g5794b7a2e2e596302fb474b2ee4d51e2</anchor>
      <arglist>)(const char *format, u32 *args)</arglist>
    </member>
    <member kind="typedef">
      <type>_PspDebugStackTrace</type>
      <name>PspDebugStackTrace</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g4c92813fe84b2d2db01d06b51304576a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_PspDebugProfilerRegs</type>
      <name>PspDebugProfilerRegs</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gf305cb386bf6644509d529ec10af4adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>PspDebugPrintHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g6832689be2b410b9b4e38d88e926013e</anchor>
      <arglist>)(const char *data, int len)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>PspDebugInputHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>ga73e9c04df2bfdd471e951d16a683aac</anchor>
      <arglist>)(char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenInit</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gb24c5c5086373fb3f73f697599ab319b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenInitEx</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0ef4d04d3d8d1a37d89ff02c6243f454</anchor>
      <arglist>(void *vram_base, int mode, int setup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenPrintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g67b7e77414f3c5c254e3b16c4f3e8ca3</anchor>
      <arglist>(const char *fmt,...) __attribute__((format(printf</arglist>
    </member>
    <member kind="function">
      <type>void void</type>
      <name>pspDebugScreenSetBackColor</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g2c5a2783ab0395683307809c96d06631</anchor>
      <arglist>(u32 color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenSetTextColor</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gb1751e31775b604a2d523761e033bce0</anchor>
      <arglist>(u32 color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenSetColorMode</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g03c456352997b2220d4d1929f981ed41</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenPutChar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g114089a48f311499c48782079dde52ff</anchor>
      <arglist>(int x, int y, u32 color, u8 ch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenSetXY</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g3fa70748882c7721499d3546c560d873</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenSetOffset</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g3744543fbab5314d3966b68d1fc71975</anchor>
      <arglist>(int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenSetBase</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gbee9c157300b2d3d48b4c2247a1af9a6</anchor>
      <arglist>(u32 *base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugScreenGetX</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g9783b0f8e313d916efba1c660ad89316</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugScreenGetY</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g7cef92ba9751dd75a12cf91b1e335641</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenClear</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g9d3d3812e154fde63f19b3eaf35bd57f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugScreenPrintData</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g3222992580abcfd13cfb26e67a3f5808</anchor>
      <arglist>(const char *buff, int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugScreenPuts</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g6bb41fc101dcd6ebcafa450eeb28aa83</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugGetStackTrace</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>ge7d79791ee824851275743e7b14baa94</anchor>
      <arglist>(unsigned int *results, int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallErrorHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g3c958d6fd5eafdd6fba0b09f7a36cdbb</anchor>
      <arglist>(PspDebugErrorHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugDumpException</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g99fae026f36eb39cef48a9bd047a3b89</anchor>
      <arglist>(PspDebugRegBlock *regs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallKprintfHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0c2d5eaaf0d22cdff836ff320088a88b</anchor>
      <arglist>(PspDebugKprintfHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugGetStackTrace2</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>geb15f6270468ffe5b321811288f0b6ce</anchor>
      <arglist>(PspDebugRegBlock *regs, PspDebugStackTrace *trace, int max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerEnable</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gda92d9c1ce23a795b25ab4ab5b3ead73</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerDisable</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g477c88ead96847d58dcee3042c36b7e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerClear</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g30815af8ac341a0810ed6da0f518ea0b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerGetRegs</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g71b88c22bd36e9a18bfd7619bfb16dc7</anchor>
      <arglist>(PspDebugProfilerRegs *regs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerPrint</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g5c83cbc8151971c490e9ece83aa78a91</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallStdinHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g4ad6d941b6f9685097753b492484b72c</anchor>
      <arglist>(PspDebugInputHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallStdoutHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g146321cbb09124bcd8dc980d973184fb</anchor>
      <arglist>(PspDebugPrintHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallStderrHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g431f3e4aa6d48be0f3eef728bb72eccb</anchor>
      <arglist>(PspDebugPrintHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioPutchar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g2c653ac86cdde9e3b49320181082c032</anchor>
      <arglist>(int ch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugSioGetchar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g1f4fcce25cda39e3824964209b71359b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioPuts</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gbfa5a17fd3247e52f3931c42925d4c30</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugSioPutData</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g1b37cb52375a34f9980654d4a7b5ac3d</anchor>
      <arglist>(const char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugSioPutText</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g2e5054480c8f6c043cddcf4f66d6b945</anchor>
      <arglist>(const char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioInit</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g62216e1680b34089e383f21652ef0362</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioSetBaud</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g067f407660f4f7c2f5597e058af4f0dd</anchor>
      <arglist>(int baud)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugEnablePutchar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g5d6b5d2dfa8f5410c8ba860fca75c43d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioInstallKprintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>ga9615d508def61d0d5fdc1929f22d65b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugGdbStubInit</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g21799ac24d3d70e71f1920b24f8bc5bb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugBreakpoint</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g6267156e18eb382c8919f703627ae73c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioEnableKprintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0139c524cb26cc4808b713e3df0a9c47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioDisableKprintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0fc6e948191f8889803ec9ddf0f30189</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scr_printf.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>scr__printf_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdisplay_8h" name="pspdisplay.h" local="no" imported="no">pspdisplay.h</includes>
    <includes id="pspge_8h" name="pspge.h" local="no" imported="no">pspge.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SCREEN_WIDTH</name>
      <anchorfile>scr__printf_8c.html</anchorfile>
      <anchor>0d76a3844685e2aac7d87342ff7459b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SCREEN_HEIGHT</name>
      <anchorfile>scr__printf_8c.html</anchorfile>
      <anchor>773893f15e251243121c8ad1ae6bbf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_LINE_SIZE</name>
      <anchorfile>scr__printf_8c.html</anchorfile>
      <anchor>566171f653f06e90c747b069c9cbdabd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sio.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>sio_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PSP_UART4_FIFO</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>f9c3c64f4e6fef8626fcb90e9770c26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_UART4_STAT</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>857c1ca03a3370d55ee821c3f434efe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_UART4_DIV1</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>59c9dc0b297a21831695519d3e7eee5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_UART4_DIV2</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>78aa3b45c8dc3132525ddec218da9b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_UART4_CTRL</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>07fd005897c0848926c7e57e2a941e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_UART_CLK</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>49a0a79fadc434c5ff70187c4fc0b051</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_UART_TXFULL</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>a8cc6a8bf71fbf8fe536f775175dbaf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_UART_RXEMPTY</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>c3e9715300087af9bc1ee6c3fd7a34db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmEnd</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>0f17f895b965e88dd227af60d79c1119</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregUartIoEnable</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>c01cdee344cb854a4a245fb538f160e8</anchor>
      <arglist>(int uart)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSyscon_driver_44439604</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>31d7dbf4e1fae02b7a5b0a7dccd03a90</anchor>
      <arglist>(int power)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioPutchar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g2c653ac86cdde9e3b49320181082c032</anchor>
      <arglist>(int ch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugSioGetchar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g1f4fcce25cda39e3824964209b71359b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioPuts</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gbfa5a17fd3247e52f3931c42925d4c30</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugSioPutData</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g1b37cb52375a34f9980654d4a7b5ac3d</anchor>
      <arglist>(const char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugSioPutText</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g2e5054480c8f6c043cddcf4f66d6b945</anchor>
      <arglist>(const char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioSetBaud</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g067f407660f4f7c2f5597e058af4f0dd</anchor>
      <arglist>(int baud)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioInit</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g62216e1680b34089e383f21652ef0362</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugEnablePutchar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g5d6b5d2dfa8f5410c8ba860fca75c43d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioInstallKprintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>ga9615d508def61d0d5fdc1929f22d65b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioEnableKprintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0139c524cb26cc4808b713e3df0a9c47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioDisableKprintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0fc6e948191f8889803ec9ddf0f30189</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sceKernelRemoveByDebugSection</name>
      <anchorfile>sio_8c.html</anchorfile>
      <anchor>df19eb4c586b37872c688ae9d0a5c436</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stacktrace.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>stacktrace_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CALL</name>
      <anchorfile>stacktrace_8c.html</anchorfile>
      <anchor>a980b5e5e502cf62bdca6c0452b97516</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CALL_MASK</name>
      <anchorfile>stacktrace_8c.html</anchorfile>
      <anchor>4f0886213b4add255ee7abd0b7d90535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_CALL</name>
      <anchorfile>stacktrace_8c.html</anchorfile>
      <anchor>d96bb8f08060616f2f3b7934328fea6f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CALL_ADDR</name>
      <anchorfile>stacktrace_8c.html</anchorfile>
      <anchor>76b960ea991fa92988bc6ae7b05af60c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF_START</name>
      <anchorfile>stacktrace_8c.html</anchorfile>
      <anchor>eb4ecd69b1ab17d92c6b4224f7cd237c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF_END</name>
      <anchorfile>stacktrace_8c.html</anchorfile>
      <anchor>b99bb0cee05d8cca85a1a84cfa486fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugGetStackTrace2</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>geb15f6270468ffe5b321811288f0b6ce</anchor>
      <arglist>(PspDebugRegBlock *regs, PspDebugStackTrace *trace, int max)</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>_ftext</name>
      <anchorfile>stacktrace_8c.html</anchorfile>
      <anchor>faee42f2395da0f681d5c358d4ffac33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>_etext</name>
      <anchorfile>stacktrace_8c.html</anchorfile>
      <anchor>5ab6b5017accd262a998cbb2ed9a32ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stdio.c</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>debug_2stdio_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <includes id="unistd_8h" name="unistd.h" local="no" imported="no">unistd.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>dbgprintf</name>
      <anchorfile>debug_2stdio_8c.html</anchorfile>
      <anchor>439833ee611e73f1a887be3687b3c8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallStdinHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g4ad6d941b6f9685097753b492484b72c</anchor>
      <arglist>(PspDebugInputHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallStdoutHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g146321cbb09124bcd8dc980d973184fb</anchor>
      <arglist>(PspDebugPrintHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallStderrHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g431f3e4aa6d48be0f3eef728bb72eccb</anchor>
      <arglist>(PspDebugPrintHandler handler)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stdio.c</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>libc_2stdio_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspiofilemgr_8h" name="pspiofilemgr.h" local="no" imported="no">pspiofilemgr.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <class kind="struct">__psplibc_FILE</class>
    <member kind="define">
      <type>#define</type>
      <name>STD_IOBUF_TYPE_NONE</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>f68d507f91e28f2be44d2678ba6f6daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STD_IOBUF_TYPE_GE</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>6b230adea9a084a0056b484f8d202f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STD_IOBUF_TYPE_MS</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>6e9743014858566167fe118e2f35856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STD_IOBUF_TYPE_UMD</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>8592a570268c0dd48d5bf3c3641e9898</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STD_IOBUF_TYPE_HOST</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>5c6659325fc6fe5b58609d9b5cb60b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STD_IOBUF_TYPE_STDOUTHOST</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>1df867c6f74961798bfa92daaba2ad5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_NFILE</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>15ace1b18677d23cb2caaf577a435cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOEOF</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>719aebb4b0418c96798465c28867987e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOERR</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>e5b324e6ee43bc6d90b874a7babc6d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOREAD</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>7262cef78990598bbace8871ffa05314</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOWRT</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>47ec54dd9ca148452505d19160495e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IORW</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>740a30a7a19a361848f4e510483ff4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOMYBUF</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>1bb067fbd9b2f698da16b52df626e3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCAL_FILE</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>a54543815e49c1069fd285ece4178e2a</anchor>
      <arglist>(f)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isdigit</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>6fa1e2a306d0a84071e1537071172243</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable">
      <type>FILE</type>
      <name>__iob</name>
      <anchorfile>libc_2stdio_8c.html</anchorfile>
      <anchor>e33ec290f0df2483544c29d44f6f9dc7</anchor>
      <arglist>[_NFILE]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspdisplay.h</name>
    <path>/tmp/pspdev/pspsdk/src/display/</path>
    <filename>pspdisplay_8h</filename>
    <member kind="enumeration">
      <name>PspDisplayPixelFormats</name>
      <anchor>c812cd753a39810cdb2bb6d778103fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DISPLAY_PIXEL_FORMAT_565</name>
      <anchor>c812cd753a39810cdb2bb6d778103feffae67bee04891cbfdb2f91f6718a5f5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DISPLAY_PIXEL_FORMAT_5551</name>
      <anchor>c812cd753a39810cdb2bb6d778103fef8d58e2a9944edc29ea9ed499f20f4005</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DISPLAY_PIXEL_FORMAT_4444</name>
      <anchor>c812cd753a39810cdb2bb6d778103fef0c0fed8d067e7cee52c7e7184d826a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DISPLAY_PIXEL_FORMAT_8888</name>
      <anchor>c812cd753a39810cdb2bb6d778103fef2936620ca66677dfb7a724b1f213aec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspDisplaySetBufSync</name>
      <anchor>58053b0fdb526f9de88ec87a90447dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DISPLAY_SETBUF_IMMEDIATE</name>
      <anchor>58053b0fdb526f9de88ec87a90447dd7a468e8fab1810cebdb9e5184d45c4a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DISPLAY_SETBUF_NEXTFRAME</name>
      <anchor>58053b0fdb526f9de88ec87a90447dd7d4c165359d919752ea3e37ec9eb572f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceDisplaySetMode</name>
      <anchorfile>pspdisplay_8h.html</anchorfile>
      <anchor>59833ad7613106886f022c559e3695d8</anchor>
      <arglist>(int mode, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceDisplayGetMode</name>
      <anchorfile>pspdisplay_8h.html</anchorfile>
      <anchor>fb7c164215202abaf6fc57320dc9b333</anchor>
      <arglist>(int *pmode, int *pwidth, int *pheight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceDisplaySetFrameBuf</name>
      <anchorfile>pspdisplay_8h.html</anchorfile>
      <anchor>20366cfe72e1f0ede3f9ede30012e921</anchor>
      <arglist>(void *topaddr, int bufferwidth, int pixelformat, int sync)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceDisplayGetFrameBuf</name>
      <anchorfile>pspdisplay_8h.html</anchorfile>
      <anchor>cb7c8263f9f2929d19428f8bf8485c1c</anchor>
      <arglist>(void **topaddr, int *bufferwidth, int *pixelformat, int *unk1)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceDisplayGetVcount</name>
      <anchorfile>pspdisplay_8h.html</anchorfile>
      <anchor>901b3b32729ff82b48f1794e1c957005</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceDisplayWaitVblankStart</name>
      <anchorfile>pspdisplay_8h.html</anchorfile>
      <anchor>b921d38b61c45b0472ac0f45660747c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceDisplayWaitVblankStartCB</name>
      <anchorfile>pspdisplay_8h.html</anchorfile>
      <anchor>5ad5f1293ec8b6af9ec3a4096ce85af6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceDisplayWaitVblank</name>
      <anchorfile>pspdisplay_8h.html</anchorfile>
      <anchor>efc710e6670736943ac98036905eff4f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceDisplayWaitVblankCB</name>
      <anchorfile>pspdisplay_8h.html</anchorfile>
      <anchor>30e4012ced538491bfde707629d3899e</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspdisplay_kernel.h</name>
    <path>/tmp/pspdev/pspsdk/src/display/</path>
    <filename>pspdisplay__kernel_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>sceDisplaySetFrameBufferInternal</name>
      <anchorfile>pspdisplay__kernel_8h.html</anchorfile>
      <anchor>9df4b08e8e7c164866bb0e6b2c74a08b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceDisplayGetFrameBufferInternal</name>
      <anchorfile>pspdisplay__kernel_8h.html</anchorfile>
      <anchor>bfd6034a20dbef5068abbda62a51bbd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceDisplay_driver_63E22A26</name>
      <anchorfile>pspdisplay__kernel_8h.html</anchorfile>
      <anchor>ce656060c24a18ada24210964172c474</anchor>
      <arglist>(int pri, void *topaddr, int bufferwidth, int pixelformat, int sync)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceDisplay_driver_5B5AEFAD</name>
      <anchorfile>pspdisplay__kernel_8h.html</anchorfile>
      <anchor>351f8b06b70413b2de203ced6d109d78</anchor>
      <arglist>(int pri, void **topaddr, int *bufferwidth, int *pixelformat, int *unk1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspfpu.c</name>
    <path>/tmp/pspdev/pspsdk/src/fpu/</path>
    <filename>pspfpu_8c</filename>
    <includes id="pspfpu_8h" name="pspfpu.h" local="yes" imported="no">pspfpu.h</includes>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_fcr31</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>f8b6d8aa66b43f7702eebce3dfa458a7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_set_fcr31</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>90e8665e445e2c96804a5699c17c6d02</anchor>
      <arglist>(uint32_t var)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_set_roundmode</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>61b1e65d286808c989dea5117d20738f</anchor>
      <arglist>(enum FpuRoundMode mode)</arglist>
    </member>
    <member kind="function">
      <type>enum FpuRoundMode</type>
      <name>pspfpu_get_roundmode</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>3e161bc5263291584a8c2d334459dad5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_flags</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>eadf2dab0db7290338a962b7b15243dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_clear_flags</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>84cee8299a4519b49a848db7d8cac65f</anchor>
      <arglist>(uint32_t clear)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_enable</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>940a5c70f3931d8ff469d875e4390099</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_set_enable</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>5d0ea510861ac6fb59a84d5feba958c1</anchor>
      <arglist>(uint32_t enable)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_cause</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>4626d869b8023fd322a34c521be28f18</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_clear_cause</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>bcf731d45cfb059e8477279ba2b32c60</anchor>
      <arglist>(uint32_t clear)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_fs</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>0581972cd6ca98b9416877e30474c001</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_set_fs</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>e8bd3ead55b2987688d1d1fdd5902a68</anchor>
      <arglist>(uint32_t fs)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_condbits</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>66bcdcda30601fe8c1b77f9273cc6357</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_clear_condbits</name>
      <anchorfile>pspfpu_8c.html</anchorfile>
      <anchor>e73276cfe615e41cc44196f513cf97c2</anchor>
      <arglist>(uint32_t clear)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspfpu.h</name>
    <path>/tmp/pspdev/pspsdk/src/fpu/</path>
    <filename>pspfpu_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>FPU_RM_MASK</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>4985982da1230840a10d32b729562226</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_FLAGS_POS</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>f0659b0ec0eeda65487502e517e267f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_ENABLE_POS</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>d70ce67d652b345f9d7ef2bddaec6d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_CAUSE_POS</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>8ef37a80e2e75bf2d724bda1798c0c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_CC0_POS</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>3cbee02fb21d91c2816cbb765c3ca959</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_FS_POS</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>01e45408f5729a957079c6916427c355</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_CC17_POS</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>bc45993905010d5243e901fd5131f19f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_FLAGS_MASK</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>19f9e4e0f76c307ea789709e23337347</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_ENABLE_MASK</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>4d0d4ec12f254d7b49bff84a6b62980b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_CAUSE_MASK</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>ea737aa80444920d4c588c4b38ccee81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_CC0_MASK</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>9c4d3787f00320148b93298e7a6160aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_FS_MASK</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>7a51cf3f0b372d76538dddd79cb9783f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FPU_CC17_MASK</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>5942c956c745a41fd4cb3c961570647b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FpuRoundMode</name>
      <anchor>74c80b7ffdb9b920c33306a11405062d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_RN</name>
      <anchor>74c80b7ffdb9b920c33306a11405062d677efb555a4c267ce2b3ba2fa56b39da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_RZ</name>
      <anchor>74c80b7ffdb9b920c33306a11405062ddc7cc977dff0f6d0e615277ee518f12e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_RP</name>
      <anchor>74c80b7ffdb9b920c33306a11405062d69dbbcf26aad146685c9540176d3a4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_RM</name>
      <anchor>74c80b7ffdb9b920c33306a11405062d8271adaa2d70d7c1ae8f1a8a67170142</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FpuExceptions</name>
      <anchor>2cf5b2855d037ebf108c9cfcf9e5e1db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_EXCEPTION_INEXACT</name>
      <anchor>2cf5b2855d037ebf108c9cfcf9e5e1db7f187986b1072c8c102d1fa35ad32503</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_EXCEPTION_UNDERFLOW</name>
      <anchor>2cf5b2855d037ebf108c9cfcf9e5e1db526c46674dd238ff4d5ddfb4a6e23364</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_EXCEPTION_OVERFLOW</name>
      <anchor>2cf5b2855d037ebf108c9cfcf9e5e1db72bd99709d93e3add9ebef405bcde65f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_EXCEPTION_DIVBYZERO</name>
      <anchor>2cf5b2855d037ebf108c9cfcf9e5e1dbd8b372b21d136b2dcea052aa170701b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_EXCEPTION_INVALIDOP</name>
      <anchor>2cf5b2855d037ebf108c9cfcf9e5e1dbcd8a857bb1fff899ddd1fdc341d96a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_EXCEPTION_UNIMPOP</name>
      <anchor>2cf5b2855d037ebf108c9cfcf9e5e1dbe9f458e3346d8f3ffde5491d0aba56d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FPU_EXCEPTION_ALL</name>
      <anchor>2cf5b2855d037ebf108c9cfcf9e5e1db3e540cd74b496c20d7f42bca9bfb577c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_fcr31</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>f8b6d8aa66b43f7702eebce3dfa458a7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_set_fcr31</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>90e8665e445e2c96804a5699c17c6d02</anchor>
      <arglist>(uint32_t var)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_set_roundmode</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>61b1e65d286808c989dea5117d20738f</anchor>
      <arglist>(enum FpuRoundMode mode)</arglist>
    </member>
    <member kind="function">
      <type>enum FpuRoundMode</type>
      <name>pspfpu_get_roundmode</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>3e161bc5263291584a8c2d334459dad5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_flags</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>eadf2dab0db7290338a962b7b15243dd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_clear_flags</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>84cee8299a4519b49a848db7d8cac65f</anchor>
      <arglist>(uint32_t clear)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_enable</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>940a5c70f3931d8ff469d875e4390099</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_set_enable</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>5d0ea510861ac6fb59a84d5feba958c1</anchor>
      <arglist>(uint32_t enable)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_cause</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>4626d869b8023fd322a34c521be28f18</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_clear_cause</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>bcf731d45cfb059e8477279ba2b32c60</anchor>
      <arglist>(uint32_t clear)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_fs</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>0581972cd6ca98b9416877e30474c001</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_set_fs</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>e8bd3ead55b2987688d1d1fdd5902a68</anchor>
      <arglist>(uint32_t fs)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>pspfpu_get_condbits</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>66bcdcda30601fe8c1b77f9273cc6357</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspfpu_clear_condbits</name>
      <anchorfile>pspfpu_8h.html</anchorfile>
      <anchor>e73276cfe615e41cc44196f513cf97c2</anchor>
      <arglist>(uint32_t clear)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspge.h</name>
    <path>/tmp/pspdev/pspsdk/src/ge/</path>
    <filename>pspge_8h</filename>
    <class kind="struct">PspGeContext</class>
    <class kind="struct">PspGeCallbackData</class>
    <member kind="typedef">
      <type>void(*</type>
      <name>PspGeCallback</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>10e6a38825a1ced8b061f1a1a6b778b5</anchor>
      <arglist>)(int id, void *arg)</arglist>
    </member>
    <member kind="enumeration">
      <name>PspGeMatrixTypes</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_BONE0</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a87630ca29232f9f6b31709258624bf97e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_BONE1</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a83a9751cc353b5585be62af839c2c1d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_BONE2</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a8eff24d854c678c54b5ba08eca59981dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_BONE3</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a83af639e0a2cab73fe7a9841f727b0b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_BONE4</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a82c56ef00a6f17ad3654e3e25b6680795</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_BONE5</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a8b346f5e9d95daf798f37b11df6f68fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_BONE6</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a8cd96c1696e0632134d4bc530e22d8904</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_BONE7</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a89552fbadcfb3009176b6bb0ea4abb3a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_WORLD</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a8e2ca9ebb96556ea5e15ca3d4ccca967d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_VIEW</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a8a6938c799888f9c81cdee04a977837af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_PROJECTION</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a867a6ad521c10a4a976b83aef750cf248</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_MATRIX_TEXGEN</name>
      <anchor>531ce3136ec6c4d3b87679e99ac725a893501e4d50a0cbee0ddd03571c902963</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspGeSyncType</name>
      <anchor>84b1c3aa2ad005034892b4a9dcdf8b59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_LIST_DONE</name>
      <anchor>84b1c3aa2ad005034892b4a9dcdf8b599a7af8b44c9d6ebc36062cfe3621b3dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_LIST_QUEUED</name>
      <anchor>84b1c3aa2ad005034892b4a9dcdf8b59cafefce14c7b2954f61817b7c1940110</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_LIST_DRAWING_DONE</name>
      <anchor>84b1c3aa2ad005034892b4a9dcdf8b59c388483dee71029b1824cd16a0d0f08b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_LIST_STALL_REACHED</name>
      <anchor>84b1c3aa2ad005034892b4a9dcdf8b597a583ab7137dc960bf7454a37d8cd8e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_LIST_CANCEL_DONE</name>
      <anchor>84b1c3aa2ad005034892b4a9dcdf8b59788ed0d5e92b24805630aabe4f9b8b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceGeEdramGetSize</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>c8d5bb5f93ce41dd6cd198d99a757d45</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceGeEdramGetAddr</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>2df2df3486e14e68aa866687dd8d3c08</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceGeGetCmd</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>b6d2c8ebf30eb2748fe0d61f6313b76b</anchor>
      <arglist>(int cmd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeGetMtx</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>48513a42875ae3b65edb5fa7873ab337</anchor>
      <arglist>(int type, void *matrix)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeSaveContext</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>a11e106084722d62e431f34f83f5cc4e</anchor>
      <arglist>(PspGeContext *context)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeRestoreContext</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>4a686b1ec63d9622c2857d2185ec3197</anchor>
      <arglist>(const PspGeContext *context)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeListEnQueue</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>24788841847cea15a392c5e002ede084</anchor>
      <arglist>(const void *list, void *stall, int cbid, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeListEnQueueHead</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>357f088ab34366052ea55e772ea16dc3</anchor>
      <arglist>(const void *list, void *stall, int cbid, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeListDeQueue</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>4b9b22ddebb67071e4357b9147ba0fc2</anchor>
      <arglist>(int qid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeListUpdateStallAddr</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>29e4f8be69385afc1e37e9103a5c1494</anchor>
      <arglist>(int qid, void *stall)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeListSync</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>f508d18bab1c713a2a75c3cec8c09637</anchor>
      <arglist>(int qid, int syncType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeDrawSync</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>c0eb8c4d4b455559462a015f697f111a</anchor>
      <arglist>(int syncType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeSetCallback</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>10e0742a08c9f427cafd724a1e4dd7e7</anchor>
      <arglist>(PspGeCallbackData *cb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGeUnsetCallback</name>
      <anchorfile>pspge_8h.html</anchorfile>
      <anchor>8e7f4ae00346e649d342005c4d806e41</anchor>
      <arglist>(int cbid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>callbackFin.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>callbackFin_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>callbackFin</name>
      <anchorfile>callbackFin_8c.html</anchorfile>
      <anchor>45340910494f1418f2c6e9575dfd644d</anchor>
      <arglist>(int id, void *arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>callbackSig.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>callbackSig_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <member kind="function">
      <type>void</type>
      <name>callbackSig</name>
      <anchorfile>callbackSig_8c.html</anchorfile>
      <anchor>52cd96c491c3ee2073085e7d141404f2</anchor>
      <arglist>(int id, void *arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>guInternal.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>guInternal_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="variable">
      <type>unsigned int</type>
      <name>gu_current_frame</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>5a1459ed510a80cd4a4fdbece5e5f3d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuContext</type>
      <name>gu_contexts</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>c1f2330fb3cc5838d9bf7f4fb805237c</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ge_list_executed</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>d761a233c7e69e1c941abfbe2b8944a7</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ge_edram_address</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>d78ccec16c46df772c29222481b90d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuSettings</type>
      <name>gu_settings</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>bfd7407f1d22a721335625d0e6f26fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuDisplayList *</type>
      <name>gu_list</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>ac4352ed65d2d2f26cc3b39f09aebf02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_curr_context</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>62b8e0214c8865f00adf4811bb357c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_init</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>13ee4def05c3f4cb45b29f9aee28b12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_display_on</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>287df7cfb967cb2033fd826d7de15ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_call_mode</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>c894edd53796106abf60e1f7e19065bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_states</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>9a9bf67f64f59fc5d4b68f2e0ddb4e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuDrawBuffer</type>
      <name>gu_draw_buffer</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>71bde7dd5e7d8d640464805cb2242fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>gu_object_stack</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>d65d5c0907a695393f562a7a01e6def1</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_object_stack_depth</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>c698ab9d6cbd8d7ad321e50d4cb98016</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuLightSettings</type>
      <name>light_settings</name>
      <anchorfile>guInternal_8c.html</anchorfile>
      <anchor>72f763c8fa18ece81e1ec9fca243011a</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>guInternal.h</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>guInternal_8h</filename>
    <includes id="pspgu_8h" name="pspgu.h" local="yes" imported="no">pspgu.h</includes>
    <class kind="struct">GuSettings</class>
    <class kind="struct">GuDisplayList</class>
    <class kind="struct">GuContext</class>
    <class kind="struct">GuDrawBuffer</class>
    <class kind="struct">GuLightSettings</class>
    <member kind="typedef">
      <type>void(*</type>
      <name>GuCallback</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>568507cee3e45e91d667bf9962cecba4</anchor>
      <arglist>)(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendCommandi</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>fdcd9c9b65e99cd87ea777aa6a6abac1</anchor>
      <arglist>(int cmd, int argument)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendCommandiStall</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>89ef6a9b30eda6ed020e75f824db6ba6</anchor>
      <arglist>(int cmd, int argument)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendCommandf</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>4114fab877a917f32def6585481751b5</anchor>
      <arglist>(int cmd, float argument)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callbackSig</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>52cd96c491c3ee2073085e7d141404f2</anchor>
      <arglist>(int id, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callbackFin</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>45340910494f1418f2c6e9575dfd644d</anchor>
      <arglist>(int id, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetValues</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>cf32301ca9b2f3977bf01ea7ed9ae437</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>gu_current_frame</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>5a1459ed510a80cd4a4fdbece5e5f3d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuContext</type>
      <name>gu_contexts</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>c1f2330fb3cc5838d9bf7f4fb805237c</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ge_list_executed</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>d761a233c7e69e1c941abfbe2b8944a7</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ge_edram_address</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>d78ccec16c46df772c29222481b90d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuSettings</type>
      <name>gu_settings</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>bfd7407f1d22a721335625d0e6f26fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuDisplayList *</type>
      <name>gu_list</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>ac4352ed65d2d2f26cc3b39f09aebf02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_curr_context</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>62b8e0214c8865f00adf4811bb357c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_init</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>13ee4def05c3f4cb45b29f9aee28b12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_display_on</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>287df7cfb967cb2033fd826d7de15ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_call_mode</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>c894edd53796106abf60e1f7e19065bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_states</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>9a9bf67f64f59fc5d4b68f2e0ddb4e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuDrawBuffer</type>
      <name>gu_draw_buffer</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>71bde7dd5e7d8d640464805cb2242fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>gu_object_stack</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>ad45e0dd17916dcb1386713bdaef719d</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gu_object_stack_depth</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>c698ab9d6cbd8d7ad321e50d4cb98016</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuLightSettings</type>
      <name>light_settings</name>
      <anchorfile>guInternal_8h.html</anchorfile>
      <anchor>72f763c8fa18ece81e1ec9fca243011a</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspgu.h</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>pspgu_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspge_8h" name="pspge.h" local="no" imported="no">pspge.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>GU_PI</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>771a71c2d959bf835362325d128647f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_FALSE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>0c3c2a61bc2f7855302dc32d71d367ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TRUE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>efe0572b800e6b050763b47ca2be4ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_POINTS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>439f69ce8b05aacba449423bf8a385cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LINES</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>b4be59f808d6c6ee762856b1ce498bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LINE_STRIP</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>faa28601e8ddd5cdc133f8fe1feb1f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TRIANGLES</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>0fa58d451e69c1b0bf91644bc667ca5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TRIANGLE_STRIP</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>864aab6b3c6c1aa6c479e4c9a05544a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TRIANGLE_FAN</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>141e80f6883bb02d5257910e2a97de9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SPRITES</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>05658def3891d0ff7d32ae170fe30a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ALPHA_TEST</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>227616bd8f4b37eaf4093ec6984974f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_DEPTH_TEST</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>4889d8ca0d63f004de4042a08cd334da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SCISSOR_TEST</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5eef959d1cf808706396456f975127d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_STENCIL_TEST</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>b454fee229a7177d0b390e009c59ca73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_BLEND</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>f7994960fee77915ae32f9ddcdf62554</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_CULL_FACE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>e2f725212a74d915341d6b0e45ae7868</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_DITHER</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>8e0abdcf2288bf7e4e37eb99d6d93ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_FOG</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>f586352bf519414ba5151ffa0fffd038</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_CLIP_PLANES</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>eb418ba844442f9c88505170f1bf4892</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TEXTURE_2D</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>112bb674138b83fb86227b88f7bf386a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LIGHTING</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>066926d64fb7b154176e153fe9e2aea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LIGHT0</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>c869c36df6d5ac0842b9974698e01c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LIGHT1</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>3d21a0d7af09f4c59a7cefc2c5151781</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LIGHT2</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>024fde1efc0fcc6b8a07a80981b43a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LIGHT3</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>0ebe67f466201202d13154895405961d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LINE_SMOOTH</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>949b4f9d51c7d7de386f48cb0447bb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PATCH_CULL_FACE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>64fb8eaf1b7a3eff9f63c791e6ca56df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_TEST</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>edd24096978af0e1f131f3aa30ed7d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_LOGIC_OP</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>27e4fad6eb302c833af326a954046a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_FACE_NORMAL_REVERSE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>cc678b2b2b7e5184399b29f6a705efcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PATCH_FACE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>f642989b8009aa726cd26711066bbfeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_FRAGMENT_2X</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5ce3298687e982fea0346acf8cda5da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PROJECTION</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>4dd13672b8e657b1b38416d922efaf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_VIEW</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>26de05848d05f640d3dfabbc3fc8610c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_MODEL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>94ce89ed926ce0ed4455918acc1bc355</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TEXTURE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>b1d518c0923a03dbc483b0d8ac76b29a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TEXTURE_SHIFT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>eca2ed694300c7338c7f10bcf18e17e0</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TEXTURE_8BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>6d658414265321aeaf5d3b7b2e0c55b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TEXTURE_16BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>8c5afc6238105192f0392eab164ae063</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TEXTURE_32BITF</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>e61d2a4d6ddc8a6835b31ba40114baa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TEXTURE_BITS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>bbc0713f69f7cf5b74944cfcfc396acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_SHIFT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>a93f63d0c6c8990a51aa445b30b73d63</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_RES1</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>8d5566b4722af0be43dde3d16e01434b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_RES2</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>f38eec93848763df3880e5d465b3af74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_RES3</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5e9033874a1a94277a027c7a3ade38c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_5650</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>c51557af72543c23fddb08f23208a018</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_5551</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>cfbd8718095560c07f951523b8087e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_4444</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>d74d1dcfa2eec13f146799b72f7aded7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_8888</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>fb9ef03881d7c7c03379e93ba6698dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_BITS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>17b370f03015ec6080e5be0723739c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NORMAL_SHIFT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5aea597df336e3ccc0aa3d1f3dbd514a</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NORMAL_8BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>b4f39d238b7dcacccd5cb1311c4e4549</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NORMAL_16BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>1fcdc2a5f50acff696e19941fa06b93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NORMAL_32BITF</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>104b62fdf4eac24d212c25190a742f23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NORMAL_BITS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>be8f41af4cb9b658fdf2b2934cee3434</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_VERTEX_SHIFT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>d69af5f781045169c940a20f8185c7dc</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_VERTEX_8BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>def5fd6caa741db007ffa048d93b3ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_VERTEX_16BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>38579baf5820c8d921a8fcf33f511dfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_VERTEX_32BITF</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>1f0463aec907a84ec11032c6a34e7fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_VERTEX_BITS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>c5efbc05395132bd3f26539495d86859</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_WEIGHT_SHIFT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>1773df369edbd9495f1019be4a9b18c5</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_WEIGHT_8BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>c7528c3ea99404ab882252b6505e5ea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_WEIGHT_16BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>eb653aa4b37517b3d5f6601e1dc50bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_WEIGHT_32BITF</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>43518fc047a6ad8128472a524075462d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_WEIGHT_BITS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>cf6aca120d1b6f70fa91f71e5a38618b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_INDEX_SHIFT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>2c3dcea74888268f1ac0b8ad0053b2ea</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_INDEX_8BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>24714c56706d568d75d14cea4ce7ece3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_INDEX_16BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>d535b76323b7af8bcef2fe01f5004868</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_INDEX_BITS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>ecc10e0825cb328488590b848eca1f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_WEIGHTS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>3a492a8bd2a309ad7752a240380e94e8</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_WEIGHTS_BITS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>a96471dffbe071c8e6c64fb0f4c4e388</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_VERTICES</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>33e1ed18c41810eedf9a39a2d8b97ab3</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_VERTICES_BITS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>89c5b9db8f3d20d406f50d885cf3c06d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TRANSFORM_SHIFT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>ae00157037cde1b3f6106ec08f58ac54</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TRANSFORM_3D</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>9896d5cb111f9b408854a4afd8261cc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TRANSFORM_2D</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>f8fdb9c19718dd478f3f98d8789fa779</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TRANSFORM_BITS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>22720b81b097ea9ec1eaec5f3f850c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_5650</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>06411ac498e27564c60d54734c1d6be4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_5551</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>fc062e38157641d3778d649d7f495e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_4444</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>8160f33dd7186339a44a0285fb30f57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_8888</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5a795ed95e44b4760f2a3ad1cb3b5b72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_T4</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>8d5f43af2b603e21428fa7bc6f9cb5f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_T8</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>850a7ad435eb0f8066697f5697bdac03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_T16</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5e19726242c3ce18b7f131ed7ba2fc81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_T32</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>3b8189986b20ddfddc8a1eab4d6f3456</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_DXT1</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>eb3a575c2ff61ea01e019dcc3a2b42fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_DXT3</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>7d6267c975a21affd2e0fb13a911f085</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_PSM_DXT5</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>c95d00775e605ff0e2ac184ddecf23a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_FLAT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>47746caf8aa114b91f99db58ad8e7a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SMOOTH</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>885e46f7939ea06be2c3b2dc3334b7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_CLEAR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>9b50df6161afc18f2843410d449b1d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_AND</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>4ad0434fc23229e545ca7327147e413c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_AND_REVERSE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>21b19d666eb834d3a44bf43340f0228a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COPY</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>75decbda1675f37ce8f584aef863d4fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_AND_INVERTED</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>64f18fc1d670b0c606dddec7406e7678</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NOOP</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>92589f0f9b7e6b9d5f89d2976eeb7b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_XOR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>82963384867abcba35566914be1a0cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_OR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>f3d25feb304363f625cf72ce42a14b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NOR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>73de88671919301367d3bccc4b072811</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_EQUIV</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>d2632c2e90a1cf869d7537c716c1b0c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_INVERTED</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>26c831f069e486cb2426519324744df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_OR_REVERSE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5c6d7935677c4e5b1e183d21eff2ab57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COPY_INVERTED</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>c1a429211374a8e2b9439f676cd5f810</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_OR_INVERTED</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>ac51ba2e23d6a86e8de410966daddbba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NAND</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>0ac542b5f266e3fbfb5d41180da0e102</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SET</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>9e2e83d7cd76a93869f0be03286f12c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NEAREST</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>4386c6805b863c79fb6c7feb493a7084</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LINEAR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>3d5c7e6907ff57690f116c828a1170f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NEAREST_MIPMAP_NEAREST</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>2735a6791c37b1b10252dae628c2a1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LINEAR_MIPMAP_NEAREST</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>b7a9aac06e9db4ffaebc8caf8b98f0d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NEAREST_MIPMAP_LINEAR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>838142bcfaa4d29bd4bb73ea1601f1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LINEAR_MIPMAP_LINEAR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>fe7b7d01d1c665128aa7241286200bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TEXTURE_COORDS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>c92f60155cc996e256a9b551ce951fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TEXTURE_MATRIX</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>f690d044e455d9fce0c3411957ed462f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ENVIRONMENT_MAP</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>fafa0a7890242170ea9f443faa164d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_POSITION</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>63ab94786266ebca8a4bb71a1a0d0f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_UV</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>f1e0907209dc535c5ce5194fdcb415ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NORMALIZED_NORMAL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>6368594c17f2a05b0cfa5f1e176c7e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NORMAL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>6a82676d6bb77d581bd415d11400982c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_REPEAT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>2345d831f86f592943bff8b2b5f6f2ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_CLAMP</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>89205c50398593eacfcdf5800d315e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_CW</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>774e485f804f361713871b775aa2c3f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_CCW</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>3df652318109c139fa5aabd67e9f687b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NEVER</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>3a9a1570c27acc38cd3b85a8a4951a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ALWAYS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>197155eed7840d1eebab9fc135218db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_EQUAL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>a403b42c528542da49e71bfeeedd3eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_NOTEQUAL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5f5222215a55bef787c245d1b1cf8500</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LESS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>8c7896d27b2f07d82087f5337abea6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_LEQUAL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>d5e79c318d5496e5cb3aeeb0f2bffb5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_GREATER</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>1863043a283d57fdaa120f532ce9e8cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_GEQUAL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5a349553ef680ce32b7b58d4694b2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR_BUFFER_BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>75c65cebd6f7472e9a31312b6006f455</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_STENCIL_BUFFER_BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>c9190ed24e75a4ca563491b2f452dd81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_DEPTH_BUFFER_BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>0cd94826e8c34b65376fef3433a2895a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_FAST_CLEAR_BIT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>89cc8e24c3f7371a283f3ba3dad2ce21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TFX_MODULATE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>dea69c5faf20c2352129e850542948a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TFX_DECAL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>cd1b6d537d7ccf7ac34d474e3bfe4bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TFX_BLEND</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>1e2480bd59e06a2daaab34e36d673f59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TFX_REPLACE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>7e9253fcf7168c7b1ca01497b5c53c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TFX_ADD</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>0d8c567a10de9d1693228b445f35c0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TCC_RGB</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5e12701dc30926095bed105d40c3c645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TCC_RGBA</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>cc7c8fb78b43c6e45acafc8a47dc6cd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ADD</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>4f64be2be90decad145c4d78795e2833</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SUBTRACT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>425290d6ab02bc6a3fcfe6dfd343d892</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_REVERSE_SUBTRACT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>9bb76fb27e21a467c4f6fa8f16d29d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_MIN</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>e484067f518a9b8843e5543f6633a28d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_MAX</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>93d8ac195e34507e849b25e406d666b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ABS</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>f12191bec05a007f9ef6c61c52f2e130</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SRC_COLOR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>4b2bd8757a799ca5b17026951b9aeb0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ONE_MINUS_SRC_COLOR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5665d77217ff37285ccd21f2120b88f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SRC_ALPHA</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>4542d336aee6bb3ede7a4e173c88503b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ONE_MINUS_SRC_ALPHA</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>6f3382819740560a8e2a2ea8c9cf1c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_DST_COLOR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>1c5e5c1fe058ee24baf173e64bee9dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ONE_MINUS_DST_COLOR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>30545a42d718fdc68370ae4a7f6c4fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_DST_ALPHA</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>bca98f5c89b6b0040a851086d6088819</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ONE_MINUS_DST_ALPHA</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>a25d70cb07f9c7f706eed8b58a347664</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_FIX</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>d44e9c20940a8b41cbdc60a3ac77532b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_KEEP</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>dd7ca58e7fa845be31ce4062e8345adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ZERO</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>869bf90f989b8620acd842dc22ad2e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_REPLACE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>3846f04a2f75d6eae83f352fa529fdaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_INVERT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>e9a20518a601ff6b3ba13a63a5819069</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_INCR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>f8f0559af64b95aacbd2f0ead1a63d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_DECR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>fd343c02b3faaec007960a723897f805</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_AMBIENT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>aae94ea5d55a6358cd9d59c2168366dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_DIFFUSE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>0bac41ec4389afe4911418e737d1f115</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SPECULAR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>99becc17df225e4024a9b6b2fef2df92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_AMBIENT_AND_DIFFUSE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>83010bd33dd471940d29c6b884487b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_DIFFUSE_AND_SPECULAR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>1695a6c35c679894ad4757945e77db18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_UNKNOWN_LIGHT_COMPONENT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>304648bddf7e2cb775e1c244e23758de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SINGLE_COLOR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>c090c974a18c2f3fc5e36ff3d4e99e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SEPARATE_SPECULAR_COLOR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>864be3468562de1968fcb7d1fe84f4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_DIRECTIONAL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>db9b7c249d5cd008bacad9b4b4ff6f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_POINTLIGHT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>d668d1e90d39a7c5ecb90cda048f40b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SPOTLIGHT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>bee994673a8a9a0f3a58fc6c4aa0865f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_DIRECT</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>18abc3e2ec63efc0b9cf594ae36fe601</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_CALL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>ae471fd90f1e24ea5e28af4a9ea24104</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_SEND</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>93e7f179e841f7d59a75dbf5a5d26543</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_TAIL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>580ee90d65fecc9ee829555cee635e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_HEAD</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>d80657809664b3bc9892d7d151a2a5ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_CALLBACK_SIGNAL</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>1c5d428db2ed3d73c57193d2e8b63b47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_CALLBACK_FINISH</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>e84a329fd5025c42511c6153571670ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_BEHAVIOR_SUSPEND</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>92496483fa9b53f7f8ce9825eb114dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_BEHAVIOR_CONTINUE</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>2b5da372d3880eb042a5d9320fd76db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ABGR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>9e1733bdabab62d1fdff71b2bafdac3c</anchor>
      <arglist>(a, b, g, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_ARGB</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>ae7e846f6dbf21c6b1856bc4b7089c37</anchor>
      <arglist>(a, r, g, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_RGBA</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>78ec5de4a92318788607ef7a0b811b92</anchor>
      <arglist>(r, g, b, a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GU_COLOR</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>5a6f68eb6e4958d732092da4d2260112</anchor>
      <arglist>(r, g, b, a)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>GuSwapBuffersCallback</name>
      <anchorfile>pspgu_8h.html</anchorfile>
      <anchor>6472d75f2e506614f4f00f2b949c9d33</anchor>
      <arglist>)(void **display, void **render)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthBuffer</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gaddbaeebaca67482f31a619ca0bd2fc7</anchor>
      <arglist>(void *zbp, int zbw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDispBuffer</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g01a1668e175f969f9b958545f62b7c20</anchor>
      <arglist>(int width, int height, void *dispbp, int dispbw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawBuffer</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3e7c2b5f4924a1cfdfc32d8f51295f50</anchor>
      <arglist>(int psm, void *fbp, int fbw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawBufferList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gc7d6c3ed379cc1c3f1636a259cb1c0ba</anchor>
      <arglist>(int psm, void *fbp, int fbw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuDisplay</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga0ba3cce0fe889f2f2721bacaf59cbed</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gba382986606097023274007bb941dc20</anchor>
      <arglist>(int function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthMask</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g51027f015aad4029c707f0497cb2d448</anchor>
      <arglist>(int mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthOffset</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7eaca35ca0b1a236dfd530349f681101</anchor>
      <arglist>(unsigned int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthRange</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g0d58d8ec47c41a0cda0c84ed614c200a</anchor>
      <arglist>(int near, int far)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuFog</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g030adaea9c11f8b0158ecdc6bd748d3c</anchor>
      <arglist>(float near, float far, unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuInit</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5a558b76a14b6f984ba65ca37e03a707</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTerm</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g48509fdeab83a025f3b42b7fab3007b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuBreak</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g4dc14fec56667092692401aa532b2758</anchor>
      <arglist>(int a0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuContinue</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g58c444e2dc8a29d04e3036b93c6e5e11</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceGuSetCallback</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8c9589d644b40244f61a6a15bc806e60</anchor>
      <arglist>(int signal, void(*callback)(int))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSignal</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g78f05baa327357993b7579cbedbf27f4</anchor>
      <arglist>(int signal, int behavior)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSendCommandf</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfdf6924e24dbfa9ca7300b8cb4d504eb</anchor>
      <arglist>(int cmd, float argument)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSendCommandi</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbf7e28a9cc4b22ce7decad4beb26ef12</anchor>
      <arglist>(int cmd, int argument)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceGuGetMemory</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gf2763dad05b15d96bbc88180521b8f7d</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuStart</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7b86d1928f2d2ee318a390ae9412f30e</anchor>
      <arglist>(int cid, void *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuFinish</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g4915d6d8f42788827415bc6a89003903</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuCallList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g625ac5e4f78cea145a3273339a0b2b24</anchor>
      <arglist>(const void *list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuCallMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcbd9777eca05f9494d4594b57fd36067</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuCheckList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g67d567a61d6aa70f7c3319cc39cf2ad1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSendList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g86a62ed2b49d7d7a024697144b521563</anchor>
      <arglist>(int mode, const void *list, PspGeContext *context)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceGuSwapBuffers</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gff5ebbf31f55dee4dfc06bd664f4d30a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuSync</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge00791f322904876a72a567ff745863c</anchor>
      <arglist>(int mode, int a1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawArray</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7ee605d6909a72f989cae1cc4bf6264f</anchor>
      <arglist>(int prim, int vtype, int count, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuBeginObject</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g34af9914f37a3775e436987137316e5e</anchor>
      <arglist>(int vtype, int count, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuEndObject</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga98bf249f36838b3da59e3d5dceabb4a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g920cb4c9648e37997228250619126b2c</anchor>
      <arglist>(int state, int status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuGetStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g345195e997c170f04b9c284d0e0416ad</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetAllStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8a381555c413c0bf9f999808b23de097</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuGetAllStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb101d45f4cf2c482204fccd6c225ab75</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuEnable</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcedc4901fe91df74116ee3cd9f4da38d</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDisable</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g30b63d090b231a54abc381877775191c</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLight</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7b2b6b86b69545f4ba709153efb67252</anchor>
      <arglist>(int light, int type, int components, const ScePspFVector3 *position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightAtt</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g863ec858d565519fa04c570dcd38ac01</anchor>
      <arglist>(int light, float atten0, float atten1, float atten2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcc72f0eae1a6aaaa169932973af01946</anchor>
      <arglist>(int light, int component, unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g685b0059355f98c16ef1252cc491eaa8</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightSpot</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gc9e08caa9aaa059ceb2105cf9656fc61</anchor>
      <arglist>(int light, const ScePspFVector3 *direction, float exponent, float cutoff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClear</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gd112581876eb55b6f6874266971bfab3</anchor>
      <arglist>(int flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClearColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gf98b62599df95bf34785914a257cce80</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClearDepth</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga7c7558f994ff1ee4b41b46517aa62fb</anchor>
      <arglist>(unsigned int depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClearStencil</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g1376203db05d61b12a16525d29ff01eb</anchor>
      <arglist>(unsigned int stencil)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuPixelMask</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb5aaddc4bb962ed04025c4fcdece6884</anchor>
      <arglist>(unsigned int mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb600ec994006cfebde05d1c09d984519</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuColorFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge1acf5fd1246cc521f3ca974aff646bf</anchor>
      <arglist>(int func, unsigned int color, unsigned int mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuColorMaterial</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g9ca8f103ac961cdb5307a008886a3812</anchor>
      <arglist>(int components)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuAlphaFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb6cec3a1c12dcc426f1bfc4f13240123</anchor>
      <arglist>(int func, int value, int mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuAmbient</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gabf04f3faed4a5ea104fc48aa2fd38ef</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuAmbientColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge5f425ec4fb9e48e75fa111f00faf458</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuBlendFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8cb7979517331dd069d3bf7d032c62b6</anchor>
      <arglist>(int op, int src, int dest, unsigned int srcfix, unsigned int destfix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuMaterial</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3de697a71b8c193d6e7cb8b1134d2a80</anchor>
      <arglist>(int mode, int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuModelColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5804dcc74429517a937d223c8d5467ba</anchor>
      <arglist>(unsigned int emissive, unsigned int ambient, unsigned int diffuse, unsigned int specular)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuStencilFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3603616d44c4bba38681523470a2ea5a</anchor>
      <arglist>(int func, int ref, int mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuStencilOp</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gdc55c81ea1aaa01bb3f63cb7e91afa2a</anchor>
      <arglist>(int fail, int zfail, int zpass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSpecular</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g0150df156b4680dc9888f0c4aa064fec</anchor>
      <arglist>(float power)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuFrontFace</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5448854d2e6642569eac1785f90c0d36</anchor>
      <arglist>(int order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLogicalOp</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g28cac6c3c05ec1314c0ba857ef8cb4c3</anchor>
      <arglist>(int op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetDither</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfb0d3524d0eee8f5dd94e790de4737d6</anchor>
      <arglist>(const ScePspIMatrix4 *matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuShadeModel</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfb174570249804d65dc03b88e9d92697</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuCopyImage</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7c00c20bcec6ab9e0a6f63793af35a1d</anchor>
      <arglist>(int psm, int sx, int sy, int width, int height, int srcw, void *src, int dx, int dy, int destw, void *dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexEnvColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8a00206d24c68986eda3606e9cec3b25</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexFilter</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5f7def0c32648184da0212567beb8f2d</anchor>
      <arglist>(int min, int mag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexFlush</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g41a9734a89941db4d5b2bb0e2982841e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g6a9fbd3c775d2e1e8ff7b4b6b853b13c</anchor>
      <arglist>(int tfx, int tcc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexImage</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gee7f589ac1b5ee7ea5c19c88ed2c84b6</anchor>
      <arglist>(int mipmap, int width, int height, int tbw, const void *tbp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexLevelMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga07e29ca00db77d61196cd2938b182ff</anchor>
      <arglist>(unsigned int a0, float f12)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexMapMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge1c7be9aaf7ac850ccc5a7a494048707</anchor>
      <arglist>(int mode, unsigned int a1, unsigned int a2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbe8fe8f1375e0b5c13a8fd311a201295</anchor>
      <arglist>(int tpsm, int maxmips, int a2, int swizzle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexOffset</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbabe30e36adc94779cb6fcec4e8ab007</anchor>
      <arglist>(float u, float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexProjMapMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g040a13d7f8f9bef0379965c16fccd533</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexScale</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g05fead0b2cede570cc1c464c27f641a9</anchor>
      <arglist>(float u, float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexSlope</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge99899311920ceef125679a55cf51e73</anchor>
      <arglist>(float slope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexSync</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5d972d0389f66395679748b8a6ea827d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexWrap</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfe5bec2f75da4462ea5458eb60cb3e30</anchor>
      <arglist>(int u, int v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClutLoad</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g29aac9f52b2c154a78f0a86b16c3e2b9</anchor>
      <arglist>(int num_blocks, const void *cbp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClutMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gdb4f47752f55e37b53fd9e571abb9804</anchor>
      <arglist>(unsigned int cpsm, unsigned int a1, unsigned int a2, unsigned int a3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuOffset</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gec7e1497765bb4d74cd9ef8ad0f3d277</anchor>
      <arglist>(unsigned int x, unsigned int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuScissor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g4e871b47f1af025bcfa17ae03ba4d9ba</anchor>
      <arglist>(int x, int y, int w, int h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuViewport</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3b08429c4197622db7919f66012e6eb2</anchor>
      <arglist>(int cx, int cy, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawBezier</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3aad626dfeaa39a1273d39a91443fc27</anchor>
      <arglist>(int vtype, int ucount, int vcount, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuPatchDivide</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g1e156ed304c78e97df44ce3330c39c8a</anchor>
      <arglist>(unsigned int a0, unsigned int a1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuPatchFrontFace</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g9c413fdbf081c9978ee97ffa7b632e14</anchor>
      <arglist>(unsigned int a0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuPatchPrim</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcbed51f79d2b8849d43f699e2cafae47</anchor>
      <arglist>(unsigned int a0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawSpline</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbadd31d7feae1d6137b5c12e6932f154</anchor>
      <arglist>(int vtype, int ucount, int vcount, int uedge, int vedge, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetMatrix</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g1bc913d994e4bbc8e74b28d1fec77640</anchor>
      <arglist>(int type, const ScePspFMatrix4 *matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuBoneMatrix</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g782ba64506040cec624f64729522c828</anchor>
      <arglist>(unsigned int index, const ScePspFMatrix4 *matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuMorphWeight</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g52ad77c265c5bd34efbe0898a2481c1d</anchor>
      <arglist>(int index, float weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawArrayN</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8a377d73b1a273f8354e6d5fa11a40a4</anchor>
      <arglist>(int primitive_type, int vertex_type, int count, int a3, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>guSwapBuffersBehaviour</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5a52a71c4544f2f7668c76fa2b89c258</anchor>
      <arglist>(int behaviour)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>guSwapBuffersCallback</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gefd8c04a678070e623f62402f7fcecd9</anchor>
      <arglist>(GuSwapBuffersCallback callback)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>resetValues.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>resetValues_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>resetValues</name>
      <anchorfile>resetValues_8c.html</anchorfile>
      <anchor>cf32301ca9b2f3977bf01ea7ed9ae437</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuAlphaFunc.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuAlphaFunc_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuAlphaFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb6cec3a1c12dcc426f1bfc4f13240123</anchor>
      <arglist>(int a0, int a1, int a2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuAmbient.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuAmbient_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuAmbient</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gabf04f3faed4a5ea104fc48aa2fd38ef</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuAmbientColor.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuAmbientColor_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuAmbientColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge5f425ec4fb9e48e75fa111f00faf458</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuBeginObject.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuBeginObject_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuBeginObject</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g34af9914f37a3775e436987137316e5e</anchor>
      <arglist>(int vertex_type, int a1, const void *indices, const void *vertices)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuBlendFunc.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuBlendFunc_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuBlendFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8cb7979517331dd069d3bf7d032c62b6</anchor>
      <arglist>(int op, int src, int dest, unsigned int srcfix, unsigned int destfix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuBoneMatrix.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuBoneMatrix_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuBoneMatrix</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g782ba64506040cec624f64729522c828</anchor>
      <arglist>(unsigned int index, const ScePspFMatrix4 *matrix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuBreak.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuBreak_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuBreak</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g4dc14fec56667092692401aa532b2758</anchor>
      <arglist>(int a0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuCallList.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuCallList_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuCallList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g625ac5e4f78cea145a3273339a0b2b24</anchor>
      <arglist>(const void *list)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuCallMode.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuCallMode_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuCallMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcbd9777eca05f9494d4594b57fd36067</anchor>
      <arglist>(int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuCheckList.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuCheckList_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceGuCheckList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g67d567a61d6aa70f7c3319cc39cf2ad1</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuClear.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuClear_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuClear</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gd112581876eb55b6f6874266971bfab3</anchor>
      <arglist>(int flags)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuClearColor.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuClearColor_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuClearColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gf98b62599df95bf34785914a257cce80</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuClearDepth.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuClearDepth_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuClearDepth</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga7c7558f994ff1ee4b41b46517aa62fb</anchor>
      <arglist>(unsigned int depth)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuClearStencil.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuClearStencil_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuClearStencil</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g1376203db05d61b12a16525d29ff01eb</anchor>
      <arglist>(unsigned int stencil)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuClutLoad.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuClutLoad_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuClutLoad</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g29aac9f52b2c154a78f0a86b16c3e2b9</anchor>
      <arglist>(int num_blocks, const void *cbp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuClutMode.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuClutMode_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuClutMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gdb4f47752f55e37b53fd9e571abb9804</anchor>
      <arglist>(unsigned int cpsm, unsigned int a1, unsigned int a2, unsigned int a3)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuColor.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuColor_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb600ec994006cfebde05d1c09d984519</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuColorFunc.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuColorFunc_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuColorFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge1acf5fd1246cc521f3ca974aff646bf</anchor>
      <arglist>(int func, unsigned int color, unsigned int mask)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuColorMaterial.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuColorMaterial_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuColorMaterial</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g9ca8f103ac961cdb5307a008886a3812</anchor>
      <arglist>(int a0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuContinue.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuContinue_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuContinue</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g58c444e2dc8a29d04e3036b93c6e5e11</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuCopyImage.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuCopyImage_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuCopyImage</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7c00c20bcec6ab9e0a6f63793af35a1d</anchor>
      <arglist>(int psm, int sx, int sy, int width, int height, int srcw, void *src, int dx, int dy, int destw, void *dest)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDepthBuffer.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDepthBuffer_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthBuffer</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gaddbaeebaca67482f31a619ca0bd2fc7</anchor>
      <arglist>(void *zbp, int zbw)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDepthFunc.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDepthFunc_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gba382986606097023274007bb941dc20</anchor>
      <arglist>(int function)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDepthMask.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDepthMask_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthMask</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g51027f015aad4029c707f0497cb2d448</anchor>
      <arglist>(int mask)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDepthOffset.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDepthOffset_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthOffset</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7eaca35ca0b1a236dfd530349f681101</anchor>
      <arglist>(unsigned int offset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDepthRange.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDepthRange_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthRange</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g0d58d8ec47c41a0cda0c84ed614c200a</anchor>
      <arglist>(int near, int far)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDisable.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDisable_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDisable</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g30b63d090b231a54abc381877775191c</anchor>
      <arglist>(int state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDispBuffer.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDispBuffer_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdisplay_8h" name="pspdisplay.h" local="no" imported="no">pspdisplay.h</includes>
    <member kind="function">
      <type>void</type>
      <name>drawRegion</name>
      <anchorfile>sceGuDispBuffer_8c.html</anchorfile>
      <anchor>d29e99023b1c0ba61e473d4b114011f8</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDispBuffer</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g01a1668e175f969f9b958545f62b7c20</anchor>
      <arglist>(int width, int height, void *dispbp, int dispbw)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDisplay.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDisplay_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdisplay_8h" name="pspdisplay.h" local="no" imported="no">pspdisplay.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceGuDisplay</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga0ba3cce0fe889f2f2721bacaf59cbed</anchor>
      <arglist>(int state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDrawArray.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDrawArray_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawArray</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7ee605d6909a72f989cae1cc4bf6264f</anchor>
      <arglist>(int prim, int vtype, int count, const void *indices, const void *vertices)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDrawArrayN.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDrawArrayN_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawArrayN</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8a377d73b1a273f8354e6d5fa11a40a4</anchor>
      <arglist>(int primitive_type, int vertex_type, int count, int a3, const void *indices, const void *vertices)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDrawBezier.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDrawBezier_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawBezier</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3aad626dfeaa39a1273d39a91443fc27</anchor>
      <arglist>(int vertex_type, int ucount, int vcount, const void *indices, const void *vertices)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDrawBuffer.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDrawBuffer_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawBuffer</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3e7c2b5f4924a1cfdfc32d8f51295f50</anchor>
      <arglist>(int psm, void *fbp, int frame_width)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDrawBufferList.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDrawBufferList_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawBufferList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gc7d6c3ed379cc1c3f1636a259cb1c0ba</anchor>
      <arglist>(int psm, void *fbp, int fbw)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuDrawSpline.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuDrawSpline_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawSpline</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbadd31d7feae1d6137b5c12e6932f154</anchor>
      <arglist>(int vertex_type, int ucount, int vcount, int uedge, int vedge, const void *indices, const void *vertices)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuEnable.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuEnable_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuEnable</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcedc4901fe91df74116ee3cd9f4da38d</anchor>
      <arglist>(int state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuEndObject.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuEndObject_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuEndObject</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga98bf249f36838b3da59e3d5dceabb4a</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuFinish.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuFinish_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceGuFinish</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g4915d6d8f42788827415bc6a89003903</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuFog.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuFog_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuFog</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g030adaea9c11f8b0158ecdc6bd748d3c</anchor>
      <arglist>(float near, float far, unsigned int color)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuFrontFace.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuFrontFace_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuFrontFace</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5448854d2e6642569eac1785f90c0d36</anchor>
      <arglist>(int order)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuGetAllStatus.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuGetAllStatus_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceGuGetAllStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb101d45f4cf2c482204fccd6c225ab75</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuGetMemory.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuGetMemory_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspge_8h" name="pspge.h" local="no" imported="no">pspge.h</includes>
    <member kind="function">
      <type>void *</type>
      <name>sceGuGetMemory</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gf2763dad05b15d96bbc88180521b8f7d</anchor>
      <arglist>(int size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuGetStatus.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuGetStatus_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceGuGetStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g345195e997c170f04b9c284d0e0416ad</anchor>
      <arglist>(int state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuInit.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuInit_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspge_8h" name="pspge.h" local="no" imported="no">pspge.h</includes>
    <includes id="pspdisplay_8h" name="pspdisplay.h" local="no" imported="no">pspdisplay.h</includes>
    <member kind="function">
      <type>unsigned int</type>
      <name>__attribute__</name>
      <anchorfile>sceGuInit_8c.html</anchorfile>
      <anchor>65ce97b12cc558afcb4f1ab9ae168bfc</anchor>
      <arglist>((aligned(16)))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuInit</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5a558b76a14b6f984ba65ca37e03a707</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuLight.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuLight_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuLight</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7b2b6b86b69545f4ba709153efb67252</anchor>
      <arglist>(int light, int type, int components, const ScePspFVector3 *position)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuLightAtt.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuLightAtt_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightAtt</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g863ec858d565519fa04c570dcd38ac01</anchor>
      <arglist>(int light, float atten0, float atten1, float atten2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuLightColor.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuLightColor_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcc72f0eae1a6aaaa169932973af01946</anchor>
      <arglist>(int light, int component, unsigned int color)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuLightMode.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuLightMode_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g685b0059355f98c16ef1252cc491eaa8</anchor>
      <arglist>(int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuLightSpot.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuLightSpot_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightSpot</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gc9e08caa9aaa059ceb2105cf9656fc61</anchor>
      <arglist>(int light, const ScePspFVector3 *direction, float exponent, float cutoff)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuLogicalOp.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuLogicalOp_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuLogicalOp</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g28cac6c3c05ec1314c0ba857ef8cb4c3</anchor>
      <arglist>(int op)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuMaterial.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuMaterial_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuMaterial</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3de697a71b8c193d6e7cb8b1134d2a80</anchor>
      <arglist>(int mode, int color)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuModelColor.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuModelColor_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuModelColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5804dcc74429517a937d223c8d5467ba</anchor>
      <arglist>(unsigned int emissive, unsigned int ambient, unsigned int diffuse, unsigned int specular)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuMorphWeight.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuMorphWeight_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuMorphWeight</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g52ad77c265c5bd34efbe0898a2481c1d</anchor>
      <arglist>(int index, float weight)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuOffset.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuOffset_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuOffset</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gec7e1497765bb4d74cd9ef8ad0f3d277</anchor>
      <arglist>(unsigned int x, unsigned int y)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuPatchDivide.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuPatchDivide_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuPatchDivide</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g1e156ed304c78e97df44ce3330c39c8a</anchor>
      <arglist>(unsigned int a0, unsigned int a1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuPatchFrontFace.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuPatchFrontFace_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuPatchFrontFace</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g9c413fdbf081c9978ee97ffa7b632e14</anchor>
      <arglist>(unsigned int a0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuPatchPrim.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuPatchPrim_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuPatchPrim</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcbed51f79d2b8849d43f699e2cafae47</anchor>
      <arglist>(unsigned int a0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuPixelMask.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuPixelMask_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuPixelMask</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb5aaddc4bb962ed04025c4fcdece6884</anchor>
      <arglist>(unsigned int mask)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuScissor.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuScissor_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuScissor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g4e871b47f1af025bcfa17ae03ba4d9ba</anchor>
      <arglist>(int x, int y, int w, int h)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSendCommandf.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSendCommandf_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuSendCommandf</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfdf6924e24dbfa9ca7300b8cb4d504eb</anchor>
      <arglist>(int cmd, float argument)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSendCommandi.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSendCommandi_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuSendCommandi</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbf7e28a9cc4b22ce7decad4beb26ef12</anchor>
      <arglist>(int cmd, int argument)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSendList.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSendList_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspge_8h" name="pspge.h" local="no" imported="no">pspge.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuSendList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g86a62ed2b49d7d7a024697144b521563</anchor>
      <arglist>(int mode, const void *list, PspGeContext *context)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSetAllStatus.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSetAllStatus_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetAllStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8a381555c413c0bf9f999808b23de097</anchor>
      <arglist>(int status)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSetCallback.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSetCallback_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void *</type>
      <name>sceGuSetCallback</name>
      <anchorfile>sceGuSetCallback_8c.html</anchorfile>
      <anchor>5e18d312e6d9b79c7ef8da094ad87b4b</anchor>
      <arglist>(int signal, GuCallback callback)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSetDither.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSetDither_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetDither</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfb0d3524d0eee8f5dd94e790de4737d6</anchor>
      <arglist>(const ScePspIMatrix4 *matrix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSetMatrix.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSetMatrix_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetMatrix</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g1bc913d994e4bbc8e74b28d1fec77640</anchor>
      <arglist>(int type, const ScePspFMatrix4 *matrix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSetStatus.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSetStatus_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g920cb4c9648e37997228250619126b2c</anchor>
      <arglist>(int state, int status)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuShadeModel.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuShadeModel_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuShadeModel</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfb174570249804d65dc03b88e9d92697</anchor>
      <arglist>(int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSignal.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSignal_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuSignal</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g78f05baa327357993b7579cbedbf27f4</anchor>
      <arglist>(int signal, int argument)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSpecular.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSpecular_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuSpecular</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g0150df156b4680dc9888f0c4aa064fec</anchor>
      <arglist>(float power)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuStart.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuStart_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspge_8h" name="pspge.h" local="no" imported="no">pspge.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuStart</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7b86d1928f2d2ee318a390ae9412f30e</anchor>
      <arglist>(int cid, void *list)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuStencilFunc.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuStencilFunc_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuStencilFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3603616d44c4bba38681523470a2ea5a</anchor>
      <arglist>(int func, int ref, int mask)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuStencilOp.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuStencilOp_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuStencilOp</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gdc55c81ea1aaa01bb3f63cb7e91afa2a</anchor>
      <arglist>(int fail, int zfail, int zpass)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSwapBuffers.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSwapBuffers_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspdisplay_8h" name="pspdisplay.h" local="no" imported="no">pspdisplay.h</includes>
    <member kind="function">
      <type>void *</type>
      <name>sceGuSwapBuffers</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gff5ebbf31f55dee4dfc06bd664f4d30a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>guSwapBuffersBehaviour</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5a52a71c4544f2f7668c76fa2b89c258</anchor>
      <arglist>(int behaviour)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>guSwapBuffersCallback</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gefd8c04a678070e623f62402f7fcecd9</anchor>
      <arglist>(GuSwapBuffersCallback callback)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuSync.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuSync_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspge_8h" name="pspge.h" local="no" imported="no">pspge.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceGuSync</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge00791f322904876a72a567ff745863c</anchor>
      <arglist>(int mode, int a1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTerm.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTerm_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspge_8h" name="pspge.h" local="no" imported="no">pspge.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTerm</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g48509fdeab83a025f3b42b7fab3007b1</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexEnvColor.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexEnvColor_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexEnvColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8a00206d24c68986eda3606e9cec3b25</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexFilter.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexFilter_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexFilter</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5f7def0c32648184da0212567beb8f2d</anchor>
      <arglist>(int min, int mag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexFlush.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexFlush_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexFlush</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g41a9734a89941db4d5b2bb0e2982841e</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexFunc.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexFunc_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g6a9fbd3c775d2e1e8ff7b4b6b853b13c</anchor>
      <arglist>(int tfx, int tcc)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexImage.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexImage_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>int</type>
      <name>getExp</name>
      <anchorfile>sceGuTexImage_8c.html</anchorfile>
      <anchor>0a2085cbc9d5c1ffdfcbafce901fa090</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexImage</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gee7f589ac1b5ee7ea5c19c88ed2c84b6</anchor>
      <arglist>(int mipmap, int width, int height, int tbw, const void *tbp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexLevelMode.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexLevelMode_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexLevelMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga07e29ca00db77d61196cd2938b182ff</anchor>
      <arglist>(unsigned int a0, float f12)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexMapMode.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexMapMode_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexMapMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge1c7be9aaf7ac850ccc5a7a494048707</anchor>
      <arglist>(int mode, unsigned int a1, unsigned int a2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexMode.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexMode_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbe8fe8f1375e0b5c13a8fd311a201295</anchor>
      <arglist>(int tpsm, int maxmips, int a2, int swizzle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexOffset.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexOffset_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexOffset</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbabe30e36adc94779cb6fcec4e8ab007</anchor>
      <arglist>(float u, float v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexProjMapMode.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexProjMapMode_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexProjMapMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g040a13d7f8f9bef0379965c16fccd533</anchor>
      <arglist>(int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexScale.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexScale_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexScale</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g05fead0b2cede570cc1c464c27f641a9</anchor>
      <arglist>(float u, float v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexSlope.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexSlope_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexSlope</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge99899311920ceef125679a55cf51e73</anchor>
      <arglist>(float slope)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexSync.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexSync_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexSync</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5d972d0389f66395679748b8a6ea827d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuTexWrap.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuTexWrap_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexWrap</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfe5bec2f75da4462ea5458eb60cb3e30</anchor>
      <arglist>(int u, int v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sceGuViewport.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sceGuViewport_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGuViewport</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3b08429c4197622db7919f66012e6eb2</anchor>
      <arglist>(int cx, int cy, int width, int height)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sendCommand.c</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>sendCommand_8c</filename>
    <includes id="guInternal_8h" name="guInternal.h" local="yes" imported="no">guInternal.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspge_8h" name="pspge.h" local="no" imported="no">pspge.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sendCommandi</name>
      <anchorfile>sendCommand_8c.html</anchorfile>
      <anchor>fdcd9c9b65e99cd87ea777aa6a6abac1</anchor>
      <arglist>(int cmd, int argument)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendCommandf</name>
      <anchorfile>sendCommand_8c.html</anchorfile>
      <anchor>4114fab877a917f32def6585481751b5</anchor>
      <arglist>(int cmd, float argument)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendCommandiStall</name>
      <anchorfile>sendCommand_8c.html</anchorfile>
      <anchor>89ef6a9b30eda6ed020e75f824db6ba6</anchor>
      <arglist>(int cmd, int argument)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gumInternal.c</name>
    <path>/tmp/pspdev/pspsdk/src/gum/</path>
    <filename>gumInternal_8c</filename>
    <includes id="gumInternal_8h" name="gumInternal.h" local="yes" imported="no">gumInternal.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <member kind="variable">
      <type>int</type>
      <name>gum_current_mode</name>
      <anchorfile>gumInternal_8c.html</anchorfile>
      <anchor>c3ef9c29f93eb495aa5e66dab06be9c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gum_matrix_update</name>
      <anchorfile>gumInternal_8c.html</anchorfile>
      <anchor>84dfb041eaaf9230edeac86bdc3a36ac</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gum_current_matrix_update</name>
      <anchorfile>gumInternal_8c.html</anchorfile>
      <anchor>c6de32ad2a24b25a110738ef6b9ae203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFMatrix4 *</type>
      <name>gum_current_matrix</name>
      <anchorfile>gumInternal_8c.html</anchorfile>
      <anchor>797804548dabe01ca097d6095eb29bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFMatrix4 *</type>
      <name>gum_stack_depth</name>
      <anchorfile>gumInternal_8c.html</anchorfile>
      <anchor>2bf20b2159d15e1df5b7f9765b81a262</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspFMatrix4</type>
      <name>gum_matrix_stack</name>
      <anchorfile>gumInternal_8c.html</anchorfile>
      <anchor>f1bf3cfa3b32de27d320460f6b86248a</anchor>
      <arglist>[4][32]</arglist>
    </member>
    <member kind="variable">
      <type>pspvfpu_context *</type>
      <name>gum_vfpucontext</name>
      <anchorfile>gumInternal_8c.html</anchorfile>
      <anchor>2cbf4472bce9807cf1be25e20852f199</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gumInternal.h</name>
    <path>/tmp/pspdev/pspsdk/src/gum/</path>
    <filename>gumInternal_8h</filename>
    <includes id="pspgum_8h" name="pspgum.h" local="yes" imported="no">pspgum.h</includes>
    <includes id="pspgu_8h" name="pspgu.h" local="yes" imported="no">../gu/pspgu.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>GUM_EPSILON</name>
      <anchorfile>gumInternal_8h.html</anchorfile>
      <anchor>62edc9a434bbe5b9ed47bb2b8457b254</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GUM_ALIGNED_MATRIX</name>
      <anchorfile>gumInternal_8h.html</anchorfile>
      <anchor>626ef4cfa50b99d13648a8505827d7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GUM_ALIGNED_VECTOR</name>
      <anchorfile>gumInternal_8h.html</anchorfile>
      <anchor>6f454f978318d809fa627f1578fce2a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gum_current_mode</name>
      <anchorfile>gumInternal_8h.html</anchorfile>
      <anchor>c3ef9c29f93eb495aa5e66dab06be9c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gum_matrix_update</name>
      <anchorfile>gumInternal_8h.html</anchorfile>
      <anchor>84dfb041eaaf9230edeac86bdc3a36ac</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gum_current_matrix_update</name>
      <anchorfile>gumInternal_8h.html</anchorfile>
      <anchor>c6de32ad2a24b25a110738ef6b9ae203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFMatrix4 *</type>
      <name>gum_current_matrix</name>
      <anchorfile>gumInternal_8h.html</anchorfile>
      <anchor>797804548dabe01ca097d6095eb29bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFMatrix4 *</type>
      <name>gum_stack_depth</name>
      <anchorfile>gumInternal_8h.html</anchorfile>
      <anchor>2bf20b2159d15e1df5b7f9765b81a262</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspFMatrix4</type>
      <name>gum_matrix_stack</name>
      <anchorfile>gumInternal_8h.html</anchorfile>
      <anchor>f1bf3cfa3b32de27d320460f6b86248a</anchor>
      <arglist>[4][32]</arglist>
    </member>
    <member kind="variable">
      <type>pspvfpu_context *</type>
      <name>gum_vfpucontext</name>
      <anchorfile>gumInternal_8h.html</anchorfile>
      <anchor>2cbf4472bce9807cf1be25e20852f199</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspgum.c</name>
    <path>/tmp/pspdev/pspsdk/src/gum/</path>
    <filename>pspgum_8c</filename>
    <includes id="gumInternal_8h" name="gumInternal.h" local="yes" imported="no">gumInternal.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
  </compound>
  <compound kind="file">
    <name>pspgum.h</name>
    <path>/tmp/pspdev/pspsdk/src/gum/</path>
    <filename>pspgum_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <member kind="function">
      <type>void</type>
      <name>sceGumDrawArray</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>999a3ac962f24aa742b6683f674b176c</anchor>
      <arglist>(int prim, int vtype, int count, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumDrawArrayN</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>93f5105ca9af1e88cf57ffa6b4bc0416</anchor>
      <arglist>(int prim, int vtype, int count, int a3, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumDrawBezier</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>b1e96a18c335ef6ec40e6e7e3cfb6fb1</anchor>
      <arglist>(int vtype, int ucount, int vcount, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumDrawSpline</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>b341206c1178e687e04136e287b430bd</anchor>
      <arglist>(int vtype, int ucount, int vcount, int uedge, int vedge, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumLoadIdentity</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>0fb5a93454baeab403fd56feb7a13db5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumLoadMatrix</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>c923d3f5032fde2558dd380adb5297e2</anchor>
      <arglist>(const ScePspFMatrix4 *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumLookAt</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>34cff658c58e8bac5a772873372eb736</anchor>
      <arglist>(ScePspFVector3 *eye, ScePspFVector3 *center, ScePspFVector3 *up)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumMatrixMode</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>d2265074e11b7a17c5b10a461485a7d1</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumMultMatrix</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>0811311319d61db90cd8ed88254efe46</anchor>
      <arglist>(const ScePspFMatrix4 *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumOrtho</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>a20e6ebbde5faa07752bbb6b74d7af62</anchor>
      <arglist>(float left, float right, float bottom, float top, float near, float far)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumPerspective</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>ed2be7d6520596a8482af3ab834265f2</anchor>
      <arglist>(float fovy, float aspect, float near, float far)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumPopMatrix</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>8a8e4602f09649ce5902f3de0f49dcf3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumPushMatrix</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>3cb2fb6e95aafabaa4df99611db9c743</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumRotateX</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>99402c8fe010b22304ccb4d599bb0ceb</anchor>
      <arglist>(float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumRotateY</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>ef8e89fc2454e0c1ab2406a74b3be44d</anchor>
      <arglist>(float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumRotateZ</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>b59c9b40e82bb8bfd0d3e13090748320</anchor>
      <arglist>(float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumRotateXYZ</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>29df2c1cadf57a206fd402c79d84093a</anchor>
      <arglist>(const ScePspFVector3 *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumRotateZYX</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>e979868773cba7031e443e799b1c1a05</anchor>
      <arglist>(const ScePspFVector3 *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumScale</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>a4e4951724868b33f96b3c377a33bbf4</anchor>
      <arglist>(const ScePspFVector3 *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumStoreMatrix</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>7a9f495735e0f5e25b860e36c67071c8</anchor>
      <arglist>(ScePspFMatrix4 *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumTranslate</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>febd104b7c4e5f3039d0f050c6128f73</anchor>
      <arglist>(const ScePspFVector3 *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumUpdateMatrix</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>0dda3ad2928b0e9ee09953f1104894bf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumFullInverse</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>f80bd4ce388b4fd014344b13c87823b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumFastInverse</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>ae9ca43a3c1331cd7cb302ca25d258fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumBeginObject</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>1c42df4102a329412db0931ffe609a4d</anchor>
      <arglist>(int vtype, int count, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGumEndObject</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>d4d05cef6f187785c6f8dac574eb6f28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumInit</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>c926fc74ab7b4278849927591e74cf1e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumLoadIdentity</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>69242335d0fdc420154b1d844f96be76</anchor>
      <arglist>(ScePspFMatrix4 *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumLoadMatrix</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>81947708e45b37ee32c5d740318f5123</anchor>
      <arglist>(ScePspFMatrix4 *r, const ScePspFMatrix4 *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumLookAt</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>ba49d430a3aa4cc2de3b19a28bccbc11</anchor>
      <arglist>(ScePspFMatrix4 *m, ScePspFVector3 *eye, ScePspFVector3 *center, ScePspFVector3 *up)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumMultMatrix</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>c707acdd244d33d9a95ff98faede4d85</anchor>
      <arglist>(ScePspFMatrix4 *result, const ScePspFMatrix4 *a, const ScePspFMatrix4 *b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumOrtho</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>8f97ca305cbafe7c4c251debbaeedfc9</anchor>
      <arglist>(ScePspFMatrix4 *m, float left, float right, float bottom, float top, float near, float far)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumPerspective</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>2e73ac03f887f9ac0e76088bcf2ff57e</anchor>
      <arglist>(ScePspFMatrix4 *m, float fovy, float aspect, float near, float far)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumRotateX</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>0e29fca984aba623e8ee88a8598c4509</anchor>
      <arglist>(ScePspFMatrix4 *m, float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumRotateXYZ</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>ccf9fbe95b12f044856e89167f438ae0</anchor>
      <arglist>(ScePspFMatrix4 *m, const ScePspFVector3 *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumRotateY</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>4ad72ea769bbf4f90ea92b87f7c8447a</anchor>
      <arglist>(ScePspFMatrix4 *m, float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumRotateZ</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>3389768a55e5fb83e828bf802e9df788</anchor>
      <arglist>(ScePspFMatrix4 *m, float angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumRotateZYX</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>5c8f0ae3bc4cdd51fc2d0a52d65984b8</anchor>
      <arglist>(ScePspFMatrix4 *m, const ScePspFVector3 *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumScale</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>f963eb13106832d477b504ca73b18aa2</anchor>
      <arglist>(ScePspFMatrix4 *m, const ScePspFVector3 *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumTranslate</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>cd8dc1a15ad777b65d31c14536a16f38</anchor>
      <arglist>(ScePspFMatrix4 *m, const ScePspFVector3 *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumFullInverse</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>c1138eec3dba34572ae0364a085f55c4</anchor>
      <arglist>(ScePspFMatrix4 *r, const ScePspFMatrix4 *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumFastInverse</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>378d7763d9229867fe7f90dd035cbc35</anchor>
      <arglist>(ScePspFMatrix4 *r, const ScePspFMatrix4 *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumCrossProduct</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>2d58d327acd8b67fdb05b7cdac2a9f7c</anchor>
      <arglist>(ScePspFVector3 *r, const ScePspFVector3 *a, const ScePspFVector3 *b)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>gumDotProduct</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>70b893888fd3ab20378f7bd6799d3ef0</anchor>
      <arglist>(const ScePspFVector3 *a, const ScePspFVector3 *b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gumNormalize</name>
      <anchorfile>pspgum_8h.html</anchorfile>
      <anchor>07cba332df7b7cbec56d82322ac48f8c</anchor>
      <arglist>(ScePspFVector3 *v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspgum_vfpu.c</name>
    <path>/tmp/pspdev/pspsdk/src/gum/</path>
    <filename>pspgum__vfpu_8c</filename>
    <includes id="gumInternal_8h" name="gumInternal.h" local="yes" imported="no">gumInternal.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="pspvfpu_8h" name="pspvfpu.h" local="yes" imported="no">pspvfpu.h</includes>
  </compound>
  <compound kind="file">
    <name>psphprm.h</name>
    <path>/tmp/pspdev/pspsdk/src/hprm/</path>
    <filename>psphprm_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <member kind="enumeration">
      <name>PspHprmKeys</name>
      <anchor>gcc8a52c6d23be65979bdb7049b7039ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_PLAYPAUSE</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039eae7fc2f4db76242ca1cc78a0bdbef0834</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_FORWARD</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039ea5c87db127bbd18c700b2716c9abc6204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_BACK</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039eac361e9dd9d9577dea743c272836f516e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_VOL_UP</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039eafcff84287ead01ee961fd7d8384b97ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_VOL_DOWN</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039ead04d2aa1d65b7f2729fcd202c4b99ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_HOLD</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039ea67f88ec4a3526f601089d35f5aefa6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmPeekCurrentKey</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>g9e9ede30a19591e1b9aaf167e89c0186</anchor>
      <arglist>(u32 *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmPeekLatch</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>g1921ab85075c563e73293b2569b11d51</anchor>
      <arglist>(u32 *latch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmReadLatch</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>g58bd6214ba8451d11cc09cc5805e43f3</anchor>
      <arglist>(u32 *latch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmIsHeadphoneExist</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>g055446e61b833ae1fcc453eba2403ba5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmIsRemoteExist</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>ge63a15bfc8d3f18b812c9aebc546c9fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmIsMicrophoneExist</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>g6bedc342dd457f15c5da66b1c2730a71</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspexception.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspexception_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterDefaultExceptionHandler</name>
      <anchorfile>pspexception_8h.html</anchorfile>
      <anchor>c1d4ba4d5f4c1330284d03bfd842728d</anchor>
      <arglist>(void *func)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterExceptionHandler</name>
      <anchorfile>pspexception_8h.html</anchorfile>
      <anchor>033a726d881385356f792ce085158bc8</anchor>
      <arglist>(int exno, void *func)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterPriorityExceptionHandler</name>
      <anchorfile>pspexception_8h.html</anchorfile>
      <anchor>1dc8db569aaa3b17d304534beed7bccc</anchor>
      <arglist>(int exno, int priority, void *func)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspintrman_kernel.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspintrman__kernel_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterIntrHandler</name>
      <anchorfile>group__IntrManKern.html</anchorfile>
      <anchor>ge250aebaf5d9dbab1a7366d51b13cd5d</anchor>
      <arglist>(int intno, int no, void *handler, void *arg1, void *arg2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelEnableIntr</name>
      <anchorfile>group__IntrManKern.html</anchorfile>
      <anchor>g11bc0003d68cf0601102aab873a94e50</anchor>
      <arglist>(int intno)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDisableIntr</name>
      <anchorfile>group__IntrManKern.html</anchorfile>
      <anchor>gd2da304b0e1868cdb37242744cb86ba8</anchor>
      <arglist>(int intno)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelIsIntrContext</name>
      <anchorfile>group__IntrManKern.html</anchorfile>
      <anchor>g989ecd629ecf840094cda960a158981d</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspiofilemgr_kernel.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspiofilemgr__kernel_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspiofilemgr_8h" name="pspiofilemgr.h" local="no" imported="no">pspiofilemgr.h</includes>
    <class kind="struct">PspIoDrvArg</class>
    <class kind="struct">PspIoDrvFileArg</class>
    <class kind="struct">PspIoDrvFuncs</class>
    <class kind="struct">PspIoDrv</class>
    <member kind="function">
      <type>int</type>
      <name>sceIoAddDrv</name>
      <anchorfile>group__IoFileMgr__Kernel.html</anchorfile>
      <anchor>g2cf4581dc8338a5f03dfb7d86e81f3e4</anchor>
      <arglist>(PspIoDrv *drv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoDelDrv</name>
      <anchorfile>group__IoFileMgr__Kernel.html</anchorfile>
      <anchor>gc7214128b9695de66ba4fbe5a393de60</anchor>
      <arglist>(const char *drv_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoReopen</name>
      <anchorfile>group__IoFileMgr__Kernel.html</anchorfile>
      <anchor>gdedc353add8bec459fe5f45a34a2444c</anchor>
      <arglist>(const char *file, int flags, SceMode mode, SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoGetThreadCwd</name>
      <anchorfile>group__IoFileMgr__Kernel.html</anchorfile>
      <anchor>g1b74e1096d8cd872c7c70b8e5f910b35</anchor>
      <arglist>(SceUID uid, char *dir, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoChangeThreadCwd</name>
      <anchorfile>group__IoFileMgr__Kernel.html</anchorfile>
      <anchor>ge7c998f238ffa7105183b40479d06964</anchor>
      <arglist>(SceUID uid, char *dir)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspkdebug.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspkdebug_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <member kind="typedef">
      <type>void(*</type>
      <name>PspDebugPutChar</name>
      <anchorfile>group__Kdebug.html</anchorfile>
      <anchor>gb09ee43d75d34fc1ff10fda27eca75c2</anchor>
      <arglist>)(unsigned short *args, unsigned int ch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelRegisterDebugPutchar</name>
      <anchorfile>group__Kdebug.html</anchorfile>
      <anchor>g2a8cc20142d09ceb251b325c58fbef0b</anchor>
      <arglist>(PspDebugPutChar func)</arglist>
    </member>
    <member kind="function">
      <type>PspDebugPutChar</type>
      <name>sceKernelGetDebugPutchar</name>
      <anchorfile>group__Kdebug.html</anchorfile>
      <anchor>g2bfd12db3e7292980c60556c82e1b976</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Kprintf</name>
      <anchorfile>group__Kdebug.html</anchorfile>
      <anchor>ga565fce3def7711714cc3167d0dca64d</anchor>
      <arglist>(const char *format,...) __attribute__((format(printf</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspkernel.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspkernel_8h</filename>
    <includes id="pspuser_8h" name="pspuser.h" local="no" imported="no">pspuser.h</includes>
    <includes id="pspiofilemgr__kernel_8h" name="pspiofilemgr_kernel.h" local="no" imported="no">pspiofilemgr_kernel.h</includes>
    <includes id="psploadcore_8h" name="psploadcore.h" local="no" imported="no">psploadcore.h</includes>
    <includes id="pspstdio__kernel_8h" name="pspstdio_kernel.h" local="no" imported="no">pspstdio_kernel.h</includes>
    <includes id="pspsysreg_8h" name="pspsysreg.h" local="no" imported="no">pspsysreg.h</includes>
    <includes id="pspkdebug_8h" name="pspkdebug.h" local="no" imported="no">pspkdebug.h</includes>
    <includes id="pspintrman__kernel_8h" name="pspintrman_kernel.h" local="no" imported="no">pspintrman_kernel.h</includes>
    <includes id="pspmodulemgr__kernel_8h" name="pspmodulemgr_kernel.h" local="no" imported="no">pspmodulemgr_kernel.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>pspKernelSetKernelPC</name>
      <anchorfile>pspkernel_8h.html</anchorfile>
      <anchor>264627a16a2f3cacb2c75df78521f93c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>pspKernelSetUserPC</name>
      <anchorfile>pspkernel_8h.html</anchorfile>
      <anchor>b118eb6bb0daff4fc7e5530789ac30bc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psploadcore.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>psploadcore_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <class kind="struct">SceModule</class>
    <class kind="struct">SceLibraryEntryTable</class>
    <class kind="struct">SceLibraryStubTable</class>
    <member kind="function">
      <type>SceModule *</type>
      <name>sceKernelFindModuleByName</name>
      <anchorfile>group__LoadCore.html</anchorfile>
      <anchor>g3041d89b2dd273cf191738ee904fd688</anchor>
      <arglist>(const char *modname)</arglist>
    </member>
    <member kind="function">
      <type>SceModule *</type>
      <name>sceKernelFindModuleByAddress</name>
      <anchorfile>group__LoadCore.html</anchorfile>
      <anchor>g6e948156e040fc739825d5bb54ad2088</anchor>
      <arglist>(unsigned int addr)</arglist>
    </member>
    <member kind="function">
      <type>SceModule *</type>
      <name>sceKernelFindModuleByUID</name>
      <anchorfile>group__LoadCore.html</anchorfile>
      <anchor>gcc5457be6ef3a174cdb113cf92d07747</anchor>
      <arglist>(SceUID modid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelModuleCount</name>
      <anchorfile>group__LoadCore.html</anchorfile>
      <anchor>g6c99306da8f1654ac6b3181cb0639a81</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelIcacheClearAll</name>
      <anchorfile>group__LoadCore.html</anchorfile>
      <anchor>g25e2eacbf67f0a0132bf6550b5e31f2f</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspmodulemgr_kernel.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspmodulemgr__kernel_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspmodulemgr_8h" name="pspmodulemgr.h" local="no" imported="no">pspmodulemgr.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetModuleList</name>
      <anchorfile>group__ModuleMgrKern.html</anchorfile>
      <anchor>gf4e1781f143f012fc7587d976227165a</anchor>
      <arglist>(int readbufsize, SceUID *readbuf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelModuleCount</name>
      <anchorfile>group__ModuleMgrKern.html</anchorfile>
      <anchor>g6c99306da8f1654ac6b3181cb0639a81</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelLoadModuleBuffer</name>
      <anchorfile>group__ModuleMgrKern.html</anchorfile>
      <anchor>g973f8b56a3212e88cedef363a3ca504e</anchor>
      <arglist>(void *buf, SceSize bufsize, int flags, SceKernelLMOption *option)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspstdio_kernel.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspstdio__kernel_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspiofilemgr_8h" name="pspiofilemgr.h" local="no" imported="no">pspiofilemgr.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStdoutReopen</name>
      <anchorfile>group__Stdio__Kernel.html</anchorfile>
      <anchor>ga1ef08d9ce1a0747e0e9bbd7088cfd33</anchor>
      <arglist>(const char *file, int flags, SceMode mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStderrReopen</name>
      <anchorfile>group__Stdio__Kernel.html</anchorfile>
      <anchor>g11577cd937a55f413ef1c45e9d5d19d7</anchor>
      <arglist>(const char *file, int flags, SceMode mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fdprintf</name>
      <anchorfile>group__Stdio__Kernel.html</anchorfile>
      <anchor>g3a668e8f866d4cae6df9c1eb2324fec8</anchor>
      <arglist>(int fd, const char *format,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspsyscon.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspsyscon_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCE_LED_POWER</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>g68e72e2e51a75b246eb01d5e3ab26f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LED_ON</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>gf2e697ac60e05813d45ea2c9c9e79c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LED_OFF</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>g80700bb63bd56ebabbb4728aa433fd29</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceSysconPowerStandby</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>g3342392d3a650b2f6955566f382c61d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceSysconResetDevice</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>gd236725bef14ad3f906079cd17154335</anchor>
      <arglist>(int unk1, int unk2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysconCtrlLED</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>gea06db293a8a6ed1d27adc282de3c6e0</anchor>
      <arglist>(int SceLED, int state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspsysmem_kernel.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspsysmem__kernel_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspsysmem_8h" name="pspsysmem.h" local="no" imported="no">pspsysmem.h</includes>
    <class kind="struct">_PspSysmemPartitionInfo</class>
    <member kind="typedef">
      <type>_PspSysmemPartitionInfo</type>
      <name>PspSysmemPartitionInfo</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g98bf50c180d07aceab88c32aa495ff8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelQueryMemoryPartitionInfo</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g5326946ce66edc521cd20b7213c62357</anchor>
      <arglist>(int pid, PspSysmemPartitionInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>SceSize</type>
      <name>sceKernelPartitionTotalFreeMemSize</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g773cca39fa1dc802852bb98700672492</anchor>
      <arglist>(int pid)</arglist>
    </member>
    <member kind="function">
      <type>SceSize</type>
      <name>sceKernelPartitionMaxFreeMemSize</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>gda62bfa3c5098c4b9fd32b92d2e67559</anchor>
      <arglist>(int pid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelSysMemDump</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g811591cef28dc4c5e89224205b0973ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelSysMemDumpBlock</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>ge56f384547331d9320595f7e916a3e69</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelSysMemDumpTail</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g0dacda00a078f2d8ee66ed73be1a2d31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSetDdrMemoryProtection</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>gdf29962d26adbf4f907356dd7b1b342e</anchor>
      <arglist>(void *addr, int size, int prot)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateHeap</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g13fc6e8979dcc3da32660685e8589dcf</anchor>
      <arglist>(SceUID partitionid, SceSize size, int unk, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceKernelAllocHeapMemory</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g9f9decae3cbf231a01e3b8a74c97c9fa</anchor>
      <arglist>(SceUID heapid, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelFreeHeapMemory</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g90944113949fd679a367bf0410a63ac9</anchor>
      <arglist>(SceUID heapid, void *block)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteHeap</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>gbc3e843fd2c68f771fedf0a846e47c65</anchor>
      <arglist>(SceUID heapid)</arglist>
    </member>
    <member kind="function">
      <type>SceSize</type>
      <name>sceKernelHeapTotalFreeSize</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>gf77c69c149c4f35a716b4367eeb7303c</anchor>
      <arglist>(SceUID heapid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspsysreg.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspsysreg_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceSysregMeResetEnable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>g7a6b2599cf98f4983e347ad77f1a5abc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregMeResetDisable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>g7ec130f2855725f5547f554b39325b24</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregVmeResetEnable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>g34dfea12bc149ef19c1bac4f419e05f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregVmeResetDisable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>g3b4184fab0689480d30c69a0bde8ef45</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregMeBusClockEnable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>g0b11924aae2df3b2196c8f29b7cc5ce3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregMeBusClockDisable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>ge728b84b3b81038c1c5e6eb565f58920</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspthreadman_kernel.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>pspthreadman__kernel_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspthreadman_8h" name="pspthreadman.h" local="no" imported="no">pspthreadman.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSuspendAllUserThreads</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>gd3ddd1324a257630fdd8a3865ff47f90</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelIsUserModeThread</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g3de0194a496bd680c037f8967cae6a7a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetUserLevel</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g5f36092c80a2987511d5ebbe171972a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceKernelGetSyscallRA</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>gba0c6f47dc72b1593454293e51464e57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadKernelStackFreeSize</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>gdaf8fc7f42720e66f170faf673c98ff6</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCheckThreadKernelStack</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g25f7e3584ccbe03ad4965b3aaa65b765</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelExtendKernelStack</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g8d5c9aea05f5405903643c7cadcbbc50</anchor>
      <arglist>(int type, void(*cb)(void *), void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceKernelGetSystemStatusFlag</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g5a4739de702a7596e8be93f371e81338</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelAllocateKTLS</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g937d60280c1f198d552d83d81f54a929</anchor>
      <arglist>(int id, int(*cb)(unsigned int *size, void *arg), void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelFreeKTLS</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g4aed09e02f39cdae1f84f7d699a77275</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceKernelGetKTLS</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g0b8a23f9ceebbf5d8bba83a683aad333</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceKernelGetThreadKTLS</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g8fe8cdfc51821acb1d0ad237c61c79cd</anchor>
      <arglist>(int id, SceUID thid, int mode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psputilsforkernel.h</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>psputilsforkernel_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGzipDecompress</name>
      <anchorfile>psputilsforkernel_8h.html</anchorfile>
      <anchor>0870d13272019d05c519f46457a5086c</anchor>
      <arglist>(u8 *dest, u32 destSize, const u8 *src, u32 unknown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheInvalidateAll</name>
      <anchorfile>psputilsforkernel_8h.html</anchorfile>
      <anchor>ce73112494a6ed513a1e64d99c9fdc7f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDcacheProbe</name>
      <anchorfile>psputilsforkernel_8h.html</anchorfile>
      <anchor>ec5261fd1141dbb2b83b1f58aa2387f3</anchor>
      <arglist>(void *addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelIcacheInvalidateAll</name>
      <anchorfile>psputilsforkernel_8h.html</anchorfile>
      <anchor>d737e117bc0bc99135896e8017c8df9f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelIcacheInvalidateRange</name>
      <anchorfile>psputilsforkernel_8h.html</anchorfile>
      <anchor>869a0c3afd4ca33470d62b8b9f54cf24</anchor>
      <arglist>(const void *addr, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelIcacheProbe</name>
      <anchorfile>psputilsforkernel_8h.html</anchorfile>
      <anchor>6e7d0975c42f79111f003156c0c30d0e</anchor>
      <arglist>(const void *addr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>alloc.c</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>alloc_8c</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="malloc_8h" name="malloc.h" local="no" imported="no">malloc.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <class kind="struct">_heap_mem_header</class>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ALIGNMENT</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>03d83b460541e5ff9cae283d9f55afb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIGN</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>58a9d8765919d2dac1040324171d78e8</anchor>
      <arglist>(x, align)</arglist>
    </member>
    <member kind="typedef">
      <type>_heap_mem_header</type>
      <name>heap_mem_header_t</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>521132ea6b256b26de1c1209720203a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>_sbrk</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>fcc86b0f227230278459bfaa6e3a2961</anchor>
      <arglist>(ptrdiff_t incr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_pspsdk_alloc_init</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>86c9945378de0ab8202378e59e72a408</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_pspsdk_alloc_deinit</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>1448659ae14cae0ae24961f12c9e92c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_pspsdk_alloc_lock</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>a78c081de24d07dc5dc7314287df3c7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_pspsdk_alloc_unlock</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>18751786dc95065cf522babd06b0bc86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>heap_mem_header_t *</type>
      <name>_heap_mem_fit</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>38c02c1671f9f598aa4a0ce914d7adac</anchor>
      <arglist>(heap_mem_header_t *head, size_t size)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>__alloc_heap_base</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>ea9bd521177588ac95e332dc206892c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>heap_mem_header_t *</type>
      <name>__alloc_heap_head</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>673b70e93ac29f7385874094586c0c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>heap_mem_header_t *</type>
      <name>__alloc_heap_tail</name>
      <anchorfile>alloc_8c.html</anchorfile>
      <anchor>49a90c3b1a2abe3a90ec2ffa11763e33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>assert.h</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>assert_8h</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>assert</name>
      <anchorfile>assert_8h.html</anchorfile>
      <anchor>3153a272f18d0f805028fce7e4337b53</anchor>
      <arglist>(cond)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>__assert_fail</name>
      <anchorfile>assert_8h.html</anchorfile>
      <anchor>8d0b743c103e4149a3a6b2dada3be1da</anchor>
      <arglist>(const char *assertion, const char *file, unsigned int line) __attribute__((noreturn))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ctype.h</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>ctype_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>isalnum</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>698ac061ca18050f6e861e3d4ea0a693</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isalpha</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>a01365d84540f64f5ab5064d59b05c50</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iscntrl</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>dd05f77f6d294add9d66f916a473944d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isdigit</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>6fa1e2a306d0a84071e1537071172243</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isgraph</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>2c577bd448930963c5298244e447f628</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>islower</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>3e54aea830ac25564dacd5c84d3d2abe</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isprint</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>4aa9b67cdd7a681884a87aa4275fda21</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ispunct</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>60ec8845aa835495aa89054301069b59</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isspace</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>9e4f3a211671d05c9df210bb611719bf</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isupper</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>368c0edfaa1eef894f7a21733be2f26b</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isxdigit</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>f5b7c16911f155152e74cfd43c510b05</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tolower</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>50f9246b180d1423593a5219375ec590</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>toupper</name>
      <anchorfile>ctype_8h.html</anchorfile>
      <anchor>b6182394c667c4e4426f98af3309c30d</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxx.cpp</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>cxx_8cpp</filename>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="malloc_8h" name="malloc.h" local="no" imported="no">malloc.h</includes>
    <member kind="function">
      <type></type>
      <name>__attribute__</name>
      <anchorfile>cxx_8cpp.html</anchorfile>
      <anchor>1b0d0fa84ec2e66b8f999d4e41164bc7</anchor>
      <arglist>((weak)) void operator delete(void *ptr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init.c</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>init_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>_pspsdk_alloc_init</name>
      <anchorfile>init_8c.html</anchorfile>
      <anchor>86c9945378de0ab8202378e59e72a408</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_pspsdk_alloc_deinit</name>
      <anchorfile>init_8c.html</anchorfile>
      <anchor>1448659ae14cae0ae24961f12c9e92c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_pspsdk_stdio_init</name>
      <anchorfile>init_8c.html</anchorfile>
      <anchor>3db70f71a2e66c6c988b911be373a411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_pspsdk_stdio_deinit</name>
      <anchorfile>init_8c.html</anchorfile>
      <anchor>40c0721866a2fb2e6e420c37995d0bdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_pspsdk_stdlib_init</name>
      <anchorfile>init_8c.html</anchorfile>
      <anchor>2312d85d7c901c46c958a08984a23b32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_pspsdk_stdlib_deinit</name>
      <anchorfile>init_8c.html</anchorfile>
      <anchor>916e91d99ff806e49f5b068113fe2a39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__attribute__</name>
      <anchorfile>init_8c.html</anchorfile>
      <anchor>7f320e599828ffc0f889454cc9f54e72</anchor>
      <arglist>((weak, constructor))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__attribute__</name>
      <anchorfile>init_8c.html</anchorfile>
      <anchor>aab71ae5e81c890ee11d9cb1d729e758</anchor>
      <arglist>((weak, destructor))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>libcglue.c</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>libcglue_8c</filename>
    <includes id="malloc_8h" name="malloc.h" local="no" imported="no">malloc.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="time_8h" name="time.h" local="no" imported="no">time.h</includes>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspiofilemgr_8h" name="pspiofilemgr.h" local="no" imported="no">pspiofilemgr.h</includes>
    <includes id="pspmodulemgr_8h" name="pspmodulemgr.h" local="no" imported="no">pspmodulemgr.h</includes>
    <includes id="pspsysmem_8h" name="pspsysmem.h" local="no" imported="no">pspsysmem.h</includes>
    <includes id="pspthreadman_8h" name="pspthreadman.h" local="no" imported="no">pspthreadman.h</includes>
    <includes id="psputils_8h" name="psputils.h" local="no" imported="no">psputils.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStdin</name>
      <anchorfile>libcglue_8c.html</anchorfile>
      <anchor>9f555bccda64c750265649b5614efe08</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStdout</name>
      <anchorfile>libcglue_8c.html</anchorfile>
      <anchor>a91de48e1c2f190692be5df57bdb530f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStderr</name>
      <anchorfile>libcglue_8c.html</anchorfile>
      <anchor>07cfc3934c2d5c199a9eef3ecfd95f2e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>__psp_init_cwd</name>
      <anchorfile>libcglue_8c.html</anchorfile>
      <anchor>8c2a891686486221344f5a6fb3e3eca2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>__psp_path_absolute</name>
      <anchorfile>libcglue_8c.html</anchorfile>
      <anchor>b5738bdd7eb78303b3ec4a45bab5971d</anchor>
      <arglist>(const char *in, char *out, int len)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>__psp_argv_0</name>
      <anchorfile>libcglue_8c.html</anchorfile>
      <anchor>d6c872e4312a03b586d057eee22edde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>__psp_cwd_initialized</name>
      <anchorfile>libcglue_8c.html</anchorfile>
      <anchor>a1ec84f3ea9a9fa2189f25d0ea215ef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>__psp_cwd</name>
      <anchorfile>libcglue_8c.html</anchorfile>
      <anchor>cb46a4b520671381af48a8b342e59203</anchor>
      <arglist>[MAXPATHLEN+1]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>malloc.h</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>malloc_8h</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <member kind="function">
      <type>void *</type>
      <name>malloc</name>
      <anchorfile>malloc_8h.html</anchorfile>
      <anchor>7ac38fce3243a7dcf448301ee9ffd392</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>realloc</name>
      <anchorfile>malloc_8h.html</anchorfile>
      <anchor>1a6b5e8d2f1c37e5b43e4345586075be</anchor>
      <arglist>(void *ptr, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>calloc</name>
      <anchorfile>malloc_8h.html</anchorfile>
      <anchor>0189827ea98e04f062391b1f067ce260</anchor>
      <arglist>(size_t n, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>memalign</name>
      <anchorfile>malloc_8h.html</anchorfile>
      <anchor>342ad1f8e11be89bbfe30a57677a2b53</anchor>
      <arglist>(size_t align, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free</name>
      <anchorfile>malloc_8h.html</anchorfile>
      <anchor>fbedc913aa4651b3c3b4b3aecd9b4711</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>__mem_walk_begin</name>
      <anchorfile>malloc_8h.html</anchorfile>
      <anchor>5db399bdb903657d50033d14051156b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>__mem_walk_read</name>
      <anchorfile>malloc_8h.html</anchorfile>
      <anchor>f8f40988e27f9b46bf685860eadb3430</anchor>
      <arglist>(void *token, u32 *size, void **ptr, int *valid)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>__mem_walk_inc</name>
      <anchorfile>malloc_8h.html</anchorfile>
      <anchor>db8e550d0276ccc6eccf88253474f711</anchor>
      <arglist>(void *token)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>__mem_walk_end</name>
      <anchorfile>malloc_8h.html</anchorfile>
      <anchor>8b4be9af48cb8cbd0b32e0fe5a0e7ebb</anchor>
      <arglist>(void *token)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>qsort.c</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>qsort_8c</filename>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>min</name>
      <anchorfile>qsort_8c.html</anchorfile>
      <anchor>c6afabdc09a49a433ee19d8a9486056d</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>swapcode</name>
      <anchorfile>qsort_8c.html</anchorfile>
      <anchor>94e98b172e7b50dde8c112d1617d446d</anchor>
      <arglist>(TYPE, parmi, parmj, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWAPINIT</name>
      <anchorfile>qsort_8c.html</anchorfile>
      <anchor>e05386e947a28313dfc55049cbed825a</anchor>
      <arglist>(a, es)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>swap</name>
      <anchorfile>qsort_8c.html</anchorfile>
      <anchor>3ca5ecd34b04d6a243c054ac3a57f68d</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>vecswap</name>
      <anchorfile>qsort_8c.html</anchorfile>
      <anchor>584c607dc0b230ebfdde9a157887c6a9</anchor>
      <arglist>(a, b, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMP</name>
      <anchorfile>qsort_8c.html</anchorfile>
      <anchor>6f285bba3edde515f2fe634df512cdbc</anchor>
      <arglist>(t, x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>thunk</name>
      <anchorfile>qsort_8c.html</anchorfile>
      <anchor>2b18d15414231a2d9b8f0918188039aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>cmp_t</name>
      <anchorfile>qsort_8c.html</anchorfile>
      <anchor>bd8540c0d653e4a1457e863923410bbc</anchor>
      <arglist>(const void *, const void *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qsort</name>
      <anchorfile>qsort_8c.html</anchorfile>
      <anchor>2e2d678f8229e5cc532206da89450741</anchor>
      <arglist>(void *a, size_t n, size_t es, cmp_t *cmp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stdio.h</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>stdio_8h</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <class kind="struct">FILE</class>
    <member kind="define">
      <type>#define</type>
      <name>_open</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>626f6c33678008cc272f0c095476d84f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_close</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>3ccbd91433ffd88ca0d6f664ca6051c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_read</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>41184dc65e55f92522031ede71b2d93d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_write</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>21a85437ca21f3f2fc6a96fe7b8e9716</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_lseek</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>1e5593909b113ed8def340ad46e7aff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_O_APPEND</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>3639b6da1cf387c0af6a8a566a716062</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_O_BINARY</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>166a079a4990ddeb0a32475728bbacd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_O_CREAT</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>774664d26ae1b1d55902562af5f1ec28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_O_RDONKY</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>4932007b53ced8734691f049222de0c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_O_RDWR</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>010187fb7398870cb57af650e65bded1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_O_TEXT</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>520b5ac1ca3f9a2bdd83f34a181623d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_O_TRUNC</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>695223e667532dd799a1c5b56d9eae75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_O_WRONLY</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>c58f7734ab4dd8ae25bda2fba713ea56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>O_BINARY</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>36fa9b2e726512bc17a7a6d3e39002be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>O_TEXT</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>9abb6d01b83e0bc5a6e2adeceb7dffd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUFSIZ</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>72a591cf0a96cf23c63df5c78712dabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_NFILE</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>15ace1b18677d23cb2caaf577a435cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOFBF</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>f7475971eb93ce0184379e71fe7626e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOLBF</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>ca9e52813bd224e4519e0b1289abbce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IONBF</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>8661edb6b53e3104bef089bef02d0508</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOEOF</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>719aebb4b0418c96798465c28867987e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOERR</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>e5b324e6ee43bc6d90b874a7babc6d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOREAD</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>7262cef78990598bbace8871ffa05314</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOWRT</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>47ec54dd9ca148452505d19160495e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IORW</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>740a30a7a19a361848f4e510483ff4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_IOMYBUF</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>1bb067fbd9b2f698da16b52df626e3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOF</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>59adc4c82490d23754cd39c2fb99b0da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FOPEN_MAX</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>a188a2e288c10a684622814c51337465</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FILENAME_MAX</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>ada6f64b4a36eb39c9b4cfd44eef7b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEEK_SET</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>0d112bae8fd35be772185b6ec6bcbe64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEEK_CUR</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>4c8d0b76b470ba65a43ca46a88320f39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEEK_END</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>d2a2e6c114780c3071efd24f16c7f7d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stdin</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>aca70138f0cb63ddb026921afc635179</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stdout</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>0c0ef221f95f64e8632451312fd18cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stderr</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>5ce35bd5ba5021fd3b2e951e8f497656</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long</type>
      <name>fpos_t</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>423f0d9af1916bae0cc534148fe9cd57</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearerr</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>917e77e365a5da28efb1963efafa8f23</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>feof</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>c14fc08615f03fe0c8195387782f587a</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ferror</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>5bc228c8102db82ac68301ab4debeac5</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>fopen</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>7a783dc33bb2be5460b8f3e619994241</anchor>
      <arglist>(const char *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>fdopen</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>bd2fa95fac96d27c9af995fc17408419</anchor>
      <arglist>(int, const char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fclose</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>6441bf0a1040701d1ba906b64f348daf</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fflush</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>fa9ad98643851ca03a428e264122dac0</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fgetc</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>8621b7baf671809dd5e5d31d048279ca</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fgetpos</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>b7acc41b9b54abddabec699307fa9232</anchor>
      <arglist>(FILE *, fpos_t *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>fgets</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>3083893ca782630e45351accb75e5c7f</anchor>
      <arglist>(char *, int, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fileno</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>3c38c8473d0772765dbbd8f0d6c373bc</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fputc</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>36134b3cbf8f0c390e56ad06b8bc7fc9</anchor>
      <arglist>(int, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fputs</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>908b30e1f45b09bb45441a26885fd119</anchor>
      <arglist>(const char *, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>fread</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>ae22dd41ebe1e64904429c5a31e7e642</anchor>
      <arglist>(void *, size_t, size_t, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>freopen</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>3c0520126c4dbd29f33e774498d24d00</anchor>
      <arglist>(const char *, const char *, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fscanf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>9c0b19d6c0371deb9c35e3b6e0edeb51</anchor>
      <arglist>(FILE *, const char *,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fseek</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>71f44bc63869da8cdd9b60e3d086d21d</anchor>
      <arglist>(FILE *, long, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fsetpos</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>2e7034972d792c24f93291c34ee33262</anchor>
      <arglist>(FILE *, const fpos_t *)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>ftell</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>1844939701ba30c5a01bd551998881db</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>fwrite</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>e791f89cbd418b3074b1349d8f5075dd</anchor>
      <arglist>(const void *, size_t, size_t, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getc</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>4c175ef8ca0c6b6cbc15ae4421a124f3</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getchar</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>3e29caa20f7cffe18f410f01278905a8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>gets</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>e1dcce765754ca6bff2d928d63f5426a</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>perror</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>d5f1d47e8cc6b2c92be35a2402ad4ed5</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>putc</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>e3948cf394ab70902778f80f8de5eb1b</anchor>
      <arglist>(int, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>puts</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>d6eb8da5b318991f44cdd98e20939b7d</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>remove</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>d058e27a69e7acab0e0e9368ecfa0465</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rename</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>4f8f5f61d31d143fd3c1fc74210053d5</anchor>
      <arglist>(const char *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewind</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>de4e414d6139067853378a295e8988c5</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scanf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>9700147e05b9b5626ee824ad24d55e25</anchor>
      <arglist>(const char *,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setbuf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>7878eb20a21e38b9cc5d9bc91ea5cc0d</anchor>
      <arglist>(FILE *, char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setvbuf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>b7493ce15bd9a9c8715b2e527ac07c1e</anchor>
      <arglist>(FILE *, char *, int, size_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sscanf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>2256f668bdd3192173bb90c396a1d4fa</anchor>
      <arglist>(const char *, const char *,...)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>tmpfile</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>a415204f66d1e605f41738e448208467</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>tmpnam</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>ebdc96efd913074fac9d6bb4c9685e70</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vfscanf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>a60c05d32c78bff7914611870019ed9a</anchor>
      <arglist>(FILE *, const char *, va_list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vscanf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>99b6d62002444e056a3c0735d0ebb513</anchor>
      <arglist>(const char *, va_list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vsscanf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>968bb79e79732c152abc7d76db15d6d9</anchor>
      <arglist>(const char *, const char *, va_list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vxscanf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>5416a95fa35daf367e9cc9926b1e1cad</anchor>
      <arglist>(int(*xgetc)(void **), void(*xungetc)(int, void **), void *stream, const char *, va_list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>xscanf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>ddd221441d32816f31feecb41a973909</anchor>
      <arglist>(int(*xgetc)(void **), void(*xungetc)(int, void **), void *stream, const char *,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ungetc</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>aa45e956d4050ab6ff13699ad23f5aa6</anchor>
      <arglist>(int, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_fcloseall</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>393c06121d22a33706f1ccd0864e7a01</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_fflushall</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>12b62a13bc998c8ca9af07ca46f65386</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>chdir</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>03af571dfb595681bfa203c83385c07b</anchor>
      <arglist>(const char *path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vxprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>48722bf97eee3a0bdf14cdc9f2ee6f38</anchor>
      <arglist>(void(*func)(char *, int, void *), void *arg, const char *format, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vsnprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>f67cd10179bf7388f6190ad133aa3258</anchor>
      <arglist>(char *buf, size_t n, const char *fmt, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vsprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>2acd803179adb1bdd96c409c7cf6ddca</anchor>
      <arglist>(char *buf, const char *fmt, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>vmprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>77203cc127365806f327c4ca203e4819</anchor>
      <arglist>(const char *zFormat, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vfprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>bce5179776b95fbd3ea3e5dd21d87f7d</anchor>
      <arglist>(FILE *pOut, const char *zFormat, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>a715ef816dc040c8b367fde4ba84d6f3</anchor>
      <arglist>(const char *format, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vasprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>088e5d122572b7b20bd5abcdda97119e</anchor>
      <arglist>(char **strp, const char *format, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>xprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>7038b80b7f3bda21c541bebbd3902345</anchor>
      <arglist>(void(*func)(char *, int, void *), void *arg, const char *format,...) __attribute__((format(printf</arglist>
    </member>
    <member kind="function">
      <type>int int</type>
      <name>snprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>7264d068ca70146760b9eea9bfcecad4</anchor>
      <arglist>(char *str, size_t sz, const char *format,...) __attribute__((format(printf</arglist>
    </member>
    <member kind="function">
      <type>int int int</type>
      <name>sprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>460c9c3fe941b897632e2cf423d72a01</anchor>
      <arglist>(char *buf, const char *fmt,...) __attribute__((format(printf</arglist>
    </member>
    <member kind="function">
      <type>int int int char *</type>
      <name>mprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>c54a11d0926b23ba74ccd1c2b3947995</anchor>
      <arglist>(const char *zFormat,...) __attribute__((format(printf</arglist>
    </member>
    <member kind="function">
      <type>int int int char int</type>
      <name>fprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>9da0d10a565288544fcd392986ca4c30</anchor>
      <arglist>(FILE *pOut, const char *zFormat,...) __attribute__((format(printf</arglist>
    </member>
    <member kind="function">
      <type>int int int char int int</type>
      <name>printf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>3309659920834c0b262eb51fd5c02eff</anchor>
      <arglist>(const char *format,...) __attribute__((format(printf</arglist>
    </member>
    <member kind="function">
      <type>int int int char int int int</type>
      <name>asprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>5b1b979998b73eb7585f000d15e6113a</anchor>
      <arglist>(char **strp, const char *format,...) __attribute__((format(printf</arglist>
    </member>
    <member kind="function">
      <type>int int int char int int int int</type>
      <name>putchar</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>8759d87b07d8b46398e8a43a8e7dd0ba</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>npmPuts</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>3c6fb8f597de0fd7959d6fb2ac02c4de</anchor>
      <arglist>(const char *buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>a3a168a6f2d3d178385182b952759135</anchor>
      <arglist>(const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vnprintf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>393400c0beeaca78916868a3011213f7</anchor>
      <arglist>(const char *format, va_list args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sio_printf</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>2eb8cd8393723ce3c22754230ca0d85e</anchor>
      <arglist>(const char *format,...)</arglist>
    </member>
    <member kind="variable">
      <type>FILE</type>
      <name>__iob</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>e33ec290f0df2483544c29d44f6f9dc7</anchor>
      <arglist>[_NFILE]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stdlib.c</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>stdlib_8c</filename>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <class kind="struct">environvariable_t</class>
    <member kind="function">
      <type>char *</type>
      <name>__stdlib_ecvt</name>
      <anchorfile>stdlib_8c.html</anchorfile>
      <anchor>df787dd4a94484f5d13294af56e97705</anchor>
      <arglist>(double, size_t, int *, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isspace</name>
      <anchorfile>stdlib_8c.html</anchorfile>
      <anchor>9e4f3a211671d05c9df210bb611719bf</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isdigit</name>
      <anchorfile>stdlib_8c.html</anchorfile>
      <anchor>6fa1e2a306d0a84071e1537071172243</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isalpha</name>
      <anchorfile>stdlib_8c.html</anchorfile>
      <anchor>a01365d84540f64f5ab5064d59b05c50</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isupper</name>
      <anchorfile>stdlib_8c.html</anchorfile>
      <anchor>368c0edfaa1eef894f7a21733be2f26b</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>__stdlib_exit_func</name>
      <anchorfile>stdlib_8c.html</anchorfile>
      <anchor>d390516eb6a9b2581ec4d20506283379</anchor>
      <arglist>[32])(void)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>__stdlib_exit_index</name>
      <anchorfile>stdlib_8c.html</anchorfile>
      <anchor>1753e75eb614d558ac56773c1467217a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>environvariable_t</type>
      <name>__stdlib_env</name>
      <anchorfile>stdlib_8c.html</anchorfile>
      <anchor>dbb5a4650b95ff42990d6d930a1bf037</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>__stdlib_mb_shift</name>
      <anchorfile>stdlib_8c.html</anchorfile>
      <anchor>4bacb0be815f27f928572e82cad559bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>__stdlib_rand_seed</name>
      <anchorfile>stdlib_8c.html</anchorfile>
      <anchor>47f15079cbcf8550a10f8c3efe90f86c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stdlib.h</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>stdlib_8h</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <class kind="struct">div_t</class>
    <class kind="struct">ldiv_t</class>
    <class kind="struct">lldiv_t</class>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXIT_SUCCESS</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>687984f47d8cce148d1b914d2b79612a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXIT_FAILURE</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>73efe787c131b385070f25d18b7c9aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MB_CUR_MAX</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>5455b7a60d7e3087ec55dfe37a088bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAND_MAX</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>690f251553b39fd4f31894826141b61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abort</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>c15f85bbe9d27c028a07835b8947dceb</anchor>
      <arglist>(void) __attribute__((noreturn))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>abs</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>2503bc813e76c9ff8b3523db10bdc06e</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>atexit</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>7cb771250232f7f27f31079208f4428a</anchor>
      <arglist>(void(*)(void))</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>atof</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>3c03a473fd58b46d02952cbb6f4a83af</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exit</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>6f255d924f7a6bb2c4be0c8c2f2d9ce3</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>bsearch</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>49a76993c8406bc5a389dfabb8089bd1</anchor>
      <arglist>(const void *, const void *, size_t, size_t, int(*)(const void *, const void *))</arglist>
    </member>
    <member kind="function">
      <type>div_t</type>
      <name>div</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>d17e77a41f50034681a0c419c664e721</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>getenv</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>872ac3564834aa0ba70a9e1bd3c2f9de</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>labs</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>cef82b884418ad50ae51cadb8eb35069</anchor>
      <arglist>(long)</arglist>
    </member>
    <member kind="function">
      <type>ldiv_t</type>
      <name>ldiv</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>9961db60c90864f8b8497073dd749d83</anchor>
      <arglist>(long, long)</arglist>
    </member>
    <member kind="function">
      <type>long long</type>
      <name>llabs</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>ed06afcfed16ae2e80a211efddbb7081</anchor>
      <arglist>(long long)</arglist>
    </member>
    <member kind="function">
      <type>lldiv_t</type>
      <name>lldiv</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>1b9b0a37de5270109f0393520d75b30d</anchor>
      <arglist>(long long, long long)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rand</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>e23144bcbb8e3742b00eb687c36654d1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setenv</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>4f163149d0e7590ff98d7c8bbd17583d</anchor>
      <arglist>(const char *, const char *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>srand</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>a81073f6cbb7a8595535ffb7059ff0d0</anchor>
      <arglist>(unsigned int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>strtod</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>65f6674a5936f89fcbb18737e660aed3</anchor>
      <arglist>(const char *, char **)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>strtol</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>18c431bde684e5338c737b1f7d423c05</anchor>
      <arglist>(const char *, char **, int)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>strtoul</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>5873bacd15539fe9c2948348bb6eda32</anchor>
      <arglist>(const char *, char **, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qsort</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>216aaec88b41d3e2f8502a5b3365ea81</anchor>
      <arglist>(void *base, size_t nmemb, size_t size, int(*compar)(const void *, const void *))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mblen</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>e650100e5bb658ce0ed1e25349f63123</anchor>
      <arglist>(const char *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>mbstowcs</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>9f08da3fb8527227555fd5d20b3bd782</anchor>
      <arglist>(wchar_t *, const char *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mbtowc</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>229dcd06a299506a51dd0d50e416534f</anchor>
      <arglist>(wchar_t *, const char *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>wcstombs</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>7f605f5bedacae3cde1c8b457ffa5953</anchor>
      <arglist>(char *, const wchar_t *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wctomb</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>0eb3389011d8b4ed673f8d1676418f12</anchor>
      <arglist>(char *, wchar_t)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>_itoa</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>6e941a8632f9818783f38f565ee657cf</anchor>
      <arglist>(int, char *, int)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>_ltoa</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>bf4cc07475c15365a826509b77aab111</anchor>
      <arglist>(long, char *, int)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>_lltoa</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>3c6af35b0a08289a09b509fa92b643a5</anchor>
      <arglist>(long long, char *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>system</name>
      <anchorfile>stdlib_8h.html</anchorfile>
      <anchor>8b0abd498c08f782b325e8532254e962</anchor>
      <arglist>(const char *string)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>string.c</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>string_8c</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="malloc_8h" name="malloc.h" local="no" imported="no">malloc.h</includes>
    <class kind="struct">charmap_t</class>
    <member kind="function">
      <type>int</type>
      <name>isalnum</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>698ac061ca18050f6e861e3d4ea0a693</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isalpha</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>a01365d84540f64f5ab5064d59b05c50</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iscntrl</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>dd05f77f6d294add9d66f916a473944d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isdigit</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>6fa1e2a306d0a84071e1537071172243</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isgraph</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>2c577bd448930963c5298244e447f628</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>islower</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>3e54aea830ac25564dacd5c84d3d2abe</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isprint</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>4aa9b67cdd7a681884a87aa4275fda21</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ispunct</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>60ec8845aa835495aa89054301069b59</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isspace</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>9e4f3a211671d05c9df210bb611719bf</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isupper</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>368c0edfaa1eef894f7a21733be2f26b</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isxdigit</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>f5b7c16911f155152e74cfd43c510b05</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tolower</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>50f9246b180d1423593a5219375ec590</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>toupper</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>b6182394c667c4e4426f98af3309c30d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>isSpecialSJIS</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>86b460858c7bf8fd6f58212cea24265f</anchor>
      <arglist>(short sjis)</arglist>
    </member>
    <member kind="function">
      <type>short</type>
      <name>isSpecialASCII</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>6810e1fc923108de30ae3a02886b7f19</anchor>
      <arglist>(unsigned char ascii)</arglist>
    </member>
    <member kind="variable">
      <type>charmap_t *</type>
      <name>sjis_conversion</name>
      <anchorfile>string_8c.html</anchorfile>
      <anchor>55870f5bcb93b27a096541b6dbba9af8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>string.h</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>string_8h</filename>
    <includes id="ctype_8h" name="ctype.h" local="no" imported="no">ctype.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stricmp</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>4e0be90a3757e352f42612d09a7d1aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>strnicmp</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>16a19b1831112e876b010468ec15916f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>memchr</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>55f618822d3f3615984dcaa02706a314</anchor>
      <arglist>(const void *, int, size_t)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>memcpy</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>0a3e682eff8f0c6e8adc371f54cc9f3f</anchor>
      <arglist>(void *, const void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>memmove</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>04322b22ff8bcfdcdcbfe87690683545</anchor>
      <arglist>(void *, const void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>memset</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>68d2b40ef2213b9227a1ce3b81997ae5</anchor>
      <arglist>(void *, int, size_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>memcmp</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>0849c52baadd8269575bc57e2273d862</anchor>
      <arglist>(const void *, const void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strcmp</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>21e4788b4a0ae39b11aa32e9a1079f98</anchor>
      <arglist>(const char *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strncmp</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>7329b6bdb6e5510268fec1d24657574e</anchor>
      <arglist>(const char *, const char *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>strlen</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>cdb0a0e429c8899527459824a7463ab1</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strdup</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>b1cc1a3ff560049e22576031c7c2345b</anchor>
      <arglist>(const char *s)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strcat</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>6f5ce1c3abaccb0f62ff60c0ac31a219</anchor>
      <arglist>(char *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strchr</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>df46aa8f2e08cfb505868bbfc88b5fd4</anchor>
      <arglist>(const char *, int)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strcpy</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>55e123beb3d7f96e25e024a13582d987</anchor>
      <arglist>(char *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strncat</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>e70c2f2466417d663c49a9653e706fdd</anchor>
      <arglist>(char *, const char *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strncpy</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>bde7e7bf2ba3e1567f130fe7d8481319</anchor>
      <arglist>(char *, const char *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strpbrk</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>119f23a5dcb4eb5f1c1eed3cbf5cb0ed</anchor>
      <arglist>(const char *s, const char *accept)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>strspn</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>900a0edfa51f601d479244f7451cedd1</anchor>
      <arglist>(const char *s, const char *accept)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>strcspn</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>eb6c449e5d77477c057abf00eaaf88fe</anchor>
      <arglist>(const char *s, const char *reject)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strerror</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>a464a810f15e69fe6d985c4edb2e626e</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strcpy_sjis</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>d8234c4453b2e025ef38891ef9f1ca1b</anchor>
      <arglist>(short *sjis_buff, const char *ascii_buff)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strcpy_ascii</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>82cd4f8c040ebb0ef2d9d8f64b6059f0</anchor>
      <arglist>(char *ascii_buff, const short *sjis_buff)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strcasecmp</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>91ca23db677fbf51663c03060776457d</anchor>
      <arglist>(const char *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strncasecmp</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>03072fec48339478ee6ceeda36d977a4</anchor>
      <arglist>(const char *, const char *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strtok</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>982a35856962b3ac6151cdc0b6e893f6</anchor>
      <arglist>(char *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strrchr</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>5cbb8bbfc7174d9468b1853f1031efb3</anchor>
      <arglist>(const char *, int)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strstr</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>55c8e1e0e5f3578988a2feb0d417ad1c</anchor>
      <arglist>(const char *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strupr</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>9e8c1633a00c96c41192f18cc55caa53</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>strlwr</name>
      <anchorfile>string_8h.html</anchorfile>
      <anchor>eaf5d7233e3a49349b447488d08c1ce8</anchor>
      <arglist>(char *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>terminate.c</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>terminate_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <member kind="function">
      <type>void</type>
      <name>_exit</name>
      <anchorfile>terminate_8c.html</anchorfile>
      <anchor>2115a5a512e89dc34ce23bec2a9551fe</anchor>
      <arglist>(int code)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__attribute__</name>
      <anchorfile>terminate_8c.html</anchorfile>
      <anchor>f9aace1b44b73111e15aa39f06f43456</anchor>
      <arglist>((weak))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>time.h</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>time_8h</filename>
    <class kind="struct">tm</class>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>clock_t</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>3b55f88f25d2c571de53a365ad658426</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>time_t</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>ec517130c026730881898750d76e596f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>clock_t</type>
      <name>clock</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>9e660b4ddc93c500ce46593917de2bbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>time</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>e7841e681c8c9d59818568d39553642c</anchor>
      <arglist>(time_t *t)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>difftime</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>281c7b9f05d5bd8f947c62b585adc476</anchor>
      <arglist>(time_t time1, time_t time0)</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>mktime</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>e114b9ba0fce4e2d6297e0e66768bb75</anchor>
      <arglist>(struct tm *timeptr)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>asctime</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>68a0e9d22417dfcf9c0be64261352e64</anchor>
      <arglist>(const struct tm *timeptr)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>ctime</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>6e58d33339fabd469b2f4790b0f2b843</anchor>
      <arglist>(const time_t *timep)</arglist>
    </member>
    <member kind="function">
      <type>tm *</type>
      <name>gmtime</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>b8c68cab16dbf9f2c5eadfaa49e34ac8</anchor>
      <arglist>(const time_t *timep)</arglist>
    </member>
    <member kind="function">
      <type>tm *</type>
      <name>localtime</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>b78e33846b47fd18f359045d6ca762d2</anchor>
      <arglist>(const time_t *timep)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>strftime</name>
      <anchorfile>time_8h.html</anchorfile>
      <anchor>52073483a887a377065bc47b7f261316</anchor>
      <arglist>(char *s, size_t max, const char *format, const struct tm *tm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>unistd.h</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>unistd_8h</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
  </compound>
  <compound kind="file">
    <name>xprintf.c</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>xprintf_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspiofilemgr_8h" name="pspiofilemgr.h" local="no" imported="no">pspiofilemgr.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="malloc_8h" name="malloc.h" local="no" imported="no">malloc.h</includes>
    <class kind="struct">s_strargument</class>
    <member kind="define">
      <type>#define</type>
      <name>MAXDIG</name>
      <anchorfile>xprintf_8c.html</anchorfile>
      <anchor>86187d2f7ce80e824a24dee679c2c15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS2LIB_STR_MAX</name>
      <anchorfile>xprintf_8c.html</anchorfile>
      <anchor>a69641d602d9dd3a429dd555c46fb4d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>isdigit</name>
      <anchorfile>xprintf_8c.html</anchorfile>
      <anchor>49b21b266576c2490dab1e8f897c801a</anchor>
      <arglist>(int __c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vxprintf</name>
      <anchorfile>xprintf_8c.html</anchorfile>
      <anchor>48722bf97eee3a0bdf14cdc9f2ee6f38</anchor>
      <arglist>(void(*func)(char *, int, void *), void *arg, const char *format, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>__sout</name>
      <anchorfile>xprintf_8c.html</anchorfile>
      <anchor>9f50ba15a17b80576a2449398fde8b1f</anchor>
      <arglist>(char *, int, void *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>__attribute__</name>
      <anchorfile>xprintf_8c.html</anchorfile>
      <anchor>f9aace1b44b73111e15aa39f06f43456</anchor>
      <arglist>((weak))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>__mout</name>
      <anchorfile>xprintf_8c.html</anchorfile>
      <anchor>e693605ba1b69f47a99f9f5b9f5c14db</anchor>
      <arglist>(char *, int, void *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>__fout</name>
      <anchorfile>xprintf_8c.html</anchorfile>
      <anchor>aeda085f4411e855733848246f9a9212</anchor>
      <arglist>(char *, int, void *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspmpeg.h</name>
    <path>/tmp/pspdev/pspsdk/src/mpeg/</path>
    <filename>pspmpeg_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <class kind="struct">SceMpegRingbuffer</class>
    <class kind="struct">SceMpegAu</class>
    <class kind="struct">SceMpegAvcMode</class>
    <member kind="typedef">
      <type>ScePVoid</type>
      <name>SceMpeg</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>d88d04437a1618ce6fe049e9b3c18042</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SceVoid</type>
      <name>SceMpegStream</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>19329f832db0bf346aa2c4f279c022a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SceInt32(*</type>
      <name>sceMpegRingbufferCB</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>70d29f71834a7c2ecee36715fceb3b65</anchor>
      <arglist>)(ScePVoid pData, SceInt32 iNumPackets, ScePVoid pParam)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegInit</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>4762fc87e64573a8bf3219b20346b5da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SceVoid</type>
      <name>sceMpegFinish</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>7631108ecde11129114ac5d9e4cd3403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegRingbufferQueryMemSize</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>f928b2f2df8b3aa79c81d7b66260b1f8</anchor>
      <arglist>(SceInt32 iPackets)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegRingbufferConstruct</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>412da60e9c08bdeb7bfd1a7c8411f160</anchor>
      <arglist>(SceMpegRingbuffer *Ringbuffer, SceInt32 iPackets, ScePVoid pData, SceInt32 iSize, sceMpegRingbufferCB Callback, ScePVoid pCBparam)</arglist>
    </member>
    <member kind="function">
      <type>SceVoid</type>
      <name>sceMpegRingbufferDestruct</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>8f21b1bf88785bb331322e13b32a0e4f</anchor>
      <arglist>(SceMpegRingbuffer *Ringbuffer)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegRingbufferAvailableSize</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>abcf9ed3999fa63505a405b88653ba2e</anchor>
      <arglist>(SceMpegRingbuffer *Ringbuffer)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegRingbufferPut</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>43f64b25e44398428eaa90ce27d7444f</anchor>
      <arglist>(SceMpegRingbuffer *Ringbuffer, SceInt32 iNumPackets, SceInt32 iAvailable)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegQueryMemSize</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>d505ca94eb0043cf35d3c3fc807f0f30</anchor>
      <arglist>(int iUnk)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegCreate</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>9163234a5f0f62efa923a9579498abd2</anchor>
      <arglist>(SceMpeg *Mpeg, ScePVoid pData, SceInt32 iSize, SceMpegRingbuffer *Ringbuffer, SceInt32 iFrameWidth, SceInt32 iUnk1, SceInt32 iUnk2)</arglist>
    </member>
    <member kind="function">
      <type>SceVoid</type>
      <name>sceMpegDelete</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>624a8ad92cd045e7ee84759906e58a90</anchor>
      <arglist>(SceMpeg *Mpeg)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegQueryStreamOffset</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>13dc700c0ef6fd32df7487e78eba4341</anchor>
      <arglist>(SceMpeg *Mpeg, ScePVoid pBuffer, SceInt32 *iOffset)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegQueryStreamSize</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>b1571626186e4e2c4d15206d4aaed39f</anchor>
      <arglist>(ScePVoid pBuffer, SceInt32 *iSize)</arglist>
    </member>
    <member kind="function">
      <type>SceMpegStream *</type>
      <name>sceMpegRegistStream</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>71b1ef035e63d65de2498b53c8267d39</anchor>
      <arglist>(SceMpeg *Mpeg, SceInt32 iStreamID, SceInt32 iUnk)</arglist>
    </member>
    <member kind="function">
      <type>SceVoid</type>
      <name>sceMpegUnRegistStream</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>5eba785e208ff1c2085b6b5b6429f033</anchor>
      <arglist>(SceMpeg Mpeg, SceMpegStream *pStream)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegFlushAllStream</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>53258594fe1216262d1da1a54ffd0eb5</anchor>
      <arglist>(SceMpeg *Mpeg)</arglist>
    </member>
    <member kind="function">
      <type>ScePVoid</type>
      <name>sceMpegMallocAvcEsBuf</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>c60123c15551d8e9d70536e3142554ac</anchor>
      <arglist>(SceMpeg *Mpeg)</arglist>
    </member>
    <member kind="function">
      <type>SceVoid</type>
      <name>sceMpegFreeAvcEsBuf</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>0b02bb3dc637896e8868ce4ddde032aa</anchor>
      <arglist>(SceMpeg *Mpeg, ScePVoid pBuf)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegQueryAtracEsSize</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>4cc260bab5c966f3317d3297df9f7fdc</anchor>
      <arglist>(SceMpeg *Mpeg, SceInt32 *iEsSize, SceInt32 *iOutSize)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegInitAu</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>48eb58f0e2b9b4aa9072aef7d72da296</anchor>
      <arglist>(SceMpeg *Mpeg, ScePVoid pEsBuffer, SceMpegAu *pAu)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegGetAvcAu</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>bd3f6e05dd475bfded7ef75cba429af2</anchor>
      <arglist>(SceMpeg *Mpeg, SceMpegStream *pStream, SceMpegAu *pAu, SceInt32 *iUnk)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegAvcDecodeMode</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>f1d3968692a91d3ecf846d2083d655c9</anchor>
      <arglist>(SceMpeg *Mpeg, SceMpegAvcMode *pMode)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegAvcDecode</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>43cd1b3ac47598e348fd0e8d47913e81</anchor>
      <arglist>(SceMpeg *Mpeg, SceMpegAu *pAu, SceInt32 iFrameWidth, ScePVoid pBuffer, SceInt32 *iInit)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegAvcDecodeStop</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>9b5bae4fee190da80500156cd7694992</anchor>
      <arglist>(SceMpeg *Mpeg, SceInt32 iFrameWidth, ScePVoid pBuffer, SceInt32 *iStatus)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegGetAtracAu</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>b3d3eabf6033ae38eaa8bb2e2e9bb8fe</anchor>
      <arglist>(SceMpeg *Mpeg, SceMpegStream *pStream, SceMpegAu *pAu, ScePVoid pUnk)</arglist>
    </member>
    <member kind="function">
      <type>SceInt32</type>
      <name>sceMpegAtracDecode</name>
      <anchorfile>pspmpeg_8h.html</anchorfile>
      <anchor>6a124f4db1f6271181de0e95ef0b03ef</anchor>
      <arglist>(SceMpeg *Mpeg, SceMpegAu *pAu, ScePVoid pBuffer, SceInt32 iInit)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspnand_driver.h</name>
    <path>/tmp/pspdev/pspsdk/src/nand/</path>
    <filename>pspnand__driver_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceNandSetWriteProtect</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>172c08775a988f7aeeeacf9596d77931</anchor>
      <arglist>(int protectFlag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNandLock</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>520e37eba201d2f3ec0e4e9d22abb4da</anchor>
      <arglist>(int writeFlag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceNandUnlock</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>d5b211d6ee7d624275a6e93bc96e1734</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNandReadStatus</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>928e88acac196ff004e2aac45550fcf8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNandReset</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>6220db3e568c8a5b9f01ea4e890ccb32</anchor>
      <arglist>(int flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNandReadId</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>902975ca7c191c1ea1db953aa20d8a0c</anchor>
      <arglist>(void *buf, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNandReadPages</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>cc62d2d41e4b18e929a9b50036da39c1</anchor>
      <arglist>(u32 ppn, void *buf, void *buf2, u32 count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNandGetPageSize</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>e00a4bdac171fc602bbc478e96806957</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNandGetPagesPerBlock</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>450305f498b11f1dd92eb372a54223fb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNandGetTotalBlocks</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>f248ef599da8d10d870b43c035a701f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNandReadBlockWithRetry</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>bace15c914e8e63a84f63b333693265f</anchor>
      <arglist>(u32 ppn, void *buf, void *buf2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNandIsBadBlock</name>
      <anchorfile>pspnand__driver_8h.html</anchorfile>
      <anchor>6965e09a7ab98b798f8db5e52f22a947</anchor>
      <arglist>(u32 ppn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspnet.h</name>
    <path>/tmp/pspdev/pspsdk/src/net/</path>
    <filename>pspnet_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>sceNetInit</name>
      <anchorfile>pspnet_8h.html</anchorfile>
      <anchor>9f6378be04acd400198b10efa5138964</anchor>
      <arglist>(int unk1, int unk2, int unk3, int unk4, int unk5)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetTerm</name>
      <anchorfile>pspnet_8h.html</anchorfile>
      <anchor>264d76d3b8a6b0538d2d0656a2f4572d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetEtherNtostr</name>
      <anchorfile>pspnet_8h.html</anchorfile>
      <anchor>8b14014bdec96b8a9fc96cd27050430a</anchor>
      <arglist>(unsigned char *mac, char *name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspnet_adhoc.h</name>
    <path>/tmp/pspdev/pspsdk/src/net/</path>
    <filename>pspnet__adhoc_8h</filename>
    <class kind="struct">pdpStatStruct</class>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocInit</name>
      <anchorfile>pspnet__adhoc_8h.html</anchorfile>
      <anchor>53da19c02bb5599871147a96025cfb53</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocTerm</name>
      <anchorfile>pspnet__adhoc_8h.html</anchorfile>
      <anchor>31caf67274885110ff7edef664fd8347</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocPdpCreate</name>
      <anchorfile>pspnet__adhoc_8h.html</anchorfile>
      <anchor>bd095b65963e9393ea5d3c473dc501ff</anchor>
      <arglist>(char *mac, int port, unsigned int unk2, int unk3)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocPdpDelete</name>
      <anchorfile>pspnet__adhoc_8h.html</anchorfile>
      <anchor>42204077816909a5803fab922cfefd1d</anchor>
      <arglist>(int id, int unk1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocPdpSend</name>
      <anchorfile>pspnet__adhoc_8h.html</anchorfile>
      <anchor>463aeb6f4138fa9930f0cb2fd4523f0a</anchor>
      <arglist>(int id, char *destMacAddr, int16 port, void *data, unsigned int len, int unk6, int unk7)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocPdpRecv</name>
      <anchorfile>pspnet__adhoc_8h.html</anchorfile>
      <anchor>f9b82b01f0d9c8fdaabbc3d58d476bc2</anchor>
      <arglist>(int id, char *srcMacAddr, int *port, void *data, void *dataLength, int unk6, int unk7)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocGetPdpStat</name>
      <anchorfile>pspnet__adhoc_8h.html</anchorfile>
      <anchor>ca21eb11ea5b7a9030b21350b45d026c</anchor>
      <arglist>(int *size, pdpStatStruct *stat)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspnet_adhocctl.h</name>
    <path>/tmp/pspdev/pspsdk/src/net/</path>
    <filename>pspnet__adhocctl_8h</filename>
    <class kind="struct">productStruct</class>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocctlInit</name>
      <anchorfile>pspnet__adhocctl_8h.html</anchorfile>
      <anchor>f0d8a01af4e0014ac88a276e90755bed</anchor>
      <arglist>(int unk1, int unk2, struct productStruct *product)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocctlTerm</name>
      <anchorfile>pspnet__adhocctl_8h.html</anchorfile>
      <anchor>6176a295820917a9a171eee52d53b923</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocctlConnect</name>
      <anchorfile>pspnet__adhocctl_8h.html</anchorfile>
      <anchor>77720db2760016c9554be7436b88fa75</anchor>
      <arglist>(int *unk1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocctlDisconnect</name>
      <anchorfile>pspnet__adhocctl_8h.html</anchorfile>
      <anchor>66a00a1005dcfe2498bfea73102dbe55</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocctlGetState</name>
      <anchorfile>pspnet__adhocctl_8h.html</anchorfile>
      <anchor>2df42e089c104ba15f772c525e4ccb6b</anchor>
      <arglist>(int *event)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspnet_adhocmatching.h</name>
    <path>/tmp/pspdev/pspsdk/src/net/</path>
    <filename>pspnet__adhocmatching_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MATCHING_JOINED</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>9de84a5be76902c74843df3af83fceb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MATCHING_SELECTED</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>5fd027c9c961d0f604a350860a560850</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MATCHING_REJECTED</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>e920761c6f6e493e5efd1c8b272bfb45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MATCHING_CANCELED</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>67ce7fb62a3570be017717d6c123e8c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MATCHING_ESTABLISHED</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>8995a5c3469327443f8a8e402f57d658</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MATCHING_DISCONNECT</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>7a705916f9329bb6cf3153c5d75a29a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>MatchingCallback</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>2b8fb367c9f4c929b2c7d634704f800d</anchor>
      <arglist>)(int unk1, int event, char *mac2, int optLen, char *optData)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocMatchingInit</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>14cb4fbde46190c9abfc098d698fa3a2</anchor>
      <arglist>(int unk1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocMatchingTerm</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>4f073918dbec35b51c8c6e0aa47e5d16</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocMatchingCreate</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>cf02af815e1a106cb9756690625ce5ac</anchor>
      <arglist>(int unk1, int unk2, int port, int unk4, int unk5, int unk6, int unk7, int unk8, MatchingCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocMatchingDelete</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>a247c1135ddf3216cfee9377b6c72b57</anchor>
      <arglist>(int matchingId)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocMatchingStart</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>8ca4dfa880d8d9cc562a016ed2abb161</anchor>
      <arglist>(int matchingId, int unk1, int unk2, int unk3, int unk4, int usrDataSize, char *usrData)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocMatchingStop</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>53a7a31ba6770b4b24e12426016779d9</anchor>
      <arglist>(int matchingId)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocMatchingSelectTarget</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>e00dde5e304912166e249980bdc274d5</anchor>
      <arglist>(int matchingId, char *mac, int unk3, int unk4)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetAdhocMatchingCancelTarget</name>
      <anchorfile>pspnet__adhocmatching_8h.html</anchorfile>
      <anchor>cd5a4891ddd78080fc012831a2999214</anchor>
      <arglist>(int matchingId, char *mac)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspnet_apctl.h</name>
    <path>/tmp/pspdev/pspsdk/src/net/</path>
    <filename>pspnet__apctl_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>sceNetApctlInit</name>
      <anchorfile>pspnet__apctl_8h.html</anchorfile>
      <anchor>6c108d5b1a57ece30929cf9f445b15de</anchor>
      <arglist>(int stackSize, int initPriority)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetApctlTerm</name>
      <anchorfile>pspnet__apctl_8h.html</anchorfile>
      <anchor>b83bcac1116478e310ac2786decafab6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetApctlGetInfo</name>
      <anchorfile>pspnet__apctl_8h.html</anchorfile>
      <anchor>2104c1f2117e53effc13c13bb73ef0dc</anchor>
      <arglist>(int code, void *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetApctlConnect</name>
      <anchorfile>pspnet__apctl_8h.html</anchorfile>
      <anchor>c54f58d284f4939e9e6286fe39e5f96a</anchor>
      <arglist>(int connIndex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetApctlDisconnect</name>
      <anchorfile>pspnet__apctl_8h.html</anchorfile>
      <anchor>d00e558ec7f4b162d8085ecfa6da0309</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetApctlGetState</name>
      <anchorfile>pspnet__apctl_8h.html</anchorfile>
      <anchor>e37455496c49b46dd0dc6161cb2d6ef2</anchor>
      <arglist>(int *pState)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspnet_inet.h</name>
    <path>/tmp/pspdev/pspsdk/src/net/</path>
    <filename>pspnet__inet_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>sceNetInetInit</name>
      <anchorfile>pspnet__inet_8h.html</anchorfile>
      <anchor>4c0f0d7841571748398e20c8ed0b963b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetInetTerm</name>
      <anchorfile>pspnet__inet_8h.html</anchorfile>
      <anchor>3195937ab7ebc0788028768f57829893</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspnet_resolver.h</name>
    <path>/tmp/pspdev/pspsdk/src/net/</path>
    <filename>pspnet__resolver_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>sceNetResolverInit</name>
      <anchorfile>pspnet__resolver_8h.html</anchorfile>
      <anchor>811647a55f69f0ea94f461260661dcb9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetResolverCreate</name>
      <anchorfile>pspnet__resolver_8h.html</anchorfile>
      <anchor>bb295e2f4628790b5329fa158ebe8883</anchor>
      <arglist>(int *rid, void *buf, SceSize buflen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetResolverDelete</name>
      <anchorfile>pspnet__resolver_8h.html</anchorfile>
      <anchor>ec7feb4c8a4d731f50182de4937305db</anchor>
      <arglist>(int rid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetResolverStartNtoA</name>
      <anchorfile>pspnet__resolver_8h.html</anchorfile>
      <anchor>703d7ea8d7f5bbc9fe4330891d144884</anchor>
      <arglist>(int rid, const char *hostname, struct in_addr *addr, unsigned int timeout, int retry)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetResolverStartAtoN</name>
      <anchorfile>pspnet__resolver_8h.html</anchorfile>
      <anchor>74f9f7d81820cddf1c738e4e274e0595</anchor>
      <arglist>(int rid, const struct in_addr *addr, char *hostname, SceSize hostname_len, unsigned int timeout, int retry)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetResolverStop</name>
      <anchorfile>pspnet__resolver_8h.html</anchorfile>
      <anchor>f92f0d6319530703c29cdb6685a0293a</anchor>
      <arglist>(int rid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceNetResolverTerm</name>
      <anchorfile>pspnet__resolver_8h.html</anchorfile>
      <anchor>11f6d8a7b2a36c9468ce1618df99c064</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psppower.h</name>
    <path>/tmp/pspdev/pspsdk/src/power/</path>
    <filename>psppower_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PSP_POWER_CB_POWER_SWITCH</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>d7ce6bd213c50718069109c816b912ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_POWER_CB_HOLD_SWITCH</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>5848df5beb53f98fa79d3a2a36016b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_POWER_CB_STANDBY</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>eac6396168a77ecda86c0989432f05a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_POWER_CB_RESUME_COMPLETE</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>ba23989957ebf6a1899ec2f8558f3f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_POWER_CB_RESUMING</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>c1f22d558b4154b495afea8a1bb489fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_POWER_CB_SUSPENDING</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>8c9a2250e05e7b526c1362e61ce62519</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_POWER_CB_AC_POWER</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>07df13cc29e025cfc815a424dd598be7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_POWER_CB_BATTERY_LOW</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>fbec08caa20a21a20699e6d440cfecfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_POWER_CB_BATTERY_EXIST</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>095c0d0b53138bd047487837cb09926f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_POWER_CB_BATTPOWER</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>de7da71b1a11f5bea7541435670bbff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>powerCallback_t</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>df809031a19b1b680d19a50451e6c43f</anchor>
      <arglist>)(int unknown, int powerInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerRegisterCallback</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>d1296c2b0feb3a89a0dd07a18b3b220b</anchor>
      <arglist>(int slot, SceUID cbid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerIsPowerOnline</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>2b5bd5d88ed6f191de324e422e41b21c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerIsBatteryExist</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>424a951f513fd7e16b5a361fbf057bdd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerIsBatteryCharging</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>13d010885a3272feda04f005a61ad091</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetBatteryChargingStatus</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>d836cb79fec2a7782d83619518330140</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerIsLowBattery</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>f311fa5e599ff7ad1540be279b020a9d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetBatteryLifePercent</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>2cab7e5112f52d930d2bd6d45872a8a4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetBatteryLifeTime</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>15a0a268309a717cb9032a832c1b5fa6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetBatteryTemp</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>e1f0494f58edb65d7677304163565458</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetBatteryElec</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>e72cda3874bb5d88f0467750eb2547f6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetBatteryVolt</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>c06b023750de4bae2c1127d9046a6420</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerSetCpuClockFrequency</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>09009b76b7d1e6bfb696cbf481d77509</anchor>
      <arglist>(int cpufreq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerSetBusClockFrequency</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>c50bc498d8dd969ca998bcb8af2e1912</anchor>
      <arglist>(int busfreq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetCpuClockFrequency</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>fe5b38c893bd064e8e962ec03b9243b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetCpuClockFrequencyInt</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>637bdbb21fec6471c082009deb51828f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>scePowerGetCpuClockFrequencyFloat</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>b367dc34e630509877656034c6a6a94e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetBusClockFrequency</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>9e199f8a81622c73ac1b3c88a89deb23</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetBusClockFrequencyInt</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>40b348ed9c078b3cc4f1bd917427eb11</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>scePowerGetBusClockFrequencyFloat</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>db8eed9a3d0f07d41e83aa1fc46992fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerSetClockFrequency</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>6422a71cbddeb4b2d3e294a63913466c</anchor>
      <arglist>(int cpufreq, int ramfreq, int busfreq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerLock</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>69dd10005016465ef8b2ced4a06b03e1</anchor>
      <arglist>(int unknown)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerUnlock</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>50632b94c6544c8a63ddc7e887326adb</anchor>
      <arglist>(int unknown)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerTick</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>0c8b057974b3a9b8899d51badd724dc6</anchor>
      <arglist>(int unknown)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerGetIdleTimer</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>30afc4a3c17930600aa4f7877e19cf3b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerIdleTimerEnable</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>37e87b8f35fe590b79f37f0143ce459d</anchor>
      <arglist>(int unknown)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerIdleTimerDisable</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>b56c0cc1542c80cdc8c5826b169a9112</anchor>
      <arglist>(int unknown)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerRequestStandby</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>fc0ba4947347ed5e7b40bcfcb76f65e7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scePowerRequestSuspend</name>
      <anchorfile>psppower_8h.html</anchorfile>
      <anchor>a17e71c25ae476469347956af18e4dbf</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prof.c</name>
    <path>/tmp/pspdev/pspsdk/src/prof/</path>
    <filename>prof_8c</filename>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="malloc_8h" name="malloc.h" local="no" imported="no">malloc.h</includes>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="pspthreadman_8h" name="pspthreadman.h" local="no" imported="no">pspthreadman.h</includes>
    <class kind="struct">gmonhdr</class>
    <class kind="struct">rawarc</class>
    <class kind="struct">gmonparam</class>
    <member kind="define">
      <type>#define</type>
      <name>GMON_PROF_ON</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>405495501b9c61d23582cbbbb8bfd2ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GMON_PROF_BUSY</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>f47d966e61cf7e055e6123f28e7b2d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GMON_PROF_ERROR</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>e7ebb6979c4b22252a410d9d57ce0315</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GMON_PROF_OFF</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>4b44035a208c724397985731f6e50ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GMONVERSION</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>a2b6dc715c3be9530dadea56e25c6089</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HISTFRACTION</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>bf0e0d56183b53cc1791ba911847eaaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAMPLE_FREQ</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>9401e43a8c86acafb31c8e2709baefa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprof_cleanup</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>0b709ef22d54f06176d4b8e9194f93ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>__mcount</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>54cca7425dfe2076d89ff8db1a27d7bd</anchor>
      <arglist>(unsigned int frompc, unsigned int selfpc)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>_ftext</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>3553f1a4bd75b9c5096c14035d604c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>_etext</name>
      <anchorfile>prof_8c.html</anchorfile>
      <anchor>c0dc0da71a585612fa9799a073967617</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspprof.h</name>
    <path>/tmp/pspdev/pspsdk/src/prof/</path>
    <filename>pspprof_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>gprof_cleanup</name>
      <anchorfile>pspprof_8h.html</anchorfile>
      <anchor>0b709ef22d54f06176d4b8e9194f93ab</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspreg.h</name>
    <path>/tmp/pspdev/pspsdk/src/registry/</path>
    <filename>pspreg_8h</filename>
    <class kind="struct">RegParam</class>
    <member kind="define">
      <type>#define</type>
      <name>SYSTEM_REGISTRY</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g619b78e13c517b05b910d67969072ca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REG_KEYNAME_SIZE</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gc9063e82d27988422bcf76a88f00092c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegDriverOpenDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gf97cb729b0661d23f23da21168f139bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegDriverFlushDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>ga928c9911c49c4bc562befab118372be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegDriverCloseDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g172796f5f8a8104fa402b7155725aaad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegDriverCreateDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g4f8b771b4d6a8e3875e2278e7a8be694</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegOpenDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gccf24f12b4d29861dd3af05b8e0c8c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegFlushDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g3a4e0ce25692f5feab5bd13cb30de1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegCloseDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g2744f60dafc12c33fab288c549163055</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegCreateDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g1f9af3f6cdc4ba6b1aaadef6f8aaa5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>REGHANDLE</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g1feb469ad4655ab138fba114a19fa9a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>RegKeyTypes</name>
      <anchor>ge7ca3cabd7b3c1eb8157c15db707b001</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REG_TYPE_DIR</name>
      <anchor>gge7ca3cabd7b3c1eb8157c15db707b001f6f4c04b3fbbc6765becf76f4d3e7ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REG_TYPE_INT</name>
      <anchor>gge7ca3cabd7b3c1eb8157c15db707b0010009340726bf291d938faa1557d2b676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REG_TYPE_STR</name>
      <anchor>gge7ca3cabd7b3c1eb8157c15db707b0010b4fef743a99b8938219768005d35aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REG_TYPE_BIN</name>
      <anchor>gge7ca3cabd7b3c1eb8157c15db707b001720618e2b17631f028466526f9e31bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegOpenRegistry</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gb3255b70e7cd189ccc72bdbec91316d9</anchor>
      <arglist>(struct RegParam *reg, int mode, REGHANDLE *h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegFlushRegistry</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g6c602e38a911e87bd97a6471a1fae9b1</anchor>
      <arglist>(REGHANDLE h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegCloseRegistry</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g7430326f07d46bfade87f2217b75dddc</anchor>
      <arglist>(REGHANDLE h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_driver_1D8A762E</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g0ef8a4c05d23e5b354e5061a3a28695f</anchor>
      <arglist>(REGHANDLE h, const char *name, int mode, REGHANDLE *hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_driver_0CAE832B</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gbf164f71c17886c80add88675b117c4b</anchor>
      <arglist>(REGHANDLE hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_driver_0D69BF40</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gb4a690a0fb060ee29976fe97dc75e5bd</anchor>
      <arglist>(REGHANDLE hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_driver_4CA16893</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g607523319eedd539260919365d52d79d</anchor>
      <arglist>(REGHANDLE h, const char *name, int unk)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_1D8A762E</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g9ffff3804649781bafe1b4fb8c6fe3e6</anchor>
      <arglist>(REGHANDLE h, const char *name, int mode, REGHANDLE *hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_4CA16893</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g144409e12d2a5f6cea72f88f10446c8c</anchor>
      <arglist>(REGHANDLE h, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_0CAE832B</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g1e6c844ba968cedf64e11ec5ed5e3a37</anchor>
      <arglist>(REGHANDLE hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_0D69BF40</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g8bbf3f02231726c0ab3a378eddc03abd</anchor>
      <arglist>(REGHANDLE hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeyInfo</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g270355b95080c36f2ce67e124976884b</anchor>
      <arglist>(REGHANDLE hd, const char *name, REGHANDLE *hk, unsigned int *type, SceSize *size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeyInfoByName</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g20129dac99bba9e44c34d3bff3a79f5a</anchor>
      <arglist>(REGHANDLE hd, const char *name, unsigned int *type, SceSize *size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeyValue</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g4b86b39ec419a421374d5b5d0fac15cf</anchor>
      <arglist>(REGHANDLE hd, REGHANDLE hk, void *buf, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeyValueByName</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g7f7f50bb13f789690233ed5d04fac65d</anchor>
      <arglist>(REGHANDLE hd, const char *name, void *buf, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegSetKeyValue</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g71de9ea38f7c71d141e2f7ef57e52749</anchor>
      <arglist>(REGHANDLE hd, const char *name, const void *buf, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeysNum</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g782d5a8c482e7709ae3bb52fc432a826</anchor>
      <arglist>(REGHANDLE hd, int *num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeys</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>ga223cd8432e230749e5b4f5cec2cee99</anchor>
      <arglist>(REGHANDLE hd, char *buf, int num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegCreateKey</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gc6dd522f8ad4aae853af71251821e827</anchor>
      <arglist>(REGHANDLE hd, const char *name, int type, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegRemoveRegistry</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gce7eb67efcde24be599dd75606d3beaf</anchor>
      <arglist>(struct RegParam *reg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psprtc.h</name>
    <path>/tmp/pspdev/pspsdk/src/rtc/</path>
    <filename>psprtc_8h</filename>
    <class kind="struct">pspTime</class>
    <member kind="enumeration">
      <name>pspRtcCheckValidErrors</name>
      <anchor>b521898469a3d67139c8bc5141d442bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_TIME_INVALID_YEAR</name>
      <anchor>b521898469a3d67139c8bc5141d442bdbd475652ed47877e9326ec0776a38d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_TIME_INVALID_MONTH</name>
      <anchor>b521898469a3d67139c8bc5141d442bd7484988e1049689ff0e552172dc9b0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_TIME_INVALID_DAY</name>
      <anchor>b521898469a3d67139c8bc5141d442bdfc5c336f60af47ad9e1870612cffa3bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_TIME_INVALID_HOUR</name>
      <anchor>b521898469a3d67139c8bc5141d442bd668de939d60cbc8c4c77a6115b6ac790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_TIME_INVALID_MINUTES</name>
      <anchor>b521898469a3d67139c8bc5141d442bd893d6f45c462324cf9384356e03e904b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_TIME_INVALID_SECONDS</name>
      <anchor>b521898469a3d67139c8bc5141d442bd4e4ab4919a133fa9f273b133a5f5740c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_TIME_INVALID_MICROSECONDS</name>
      <anchor>b521898469a3d67139c8bc5141d442bdb5283a0d496ed4f0ae2d9b3026cfc669</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>sceRtcGetTickResolution</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>9567cc2c76dba51d09f205e1b78cf221</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcGetCurrentTick</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>34e1da8cfd9d7f19fd34548a340bf3c6</anchor>
      <arglist>(u64 *tick)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcGetCurrentClock</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>93bba012a5c5dcf1e40b1fe0fec606fb</anchor>
      <arglist>(pspTime *time, int tz)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcGetCurrentClockLocalTime</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>4795ee92a4d6107a4e948f13da395e13</anchor>
      <arglist>(pspTime *time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcConvertUtcToLocalTime</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>84b02b415b6a3eb1d661938acd1e8379</anchor>
      <arglist>(const u64 *tickUTC, u64 *tickLocal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcConvertLocalTimeToUTC</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>89e3664d5e2600178bfe34b22f5376bc</anchor>
      <arglist>(const u64 *tickLocal, u64 *tickUTC)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcIsLeapYear</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>ae0a06c9ac031e9a8706d9184d4606b0</anchor>
      <arglist>(int year)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcGetDaysInMonth</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>9eb2e86514ab1a5625022278e3689fea</anchor>
      <arglist>(int year, int month)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcGetDayOfWeek</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>375f4b5f15b1e9cc9f39d52672d169e1</anchor>
      <arglist>(int year, int month, int day)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcCheckValid</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>c9ae61d5743755ef150a2994fe8f6e71</anchor>
      <arglist>(const pspTime *date)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcSetTick</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>1bb54df854980fa3002c6244af2bac46</anchor>
      <arglist>(pspTime *date, const u64 *tick)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcGetTick</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>e41c98d3b8315a207dee82a77f2cf226</anchor>
      <arglist>(const pspTime *date, u64 *tick)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcCompareTick</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>55fea8a74be58b369e003c1fab4f8382</anchor>
      <arglist>(const u64 *tick1, const u64 *tick2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcTickAddTicks</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>6f8731ff7605bae9e8c24ff651fd4be8</anchor>
      <arglist>(u64 *destTick, const u64 *srcTick, u64 numTicks)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcTickAddMicroseconds</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>d8119e6ca0c3886756036d05aad283f1</anchor>
      <arglist>(u64 *destTick, const u64 *srcTick, u64 numMS)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcTickAddSeconds</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>0d927b47867a3d7cdc599fe58a9f4d73</anchor>
      <arglist>(u64 *destTick, const u64 *srcTick, u64 numSecs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcTickAddMinutes</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>0edeaef9fb0b3bc0a53208459bdfb087</anchor>
      <arglist>(u64 *destTick, const u64 *srcTick, u64 numMins)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcTickAddHours</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>0e2709295f7a986b6cf3eed60fbb20ff</anchor>
      <arglist>(u64 *destTick, const u64 *srcTick, int numHours)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcTickAddDays</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>b757bff474f691067df156eca90c4b69</anchor>
      <arglist>(u64 *destTick, const u64 *srcTick, int numDays)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcTickAddWeeks</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>d415f7c710b1618918d488049daac5c5</anchor>
      <arglist>(u64 *destTick, const u64 *srcTick, int numWeeks)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcTickAddMonths</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>77a7784d625607745c5f456ae3c8d72f</anchor>
      <arglist>(u64 *destTick, const u64 *srcTick, int numMonths)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcTickAddYears</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>edba6c44f6a7db247b714a6f39ece3b0</anchor>
      <arglist>(u64 *destTick, const u64 *srcTick, int numYears)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcSetTime_t</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>63f4ebfd9e590ccf6324db820ff61889</anchor>
      <arglist>(pspTime *date, const time_t time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcGetTime_t</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>5952c0844f0f79083fb5e2e211b1c7ec</anchor>
      <arglist>(const pspTime *date, time_t time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcSetDosTime</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>295a6142d6e4ba14af5a39cc63639aae</anchor>
      <arglist>(pspTime *date, u32 dosTime)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcGetDosTime</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>609365431bf7e7702cc9ebf2603f507d</anchor>
      <arglist>(pspTime *date, u32 dosTime)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcSetWin32FileTime</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>e7921fca436f8a980f421f35a518f2f7</anchor>
      <arglist>(pspTime *date, u64 *win32Time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcGetWin32FileTime</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>b5872013f57a7479bb603377a11b495a</anchor>
      <arglist>(pspTime *date, u64 *win32Time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRtcParseDateTime</name>
      <anchorfile>psprtc_8h.html</anchorfile>
      <anchor>9c9ccdf1392f750c96a8a9d00d0eba25</anchor>
      <arglist>(u64 *destTick, const char *dateString)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fixup.c</name>
    <path>/tmp/pspdev/pspsdk/src/sdk/</path>
    <filename>fixup_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <class kind="struct">SceLibStubEntry</class>
    <class kind="struct">PspModuleExport</class>
    <member kind="function">
      <type>void</type>
      <name>pspSdkFixupImports</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g97957bacea23cc5bf521b52671d04ce5</anchor>
      <arglist>(int modId)</arglist>
    </member>
    <member kind="variable">
      <type>SceLibStubEntry</type>
      <name>packed</name>
      <anchorfile>fixup_8c.html</anchorfile>
      <anchor>4f5cc2c4d7e416dedaead160bfd432d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspModuleExport</type>
      <name>packed</name>
      <anchorfile>fixup_8c.html</anchorfile>
      <anchor>22a1fdb1f113765117e214ec2108bd42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceModuleInfo</type>
      <name>module_info</name>
      <anchorfile>fixup_8c.html</anchorfile>
      <anchor>b45e8d8c6863a693e5bb62d806610ec9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>inethelper.c</name>
    <path>/tmp/pspdev/pspsdk/src/sdk/</path>
    <filename>inethelper_8c</filename>
    <includes id="pspkernel_8h" name="pspkernel.h" local="no" imported="no">pspkernel.h</includes>
    <includes id="pspsdk_8h" name="pspsdk.h" local="no" imported="no">pspsdk.h</includes>
    <includes id="pspnet_8h" name="pspnet.h" local="no" imported="no">pspnet.h</includes>
    <includes id="pspnet__inet_8h" name="pspnet_inet.h" local="no" imported="no">pspnet_inet.h</includes>
    <includes id="pspnet__resolver_8h" name="pspnet_resolver.h" local="no" imported="no">pspnet_resolver.h</includes>
    <includes id="pspnet__apctl_8h" name="pspnet_apctl.h" local="no" imported="no">pspnet_apctl.h</includes>
  </compound>
  <compound kind="file">
    <name>loadmodule.c</name>
    <path>/tmp/pspdev/pspsdk/src/sdk/</path>
    <filename>loadmodule_8c</filename>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="pspuser_8h" name="pspuser.h" local="no" imported="no">pspuser.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MAX_ARGS</name>
      <anchorfile>loadmodule_8c.html</anchorfile>
      <anchor>29b7451465deac204c5f7cb1f9c6e1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>pspSdkLoadStartModuleWithArgs</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gb34f07aee47accf18728f8cf4fc9e0ac</anchor>
      <arglist>(const char *filename, int mpid, int argc, char *const argv[])</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>pspSdkLoadStartModule</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g6dbe70989cabbae006f7ed2ef9895482</anchor>
      <arglist>(const char *filename, int mpid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>modulemgr_patches.c</name>
    <path>/tmp/pspdev/pspsdk/src/sdk/</path>
    <filename>modulemgr__patches_8c</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="psploadcore_8h" name="psploadcore.h" local="no" imported="no">psploadcore.h</includes>
    <includes id="pspkerror_8h" name="pspkerror.h" local="no" imported="no">pspkerror.h</includes>
    <includes id="psputils_8h" name="psputils.h" local="no" imported="no">psputils.h</includes>
    <includes id="pspsdk_8h" name="pspsdk.h" local="no" imported="no">pspsdk.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>MM_MODNAME</name>
      <anchorfile>modulemgr__patches_8c.html</anchorfile>
      <anchor>71fc6316b056755abd72dd56761b2542</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspsdk.h</name>
    <path>/tmp/pspdev/pspsdk/src/sdk/</path>
    <filename>pspsdk_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspmodulemgr_8h" name="pspmodulemgr.h" local="no" imported="no">pspmodulemgr.h</includes>
    <includes id="pspmoduleinfo_8h" name="pspmoduleinfo.h" local="no" imported="no">pspmoduleinfo.h</includes>
    <includes id="pspthreadman_8h" name="pspthreadman.h" local="no" imported="no">pspthreadman.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pspSdkQueryModuleInfoV1</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gaf5eb7555dcb00bb14ba71e4c9aaf9ae</anchor>
      <arglist>(SceUID uid, SceKernelModuleInfo *modinfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkGetModuleIdList</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g4b9b9591a734742d89b4f5c42dcde003</anchor>
      <arglist>(SceUID *readbuf, int readbufsize, int *idcount)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkInstallNoDeviceCheckPatch</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g4775f35740e43fe1a996d0b7fd4adb06</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkInstallNoPlainModuleCheckPatch</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g2d1a2c4e279b923e2012a299a712fb4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkInstallKernelLoadModulePatch</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gc031e9b36286d2177619ef4f7325db3d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>pspSdkLoadStartModule</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g6dbe70989cabbae006f7ed2ef9895482</anchor>
      <arglist>(const char *filename, int mpid)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>pspSdkLoadStartModuleWithArgs</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gb34f07aee47accf18728f8cf4fc9e0ac</anchor>
      <arglist>(const char *filename, int mpid, int argc, char *const argv[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspSdkFixupImports</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g97957bacea23cc5bf521b52671d04ce5</anchor>
      <arglist>(int moduleId)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkLoadInetModules</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>ge4c7daa71da75c7322b747deda6c463e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkInetInit</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gffa0a49ba4124d44208b627cd189b745</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspSdkInetTerm</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g2a9a073ccf913ebd2097011d20e2fd28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferThreadStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>ga4cc7d7c0f2eb14bdb1545c610097170</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelThreadInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferSemaStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g138994835bbd18b19ef36500e607ca9e</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelSemaInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferEventFlagStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g20c963aae827b5dced9695ef76ad0be0</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelEventFlagInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferMboxStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g25db1e4c1efd57c87e934fc467488a40</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelMbxInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferVplStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gaca8d57f7599026733bbd401a34b3c69</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelVplInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferFplStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g57467ac986eb6a116647a0d7c3b3d6ba</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelFplInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferMppStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g0b8b13b3d9d4e65ddc4dffccc841e00e</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelMppInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferCallbackStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g91c934dc66b4581a6c4f7e1e492f6949</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelCallbackInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferVTimerStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g71ba33f062d205ae7b1c585672271862</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelVTimerInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferThreadEventHandlerStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g7019884873fff3b25a11df394a72780b</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelThreadEventHandlerInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>pspSdkDisableInterrupts</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gb6e28443f96f8154c60406370ed108f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspSdkEnableInterrupts</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g7b99cb77286650b56db3a386f316271c</anchor>
      <arglist>(unsigned int istate)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>pspSdkSetK1</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g6ea9541e8d5876fc622dea88809a4849</anchor>
      <arglist>(unsigned int k1)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>pspSdkGetK1</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gca5f7f8ef71173220d6329379252821c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspSdkDisableFPUExceptions</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gdc1d709584108aac358b629dc8ae1443</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>query_mod.c</name>
    <path>/tmp/pspdev/pspsdk/src/sdk/</path>
    <filename>query__mod_8c</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="psploadcore_8h" name="psploadcore.h" local="no" imported="no">psploadcore.h</includes>
    <includes id="pspmodulemgr_8h" name="pspmodulemgr.h" local="no" imported="no">pspmodulemgr.h</includes>
    <includes id="pspmodulemgr__kernel_8h" name="pspmodulemgr_kernel.h" local="no" imported="no">pspmodulemgr_kernel.h</includes>
    <includes id="pspsdk_8h" name="pspsdk.h" local="no" imported="no">pspsdk.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pspSdkGetModuleIdList</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g4b9b9591a734742d89b4f5c42dcde003</anchor>
      <arglist>(SceUID *readbuf, int readbufsize, int *idcount)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkQueryModuleInfoV1</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gaf5eb7555dcb00bb14ba71e4c9aaf9ae</anchor>
      <arglist>(SceUID uid, SceKernelModuleInfo *modinfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>threadutils.c</name>
    <path>/tmp/pspdev/pspsdk/src/sdk/</path>
    <filename>threadutils_8c</filename>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="pspthreadman_8h" name="pspthreadman.h" local="yes" imported="no">pspthreadman.h</includes>
    <includes id="pspsdk_8h" name="pspsdk.h" local="yes" imported="no">pspsdk.h</includes>
    <class kind="struct">_ThreadInfoSkel</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_UIDS</name>
      <anchorfile>threadutils_8c.html</anchorfile>
      <anchor>cd4a56c63cf7f083c8693af2c31db181</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>ReferFunc</name>
      <anchorfile>threadutils_8c.html</anchorfile>
      <anchor>67eca1091734172587ce173acfd226bf</anchor>
      <arglist>)(SceUID, struct _ThreadInfoSkel *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferSemaStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g138994835bbd18b19ef36500e607ca9e</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelSemaInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferEventFlagStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g20c963aae827b5dced9695ef76ad0be0</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelEventFlagInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferThreadStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>ga4cc7d7c0f2eb14bdb1545c610097170</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelThreadInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferMboxStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g25db1e4c1efd57c87e934fc467488a40</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelMbxInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferVplStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gaca8d57f7599026733bbd401a34b3c69</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelVplInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferFplStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g57467ac986eb6a116647a0d7c3b3d6ba</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelFplInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferMppStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g0b8b13b3d9d4e65ddc4dffccc841e00e</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelMppInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferCallbackStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g91c934dc66b4581a6c4f7e1e492f6949</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelCallbackInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferVTimerStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g71ba33f062d205ae7b1c585672271862</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelVTimerInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferThreadEventHandlerStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g7019884873fff3b25a11df394a72780b</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelThreadEventHandlerInfo *pInfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspsircs.h</name>
    <path>/tmp/pspdev/pspsdk/src/sircs/</path>
    <filename>pspsircs_8h</filename>
    <class kind="struct">sircs_data</class>
    <member kind="function">
      <type>int</type>
      <name>sceSircsSend</name>
      <anchorfile>group__Sony.html</anchorfile>
      <anchor>g997701f7aa7068520bd3555a5574439a</anchor>
      <arglist>(struct sircs_data *sd, int count)</arglist>
    </member>
    <member kind="variable">
      <type>sircs_data</type>
      <name>__packed__</name>
      <anchorfile>group__Sony.html</anchorfile>
      <anchor>g6a70ecbfa58c13c6210e588a5fc0caf9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>crt0.c</name>
    <path>/tmp/pspdev/pspsdk/src/startup/</path>
    <filename>crt0_8c</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspmoduleinfo_8h" name="pspmoduleinfo.h" local="no" imported="no">pspmoduleinfo.h</includes>
    <includes id="pspthreadman_8h" name="pspthreadman.h" local="no" imported="no">pspthreadman.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <class kind="struct">_library_entry</class>
    <member kind="define">
      <type>#define</type>
      <name>ARG_MAX</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>7dd33d4d7fdd2221a03ce948d7419424</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_THREAD_PRIORITY</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>16f554f93297ab9b9fa4f5db5f856829</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_THREAD_ATTRIBUTE</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>8403f287c838d670855ee3627ba8bed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_THREAD_STACK_KB_SIZE</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>9d0ef71751998c0ba2b5557e1fddf925</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAIN_THREAD_NAME</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>2ef9b94a0f8163861689d5cc1597f858</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int sce_newlib_nocreate_thread_in_start</type>
      <name>__attribute__</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>53aa3adbb9e244e9caf2a2a2690b947b</anchor>
      <arglist>((weak))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>__psp_libc_init</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>42e8d5608e33fc1f209e6d4a6dc89098</anchor>
      <arglist>(int argc, char *argv[]) __attribute__((weak))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_init</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>d1cbc4315ef293463e6057dfb24c8115</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_fini</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>173a20f19acf36985bbac6786a02b544</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_main</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>00bbc8795337bb5fb7d7bd956dc7bf9b</anchor>
      <arglist>(SceSize args, void *argp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_start</name>
      <anchorfile>crt0_8c.html</anchorfile>
      <anchor>72d3e412ee833f9d25b5a53942532dca</anchor>
      <arglist>(SceSize args, void *argp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>crt0_prx.c</name>
    <path>/tmp/pspdev/pspsdk/src/startup/</path>
    <filename>crt0__prx_8c</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspmoduleinfo_8h" name="pspmoduleinfo.h" local="no" imported="no">pspmoduleinfo.h</includes>
    <includes id="pspthreadman_8h" name="pspthreadman.h" local="no" imported="no">pspthreadman.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ARG_MAX</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>7dd33d4d7fdd2221a03ce948d7419424</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_THREAD_PRIORITY</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>16f554f93297ab9b9fa4f5db5f856829</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_THREAD_ATTRIBUTE</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>8403f287c838d670855ee3627ba8bed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_THREAD_STACK_KB_SIZE</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>9d0ef71751998c0ba2b5557e1fddf925</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAIN_THREAD_NAME</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>2ef9b94a0f8163861689d5cc1597f858</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int sce_newlib_nocreate_thread_in_start</type>
      <name>__attribute__</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>53aa3adbb9e244e9caf2a2a2690b947b</anchor>
      <arglist>((weak))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>__psp_libc_init</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>42e8d5608e33fc1f209e6d4a6dc89098</anchor>
      <arglist>(int argc, char *argv[]) __attribute__((weak))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_init</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>d1cbc4315ef293463e6057dfb24c8115</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_fini</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>173a20f19acf36985bbac6786a02b544</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_main</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>00bbc8795337bb5fb7d7bd956dc7bf9b</anchor>
      <arglist>(SceSize args, void *argp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>module_start</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>6e6b976e57a6dc7fa8579a6b742bc122</anchor>
      <arglist>(SceSize args, void *argp) __attribute__((alias(&quot;_start&quot;)))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_start</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>72d3e412ee833f9d25b5a53942532dca</anchor>
      <arglist>(SceSize args, void *argp)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>__pspsdk_is_prx</name>
      <anchorfile>crt0__prx_8c.html</anchorfile>
      <anchor>760c5f91c0fadd6996e320cb30448668</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dummy.c</name>
    <path>/tmp/pspdev/pspsdk/src/startup/</path>
    <filename>dummy_8c</filename>
  </compound>
  <compound kind="file">
    <name>prxexports.c</name>
    <path>/tmp/pspdev/pspsdk/src/startup/</path>
    <filename>prxexports_8c</filename>
    <includes id="pspmoduleexport_8h" name="pspmoduleexport.h" local="no" imported="no">pspmoduleexport.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>prxexports_8c.html</anchorfile>
      <anchor>070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const struct _PspLibraryEntry __library_exports[1]</type>
      <name>__attribute__</name>
      <anchorfile>prxexports_8c.html</anchorfile>
      <anchor>9ab2ee781d983ccaf83cf82a258c317d</anchor>
      <arglist>((section(&quot;.lib.ent&quot;), used))</arglist>
    </member>
    <member kind="variable">
      <type>void</type>
      <name>module_start</name>
      <anchorfile>prxexports_8c.html</anchorfile>
      <anchor>d03ed7ed7388e207cc993e7ea60ef40f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void</type>
      <name>module_info</name>
      <anchorfile>prxexports_8c.html</anchorfile>
      <anchor>9956f8ffc15913d5ac412440bed10fb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspumd.h</name>
    <path>/tmp/pspdev/pspsdk/src/umd/</path>
    <filename>pspumd_8h</filename>
    <member kind="typedef">
      <type>int(*</type>
      <name>UmdCallback</name>
      <anchorfile>group__UMD.html</anchorfile>
      <anchor>g5bc34455f119b1be13aaac5f24721687</anchor>
      <arglist>)(int unknown, int event)</arglist>
    </member>
    <member kind="enumeration">
      <name>UmdDriveStat</name>
      <anchor>g9c5d054a20187635e557b261de714e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UMD_WAITFORDISC</name>
      <anchor>gg9c5d054a20187635e557b261de714e42a577901c29dccadb6b7c85a61673ce4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UMD_WAITFORINIT</name>
      <anchor>gg9c5d054a20187635e557b261de714e42143876b024aa5f187141a542ef834585</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUmdCheckMedium</name>
      <anchorfile>group__UMD.html</anchorfile>
      <anchor>g63a1335999c4cf27dd1d5d533a0b5c2e</anchor>
      <arglist>(int a)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUmdActivate</name>
      <anchorfile>group__UMD.html</anchorfile>
      <anchor>gd3ba9d505f66b89a8bad9b978e35f2c7</anchor>
      <arglist>(int unit, const char *drive)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUmdWaitDriveStat</name>
      <anchorfile>group__UMD.html</anchorfile>
      <anchor>gf873c113d78cc22b8146ad599374ba90</anchor>
      <arglist>(int stat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUmdRegisterUMDCallBack</name>
      <anchorfile>group__UMD.html</anchorfile>
      <anchor>g710b638596ad9798c72ee0b7d53f8340</anchor>
      <arglist>(int cbid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspusb.h</name>
    <path>/tmp/pspdev/pspsdk/src/usb/</path>
    <filename>pspusb_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>PSP_USBBUS_DRIVERNAME</name>
      <anchorfile>pspusb_8h.html</anchorfile>
      <anchor>4abc4198467dfb2db0f856c012fb1e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_USB_ACTIVATED</name>
      <anchorfile>pspusb_8h.html</anchorfile>
      <anchor>c41193fc9f34daf90341e7982f9ae707</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_USB_CABLE_CONNECTED</name>
      <anchorfile>pspusb_8h.html</anchorfile>
      <anchor>442fbce8360a32334b14acc5cb5ec8a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_USB_CONNECTION_ESTABLISHED</name>
      <anchorfile>pspusb_8h.html</anchorfile>
      <anchor>673963da4d92f9a2178d92e646710c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbStart</name>
      <anchorfile>pspusb_8h.html</anchorfile>
      <anchor>9456e846fd94fc2e50263e204a39b44a</anchor>
      <arglist>(const char *driverName, int size, void *args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbStop</name>
      <anchorfile>pspusb_8h.html</anchorfile>
      <anchor>0cb69ae8c30ad550de6de15b01081d38</anchor>
      <arglist>(const char *driverName, int size, void *args)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbActivate</name>
      <anchorfile>pspusb_8h.html</anchorfile>
      <anchor>7ec8c27a7051783dcda7b43e24c361d3</anchor>
      <arglist>(u32 pid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbDeactivate</name>
      <anchorfile>pspusb_8h.html</anchorfile>
      <anchor>1869f74001815c7d7f79c4f307a16f4a</anchor>
      <arglist>(u32 pid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbGetState</name>
      <anchorfile>pspusb_8h.html</anchorfile>
      <anchor>7669a79d81a247b50f60dd15e9b1834e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbGetDrvState</name>
      <anchorfile>pspusb_8h.html</anchorfile>
      <anchor>8d62e92ab323c14dc2918508083ce37c</anchor>
      <arglist>(const char *driverName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspusbbus.h</name>
    <path>/tmp/pspdev/pspsdk/src/usb/</path>
    <filename>pspusbbus_8h</filename>
    <class kind="struct">UsbInterface</class>
    <class kind="struct">UsbEndpoint</class>
    <class kind="struct">StringDescriptor</class>
    <class kind="struct">DeviceDescriptor</class>
    <class kind="struct">ConfigDescriptor</class>
    <class kind="struct">InterfaceDescriptor</class>
    <class kind="struct">EndpointDescriptor</class>
    <class kind="struct">UsbInterfaces</class>
    <class kind="struct">UsbConfiguration</class>
    <class kind="struct">UsbData</class>
    <class kind="struct">UsbData::Config</class>
    <class kind="struct">UsbData::ConfDesc</class>
    <class kind="struct">UsbData::Interfaces</class>
    <class kind="struct">UsbData::InterDesc</class>
    <class kind="struct">UsbData::Endp</class>
    <class kind="struct">DeviceRequest</class>
    <class kind="struct">UsbDriver</class>
    <class kind="struct">UsbdDeviceReq</class>
    <member kind="function">
      <type>int</type>
      <name>sceUsbbdRegister</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>f88fb4ce7569677247b54c6eaba479ab</anchor>
      <arglist>(struct UsbDriver *drv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbbdUnregister</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>9f29f68cb27b449561a790bfa2fb9803</anchor>
      <arglist>(struct UsbDriver *drv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbbdClearFIFO</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>32da7b4b0c638cb8095681f90456d766</anchor>
      <arglist>(struct UsbEndpoint *endp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbbdReqCancelAll</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>7a4ab90f4f6aaf9639a9069dfc4cddd4</anchor>
      <arglist>(struct UsbEndpoint *endp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbbdStall</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>6b1859e7c9b78180837048abc2e36e4a</anchor>
      <arglist>(struct UsbEndpoint *endp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbbdReqSend</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>5b72f07f70d94415e6ed30bcd3ddf092</anchor>
      <arglist>(struct UsbdDeviceReq *req)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbbdReqRecv</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>36712839c607f8e4eff8fdb270b71453</anchor>
      <arglist>(struct UsbdDeviceReq *req)</arglist>
    </member>
    <member kind="variable">
      <type>StringDescriptor</type>
      <name>packed</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>4be03ed9e1b8978c1fe2648e4b5e2bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DeviceDescriptor</type>
      <name>packed</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>3d73e891baa3baecbcfd5646fb3c8266</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ConfigDescriptor</type>
      <name>packed</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>4b748c1461ca065fb61cd268c14ae4e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>InterfaceDescriptor</type>
      <name>packed</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>81676828cd1428cf40fd5e185d80f757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EndpointDescriptor</type>
      <name>packed</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>34dfbe742957f68ce6c24f9dc9814755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UsbData</type>
      <name>packed</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>79b332b001a4dd51055b3157b467feb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DeviceRequest</type>
      <name>packed</name>
      <anchorfile>pspusbbus_8h.html</anchorfile>
      <anchor>3ed07f180cd1c4c6adf359807f5d7213</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspusbstor.h</name>
    <path>/tmp/pspdev/pspsdk/src/usbstor/</path>
    <filename>pspusbstor_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>PSP_USBSTOR_DRIVERNAME</name>
      <anchorfile>pspusbstor_8h.html</anchorfile>
      <anchor>c90fd519aaff8d8cf63f14c174a797ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbstorBootRegisterNotify</name>
      <anchorfile>pspusbstor_8h.html</anchorfile>
      <anchor>6ca3cc5b9b51793b8b7e48140d731416</anchor>
      <arglist>(u32 eventFlag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbstorBootUnregisterNotify</name>
      <anchorfile>pspusbstor_8h.html</anchorfile>
      <anchor>7f1358fbe5785a00aa6fd23a9886fd34</anchor>
      <arglist>(u32 eventFlag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUsbstorBootSetCapacity</name>
      <anchorfile>pspusbstor_8h.html</anchorfile>
      <anchor>54c11c4489cc80d9055bd3ef8885044e</anchor>
      <arglist>(u32 size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspintrman.c</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspintrman_8c</filename>
    <includes id="pspintrman_8h" name="pspintrman.h" local="no" imported="no">pspintrman.h</includes>
    <member kind="variable">
      <type>const char *</type>
      <name>PspInterruptNames</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>ge1a813cbd3ff86f7ae336b0ab3ef1b43</anchor>
      <arglist>[67]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspintrman.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspintrman_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <class kind="struct">tag_IntrHandlerOptionParam</class>
    <member kind="typedef">
      <type>tag_IntrHandlerOptionParam</type>
      <name>PspIntrHandlerOptionParam</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>gdc73c9028c18c20b4a6a471a41584cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspInterrupts</name>
      <anchor>g874be3160e810262a9d5f2b13137b418</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GPIO_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4183df41a30d55d2b2d3040f65c99f838be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_ATA_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418a2a0e828073a2775e34e235bbc9e8aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_UMD_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4187ca2d97f83f18cfd7bc97aa9ac26b923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MSCM0_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418daf97089a16b7ab98f5c00e2f3c68fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_WLAN_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418eea3f461bc117b2fd0b5cc2fd24dc8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_AUDIO_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418acfe9e7bb9372a30e190384852d93b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_I2C_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418034adcf32de7dfefe1e6579fe187520b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SIRCS_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418bb0faa2536306abf466de757e0ece755</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SYSTIMER0_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4187a75fa417f5d019374167cedb56ab924</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SYSTIMER1_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b41886477df879ea06e0c8fd8f1e934492a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SYSTIMER2_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418c2ddf549e5fd5500643d1c242bd872ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SYSTIMER3_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b41815a1425115605da1311e266d3bb09dae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD0_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418ba0de3ae55b368ed52ad66c2da4eabd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_NAND_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4180b9987b290aa305713abdd500133951f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DMACPLUS_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418253a5429747f8c1415c13a890c32f6b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DMA0_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b41815edb5887ae5ff441dd21affac940899</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DMA1_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418e0be86007c9f20b11137a2c37e406ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MEMLMD_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b41832486d6edd04c8b76fea096a8b6cb5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418bbaa789159d83db14a7890e4f8d6749c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_VBLANK_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4182f75e8267ccb30ca4085c6dc09792239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MECODEC_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418ef7c0702366a82ec79349497575857de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPREMOTE_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b41809bd891276f72e1894561b9e9d2f832f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MSCM1_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418452b27c99b10e16f9f0e857527977afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MSCM2_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418806b9b1c2f540dc8fbbdbb53fb568579</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD1_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4183b6085aca67f456d2d3ad3cc84a7cc10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_INTERRUPT_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418cba21ec01998d3423c869c89bd515a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspSubInterrupts</name>
      <anchor>ge7e3c131fa486f14a43fb227f917235e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GPIO_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e0e5d79b2a9a3baf820f2e3a8a66ed650</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_ATA_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e0e9b45a322bf120e886f627cb49157ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_UMD_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e1db41e42b9a89fe7b2af6f2c091f925c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DMACPLUS_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e9056966f28b9d9c552641e199a24764e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e2e578ab73681766526de23e585625688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DISPLAY_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e1df13ad849592c6df5563bca041d5c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceKernelCpuSuspendIntr</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>gb1cbec8ea57619d48d976d69b39a92a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelCpuResumeIntr</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g0c5fac7e64d11aa2bc7ad5230e1df2c9</anchor>
      <arglist>(unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelCpuResumeIntrWithSync</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g38fcd93ef8191157fb05244278cec981</anchor>
      <arglist>(unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelIsCpuIntrSuspended</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g6a8c9f8a9ec6e261d907debf70090677</anchor>
      <arglist>(unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelIsCpuIntrEnable</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g3d65233da71bc8d175c12248f6f4fdd6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterSubIntrHandler</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g7a27912be794f9248990cb96b4b545f4</anchor>
      <arglist>(int intno, int no, void *handler, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReleaseSubIntrHandler</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g1f8f56b23583574e0af27f3e624cad10</anchor>
      <arglist>(int intno, int no)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelEnableSubIntr</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>gd92a22a4636759d6d6ba24f0223b46b2</anchor>
      <arglist>(int intno, int no)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDisableSubIntr</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>gcd25cf5519ced517f2401375d7c28a2c</anchor>
      <arglist>(int intno, int no)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>QueryIntrHandlerInfo</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g7614df312587fcfd458d4069748cb0a6</anchor>
      <arglist>(SceUID intr_code, SceUID sub_intr_code, PspIntrHandlerOptionParam *data)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>PspInterruptNames</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>ge1a813cbd3ff86f7ae336b0ab3ef1b43</anchor>
      <arglist>[67]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspiofilemgr.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspiofilemgr_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspiofilemgr__fcntl_8h" name="pspiofilemgr_fcntl.h" local="no" imported="no">pspiofilemgr_fcntl.h</includes>
    <includes id="pspiofilemgr__stat_8h" name="pspiofilemgr_stat.h" local="no" imported="no">pspiofilemgr_stat.h</includes>
    <includes id="pspiofilemgr__dirent_8h" name="pspiofilemgr_dirent.h" local="no" imported="no">pspiofilemgr_dirent.h</includes>
    <member kind="enumeration">
      <name>IoAssignPerms</name>
      <anchor>gf213fbe01f0bc49c7fab6d44e654fadb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IOASSIGN_RDWR</name>
      <anchor>ggf213fbe01f0bc49c7fab6d44e654fadb1c3bd4a89fb014f64ea24ec9fd4d682c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IOASSIGN_RDONLY</name>
      <anchor>ggf213fbe01f0bc49c7fab6d44e654fadb5a7db17c765149ef88e62ab19cfc75b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceIoOpen</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g88dc53eaa661c18698ff606859f69ec8</anchor>
      <arglist>(const char *file, int flags, SceMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceIoOpenAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>ga40c35536dfada200f9963b51ebc0b0b</anchor>
      <arglist>(const char *file, int flags, SceMode mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoClose</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g125921b287807c747491aed6ef16acd9</anchor>
      <arglist>(SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoCloseAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g2e37fd75f4a07b76bb0a9e4a4deda70e</anchor>
      <arglist>(SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoRead</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g5dc250bdac642a1c7365ea18a21d3635</anchor>
      <arglist>(SceUID fd, void *data, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoReadAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gc39b5495f04c81e5efefc7b7fbabdf7b</anchor>
      <arglist>(SceUID fd, void *data, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoWrite</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gbead74a0aac2fded08b72a5a43902170</anchor>
      <arglist>(SceUID fd, const void *data, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoWriteAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g8ebeef57f41f8fe8aa435cfe889589bf</anchor>
      <arglist>(SceUID fd, const void *data, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>SceOff</type>
      <name>sceIoLseek</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g7a57926cba9d70d9632396eaf69e0e96</anchor>
      <arglist>(SceUID fd, SceOff offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoLseekAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g39a8423cdcb9a592df18ece834962461</anchor>
      <arglist>(SceUID fd, SceOff offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoLseek32</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gca489d7dcc95d9ee8f85248601c2102c</anchor>
      <arglist>(SceUID fd, int offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoLseek32Async</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g5bb7c1bb1c61591dabb6f8462be88fa4</anchor>
      <arglist>(SceUID fd, int offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoRemove</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gf0878533048cf65a30d96350d296b253</anchor>
      <arglist>(const char *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoMkdir</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>ge05d18e89cc4baa82de5ce6aa14e7e95</anchor>
      <arglist>(const char *dir, SceMode mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoRmdir</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g98e7df109a5a86ba764cd9e534626d16</anchor>
      <arglist>(const char *path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoChdir</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g7f07e12c4eec503340746a30eaff8a6d</anchor>
      <arglist>(const char *path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoRename</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>ga574a64450b9f7a8aa062f48872e47e6</anchor>
      <arglist>(const char *oldname, const char *newname)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceIoDopen</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g99e6868991c01f146ecdd86b924eef1c</anchor>
      <arglist>(const char *dirname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoDread</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g9ed21c046e24cab62913f8d39e26809b</anchor>
      <arglist>(SceUID fd, SceIoDirent *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoDclose</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gcc2ca2130e3e8947f5fd18f5e2bd10e9</anchor>
      <arglist>(SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoDevctl</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>ga2d114c652feb1e81b4e6ef1d3edc846</anchor>
      <arglist>(const char *dev, unsigned int cmd, void *indata, int inlen, void *outdata, int outlen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoAssign</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>ga372b5342f993bac97475b110671d9e7</anchor>
      <arglist>(const char *dev1, const char *dev2, const char *dev3, int mode, void *unk1, long unk2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoUnassign</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g0d7732acd8a4229a3a256a63a4ee6efc</anchor>
      <arglist>(const char *dev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoGetstat</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g4e3afddc6b738ae99872eb74eb70a509</anchor>
      <arglist>(const char *file, SceIoStat *stat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoChstat</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g89361a511354826e6ac54ff587368e33</anchor>
      <arglist>(const char *file, SceIoStat *stat, int bits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoIoctl</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gb2297b50c65edb09c2175f8f262c7f20</anchor>
      <arglist>(SceUID fd, unsigned int cmd, void *indata, int inlen, void *outdata, int outlen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoIoctlAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g71371e769022cfa0eac4fa7003c9c94a</anchor>
      <arglist>(SceUID fd, unsigned int cmd, void *indata, int inlen, void *outdata, int outlen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoSync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g67be32ffdbd12b23149ebbc78b09c775</anchor>
      <arglist>(const char *device, unsigned int unk)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoWaitAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gec0343058b21c5c2ece5f25fda929efa</anchor>
      <arglist>(SceUID fd, SceInt64 *res)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoWaitAsyncCB</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gd66745a9a6b78309b6ddfc1be7475929</anchor>
      <arglist>(SceUID fd, SceInt64 *res)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoPollAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g6065e5b5f6e1851fea13662e0f241901</anchor>
      <arglist>(SceUID fd, SceInt64 *res)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoGetAsyncStat</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g5ec46984e483737b1ad50edc61f6ad4d</anchor>
      <arglist>(SceUID fd, int poll, SceInt64 *res)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoCancel</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gd59b308f9923ebc9f7ea6ff18a8ede22</anchor>
      <arglist>(SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoGetDevType</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gcadaf47fc7a88a01a23262a49be60e15</anchor>
      <arglist>(SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoChangeAsyncPriority</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g099e9c6cb3e72104424cb391ad77b0a0</anchor>
      <arglist>(SceUID fd, int pri)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoSetAsyncCallback</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g765de85ca20cd84bee1b69f6e0f27d0c</anchor>
      <arglist>(SceUID fd, SceUID cb, void *argp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspiofilemgr_dirent.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspiofilemgr__dirent_8h</filename>
    <includes id="pspiofilemgr__stat_8h" name="pspiofilemgr_stat.h" local="no" imported="no">pspiofilemgr_stat.h</includes>
    <class kind="struct">SceIoDirent</class>
  </compound>
  <compound kind="file">
    <name>pspiofilemgr_fcntl.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspiofilemgr__fcntl_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>PSP_O_RDONLY</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>9502fcbb93228fa7ea16ecf1b220b3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_O_WRONLY</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>62acfb4fe043778d08519fdc458c69aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_O_RDWR</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>87edcfe4bb2c382a361a1e40f38b7765</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_O_NBLOCK</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>8033451dae1defb77fdbb833a8dfdc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_O_DIROPEN</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>5d765d15344bb8de2d41a26a742fceae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_O_APPEND</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>7fab044885ddee63312d8f8134e06d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_O_CREAT</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>c1c9aa7546075d0cf2de33629db233d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_O_TRUNC</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>7221a0ed94a691da649cb991d229cb28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_O_EXCL</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>77ab286929b49fbca43522e98e48ce28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_O_NOWAIT</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>a46b917a676c3711b0318a447840ed8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SEEK_SET</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>8f04d42acd7cecf7ae95383a9bc956a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SEEK_CUR</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>cbd73e64b6a8d05c0fd020b2a8e7da66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SEEK_END</name>
      <anchorfile>pspiofilemgr__fcntl_8h.html</anchorfile>
      <anchor>7fe46cd7635de5e706ad3bc209f1c687</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspiofilemgr_stat.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspiofilemgr__stat_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <class kind="struct">SceIoStat</class>
    <member kind="define">
      <type>#define</type>
      <name>FIO_S_ISLNK</name>
      <anchorfile>pspiofilemgr__stat_8h.html</anchorfile>
      <anchor>e1fe1fa2541088f40c35b191c8c0c13f</anchor>
      <arglist>(m)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIO_S_ISREG</name>
      <anchorfile>pspiofilemgr__stat_8h.html</anchorfile>
      <anchor>3726bc3e2e9fa1c3464b9da23996521f</anchor>
      <arglist>(m)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIO_S_ISDIR</name>
      <anchorfile>pspiofilemgr__stat_8h.html</anchorfile>
      <anchor>3ca2f503f76f29e2d506c27924ea835d</anchor>
      <arglist>(m)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIO_SO_ISLNK</name>
      <anchorfile>pspiofilemgr__stat_8h.html</anchorfile>
      <anchor>36b90f7c02a4606feeb333fe76f6112f</anchor>
      <arglist>(m)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIO_SO_ISREG</name>
      <anchorfile>pspiofilemgr__stat_8h.html</anchorfile>
      <anchor>32de8b91bb1895577504550548853354</anchor>
      <arglist>(m)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIO_SO_ISDIR</name>
      <anchorfile>pspiofilemgr__stat_8h.html</anchorfile>
      <anchor>c109e970fcc4c57cb3144927dcd9edb9</anchor>
      <arglist>(m)</arglist>
    </member>
    <member kind="enumeration">
      <name>IOAccessModes</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IFMT</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0bf698892175fdf1807f3538217b4bf6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IFLNK</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d03e72bd65df0beccac3025d886cfbb526</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IFDIR</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d05a3270bb6fb7379db7afa5081a3d5ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IFREG</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0434aa3cf769871d151922328d37e9d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_ISUID</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0b7198daa23921eeede91252315720e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_ISGID</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d00b5fff14ef7a1bd8c7762c85e7b438dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_ISVTX</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d022b47bc6706b34afbee00460bc5a22f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IRWXU</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0310762286f480154814f63947484b8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IRUSR</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d012819fe04418f5cda866169c6eabbeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IWUSR</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0615b0fa30e754aba6f63d590fd475d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IXUSR</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0cf346d68f2df5a838be06ca957494369</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IRWXG</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d053d4b68dfb87a318035ea61b2206da3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IRGRP</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d049c4012ebdd5c8e20202ecea78065ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IWGRP</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0156fd4c4385751318ff39dec58960c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IXGRP</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0c9ffb1cf24b4b8cc3ad30324df327eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IRWXO</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0ec676f9594cf19e69a94166cd50fec53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IROTH</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d0b65c19770189805652086932b1938ea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IWOTH</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d01bb50e55adafb644a3baf8b7dcb18d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_S_IXOTH</name>
      <anchor>6d425a4a05e08e23c785df2b79ae59d026140a736d6a921b82e21730e7afc7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>IOFileModes</name>
      <anchor>06380086295b55382df4b117472c2111</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_SO_IFMT</name>
      <anchor>06380086295b55382df4b117472c211147680c881ecc7419cf7b58bbb4eb6e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_SO_IFLNK</name>
      <anchor>06380086295b55382df4b117472c211106ea823d3644c3cfda0445b1b509dfcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_SO_IFDIR</name>
      <anchor>06380086295b55382df4b117472c21116240d03861bd3e4454e718f046ada60a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_SO_IFREG</name>
      <anchor>06380086295b55382df4b117472c2111b4264df75b9a8ac9f9b20e30f209a6c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_SO_IROTH</name>
      <anchor>06380086295b55382df4b117472c2111182cf3b290f9d55ddd8f02e934994a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_SO_IWOTH</name>
      <anchor>06380086295b55382df4b117472c2111665c6c4cef3cd549e8f7bc6d595712e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FIO_SO_IXOTH</name>
      <anchor>06380086295b55382df4b117472c2111dc43f670170dee18f2756eedc49ee59f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspkerneltypes.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspkerneltypes_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <member kind="typedef">
      <type>int</type>
      <name>SceUID</name>
      <anchorfile>pspkerneltypes_8h.html</anchorfile>
      <anchor>9c036549fd8cfd554ba3aa26a397b663</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SceSize</name>
      <anchorfile>pspkerneltypes_8h.html</anchorfile>
      <anchor>6f2706740670a84a49050f5327a2bf35</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>SceSSize</name>
      <anchorfile>pspkerneltypes_8h.html</anchorfile>
      <anchor>bed425d1d37747659f03f11b65d4ff2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>SceUChar</name>
      <anchorfile>pspkerneltypes_8h.html</anchorfile>
      <anchor>c06898b08f5249ae4dc08d32117b6006</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SceUInt</name>
      <anchorfile>pspkerneltypes_8h.html</anchorfile>
      <anchor>31d30937f741de5425e25b6e111dcc39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>SceMode</name>
      <anchorfile>pspkerneltypes_8h.html</anchorfile>
      <anchor>d563fb9897e927ac60a231ba16859629</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SceInt64</type>
      <name>SceOff</name>
      <anchorfile>pspkerneltypes_8h.html</anchorfile>
      <anchor>c20a0c334ac3c41e9a7b295e31f6b111</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SceInt64</type>
      <name>SceIores</name>
      <anchorfile>pspkerneltypes_8h.html</anchorfile>
      <anchor>a1343fcc8a4ef640fbad5e056f3742f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspkerror.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspkerror_8h</filename>
    <member kind="enumeration">
      <name>PspKernelErrorCodes</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_OK</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac490e762c9101706509509c867c96420c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ERROR</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac1d968788d79b8c2102cd1f183a231e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOTIMP</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac011bd5b5f2dcbd3d79a8d31fe2b34537</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_EXPCODE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd001531a53328b9ad999c4e6f3cfb3e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_EXPHANDLER_NOUSE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac547674712a6cc080d05116d6865a59e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_EXPHANDLER_USED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacb72b1269b1557ada699b2ccf2ca497d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_SYCALLTABLE_NOUSED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacaa52955304abfcce6aa13b3fd6572433</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_SYCALLTABLE_USED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac8b15a07b5e97595b7efa9f5002ac2b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_SYSCALLTABLE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacddf8544b5a8d7f59a54eac3e6fba432c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_PRIMARY_SYSCALL_NUMBER</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac758c486393d6e269afb0a0f97c200253</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PRIMARY_SYSCALL_NUMBER_INUSE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac1a5e08ab10a91e784ca00283446b5df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_CONTEXT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac3a6e19ae3521f54b7d553f657569fd8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_INTRCODE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac4877534c827f39c08a77a462e3ee191d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_CPUDI</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacc24d9770cdd69f9c94ae24e12b2ee879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_FOUND_HANDLER</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd866d4841b5f68b2bd40f6d8e0bd8b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOTFOUND_HANDLER</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac18736325e045a2a8d11ea00882fc0c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_INTRLEVEL</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd62114496de0b84d81659bd8b4e12b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_ADDRESS</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacc906b7b195def121d2eb631fb4f2a1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_INTRPARAM</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacf82bc7403ae617b5967dfe5249327b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_STACK_ADDRESS</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac966c27406be6fc88de37f8fb7edca969</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ALREADY_STACK_SET</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac2afc05c187baa7fd6824ecde0ecc52bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NO_TIMER</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac26e5505e31629e87cee208a3d8a983e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_TIMERID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd00fc93991d577b78bb474ff8becbc03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_SOURCE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd9bbd782932250386d59bdc99aeb3aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_PRESCALE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac86b11711d116819560349eaa7d8923cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_TIMER_BUSY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac6520215fc95411db8ddc3d5d4ed46494</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_TIMER_NOT_SETUP</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacea43e90f03f23e18f2d4e4d03fd74025</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_TIMER_NOT_INUSE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac699713461579d461eec342df6edb8ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNIT_USED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacbd26d36cd440070dad2737afc1f8482f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNIT_NOUSE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacdc9e2617fad0ac2fdaf7a410aa4d8620</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NO_ROMDIR</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac2f88c74c5a37cf2b316c4552b34053b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_IDTYPE_EXIST</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac7a94432b3aee7fee9b11af8cf693c10d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_IDTYPE_NOT_EXIST</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcace30cd5818e036fb82cf907c52f104aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_IDTYPE_NOT_EMPTY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac91310f24cc2d645e5a79717a6623c353</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_UID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac871a52173e1a83e45c03d4433ce7c63e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNMATCH_UID_TYPE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac6e4ab1ff08306d5e86b290e65c786a9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ID_NOT_EXIST</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacc81467111babd5d4a023c9b05c36e7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOT_FOUND_UIDFUNC</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca11d597d3292b9b44312f144c9e490cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UID_ALREADY_HOLDER</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac5121e4c62c072105f4bc39736f22eb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UID_NOT_HOLDER</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac38d52c13ad7a14302c651b32d32f30ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_PERM</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca1c76f9898f2312bb947c10cb5c3c6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_ARGUMENT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcace3e3d763f7ec3f3f891ce0f5c8fbbac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_ADDR</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacf20c46446e445ac6177719bffe1e270d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_OUT_OF_RANGE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd186079c5c7e2c7626d3d1020304c0a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_MEM_RANGE_OVERLAP</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd0cdef229802147f41545ec3e08a2e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_PARTITION</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac15af58c661b69bf2b967fbce64f14965</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PARTITION_INUSE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca0f66e676f24e0fcf62902cf97834024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_MEMBLOCKTYPE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac3fc933967a83d178a6b608259b4612b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_MEMBLOCK_ALLOC_FAILED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac234c081fc53519d424adadcb565d450f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_MEMBLOCK_RESIZE_LOCKED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac81f44895af73e8082336854e48899691</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_MEMBLOCK_RESIZE_FAILED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac3618ac013ecffb0db812e055e617c491</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_HEAPBLOCK_ALLOC_FAILED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac5afdce50e51839854e9cad983267c17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_HEAP_ALLOC_FAILED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac4803e9446a00f2bc905828920d044363</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_CHUNK_ID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaccd7eb7a67e7e916123e3fc773af86a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOCHUNK</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca62cb5f889945f50a9a41863489d1b39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NO_FREECHUNK</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac7149c82993b46137104f713cef753380</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_LINKERR</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd7d4663940f0bbc6a672cf83a7cbad68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_OBJECT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac52afca08fd9e2b3a907f1b417d562198</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_MODULE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacdc1f2430bfcac4b42f26d10d98434498</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOFILE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca7c875b4b65f57f292fbdc95b1362524</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_FILEERR</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac72cd6bd10d8878557bd34efad5e3a65d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_MEMINUSE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac11396753aca180ced96a08a59e784c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PARTITION_MISMATCH</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd8c11b20e791d152427a2bcc7b1051ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ALREADY_STARTED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac0a5061c752c84706d5b074a57820a3dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOT_STARTED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac4fad4b5d33193d5c7c1fb974c7e7243a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ALREADY_STOPPED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac2c76ee49b0510b79601ef886576d2d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_CAN_NOT_STOP</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacdec5d3f09fc7d7423af1c98fb79f7029</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOT_STOPPED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacc540ffa32805ff47e5ef7cf70df30b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOT_REMOVABLE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac9b325690141d8cabcb70eaca359fa75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_EXCLUSIVE_LOAD</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac165b5ead1886278f1735693ea40194f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_LIBRARY_NOT_YET_LINKED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac3829796c7f55d5470214538ae664c9aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_LIBRARY_FOUND</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacc722c40900d48923447ade369fa4e63b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_LIBRARY_NOTFOUND</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac1a44dee3b8a36abb377fc99eb32f2614</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_LIBRARY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacdf595f6f5f0f93414b37aef48577d8b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_LIBRARY_INUSE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacc653b8c6db18ed840e8eb20486177caf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ALREADY_STOPPING</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac9752ebf4a0f2b6a3bbc90f4055ed3c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_OFFSET</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac35a53c5187d285467dab154bd853ce10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_POSITION</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac53482d981d1c20deaa5b782300962a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_ACCESS</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac78612f78477809ef527f1934571b696e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_MODULE_MGR_BUSY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacad3e6c1bdfeaf7c1cd34d8e5af732f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_FLAG</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcace5c2f436740814069c67134fd21cae2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_CANNOT_GET_MODULELIST</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac841b8e30fc3ebaf78edbcb8d1fc7b8cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PROHIBIT_LOADMODULE_DEVICE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacca2c24a543b62d8dcb97c88acb761e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PROHIBIT_LOADEXEC_DEVICE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac3cdde78f8e57fcc0dd8a38f996942350</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNSUPPORTED_PRX_TYPE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac2d1249de58749a43a39ff1966bbfb1c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_PERM_CALL</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac8e644548e9b094dbb569a46681f85a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_CANNOT_GET_MODULE_INFORMATION</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac7fa840a521d5030ea1eb45df9bb84574</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_LOADEXEC_BUFFER</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac059e16ba0b325ce1e8313190d0725827</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_LOADEXEC_FILENAME</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacb6c01a7bb1893c7803311aa20c755326</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NO_EXIT_CALLBACK</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac5e357a13c5fac86202ea3e554f57795a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NO_MEMORY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac7ce85b96765acd06611e64f05be1ba1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_ATTR</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacffee0eeaffdaec2ab653d8a9ebba2934</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_ENTRY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacf420148bbbc63937e0e1759adfc51f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_PRIORITY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac9550feaca79c39688f3f8095f9bd8842</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_STACK_SIZE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac25cd68e7d2dbd0965ff31d0d0f8459e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_MODE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac9d39a98db98f3d496abfa98bbd1cb467</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_MASK</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd7532e7901c29f0a08e4263a297c5d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_THID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcace2f83b8c34c015f205d81610f7a8f878</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_THID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacaa9312f845230bcc2cbed4a088d78ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_SEMID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac950b2c2caea7c9d67c97363a9d44baea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_EVFID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac03f0d70912f7ddc7022407ca403e9fa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_MBXID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacaa15e18bd6a87d919fc65eeb3409d3ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_VPLID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcace0ba40f5fb6a4366b9d873e9aa835208</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_FPLID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac77d216d4e86ec3ca9458dc0e7593e072</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_MPPID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacfdfe3ae52106bab0417593cbbcf199df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_ALMID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac5a8d060a2d10cba5e28f482f0282b808</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_TEID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac1d0e8f3aa0ca6aecc3f464dde833fbb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_CBID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac2153e01d3cbf1d5d50ea6d2d28a20570</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DORMANT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac7762f70c6d7f3e15803cb236807d5a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_SUSPEND</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac6efc2bb800ad45526b6e25008a15820c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOT_DORMANT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac8a99efa7c4e30429d43ee54f5a67498d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOT_SUSPEND</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaccc9aaef91712ab4a01ac86bc1b09002e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOT_WAIT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac3020cfda0dc9ca6c8354890f88d0d160</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_CAN_NOT_WAIT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac824224e4c08cf5531d0a72923ef879bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_WAIT_TIMEOUT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac23b357082aea44246991a389876c2676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_WAIT_CANCEL</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacff20af4b96d1c34f171b2e83bd1a97bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_RELEASE_WAIT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacaaac45a28e1dc569c91852f00f728389</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOTIFY_CALLBACK</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac9ec5c36febf0e802f48ef3758d44d162</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_THREAD_TERMINATED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac9881075787d6915ce6c5a7d8ad5da889</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_SEMA_ZERO</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac111cd1d23b7d2c2ec80807d8f03f0185</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_SEMA_OVF</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac75e0200980b436ba3dc7cb1e2fd7af40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_EVF_COND</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac080103b4c15d5ca33dcc7de4622362e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_EVF_MULTI</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac69f4944f0ef4cb9ad862dd6dbe1fd411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_EVF_ILPAT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac8582e62c8734d338f09a4f1d8faf0402</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_MBOX_NOMSG</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacf063ea9bc6da81dcf3153994b9eb6562</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_MPP_FULL</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac76188b4c845747b944e6f8a234a10d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_MPP_EMPTY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca815f8fcdd091f484fbb338036af0a3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_WAIT_DELETE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacb6f3e11b0cf0f0dd020b7dbb7da0461d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_MEMBLOCK</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca523173038b02818c0f48917c72432d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_MEMSIZE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac13e24cc56e26f05220634cdf9699cda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_SPADADDR</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac481753b2b68aa38c66aad1d6c78b1bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_SPAD_INUSE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac2f178f01564ef3815d589a7509c690aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_SPAD_NOT_INUSE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac78c3a943217a853c20d245a2ea1702bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_TYPE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac2ea4e4c6c7a319e0fed7e1fb5c1c9a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_SIZE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac7136a4fdab0852d7e02fea53c411781c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_COUNT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacff9f9bd16303000fa1b6183087955782</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNKNOWN_VTID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac585fd1d84e308dd3ce38d8122c02df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_VTID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacfee6bcb262ceb84c4013e69bf8f04a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ILLEGAL_KTLSID</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac003731494ed75ed94c7f94ebc06d316f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_KTLS_FULL</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacf7a000ad2725818d6b3b230deb5f95a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_KTLS_BUSY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac0d4fe101022fdba7f59e6c86166a7645</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_INVALID_PRIORITY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca268f1dc20b1a6eeb29d9ab470730dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_INVALID_DEVNAME</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacca05a697cd52019bf1e55539a21c148c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_UNKNOWN_DEVNAME</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac16fbc7290af6d347449797a1016f654e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_PMINFO_REGISTERED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacab5139a4d7917f839f61d15d365e8a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_PMINFO_UNREGISTERED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac72d423151e2cc6545611516f79aece81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_INVALID_MAJOR_STATE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd80b1981a56bf6f49548bbe97ced6d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_INVALID_REQUEST</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac0c0bd52b414e3184eae08b193da5cd15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_UNKNOWN_REQUEST</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac248fd15b46de0d6006ff7193e2090f17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_INVALID_UNIT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac9c4a1ae95724804218e2b4b864f791fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_CANNOT_CANCEL</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac39d9a4f04e79b6143d3bea391e30764a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_INVALID_PMINFO</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacdacf5cb83f271c64785fee5ca69fda73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_INVALID_ARGUMENT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac3290b3734dcccf5d6debe8536398037d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_ALREADY_TARGET_PWRSTATE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac7d67e2a61f9f6a8b8fe15fc56798dc94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_CHANGE_PWRSTATE_FAILED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca4907ab4ed42673f39c9137bbc94dc93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_CANNOT_CHANGE_DEVPWR_STATE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacf1309e7c6957a12d8ab953c84be23c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_PM_NO_SUPPORT_DEVPWR_STATE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac0f76052d7ea32ba6b16da776a31131bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_REQUEST_FAILED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac642a6b5e29f4e45c7d536d6bf6929911</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_REQUEST_DENIED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacfec77ced84cfd584c76bf47ef995ad65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_OP_QUEUED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac549c0710105e6f706d9feec6f2d762c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_OP_NOT_QUEUED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac4dee705ac38620983e572eab25496c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_OP_RUNNING</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacef13d9d238d553c7197fbb962a01a8b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_OP_NOT_ASSIGNED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac8680bfd78f15aeea2ec30c4bc2aa7609</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_OP_TIMEOUT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac5f71f316fedb926a84258ecbda7fda34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_OP_FREED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac393201444f57889d664a7576147f1e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_OP_USED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac6b6820f30689e0ea487ca8596a4a7269</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_OP_EMPTY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacb9b465aa532fb2c91bac760332a20efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_OP_ABORTED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac2cbe8e919a7744c8c65fd06866dad5b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_OP_ERROR</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacd2b115fa1a59eab54430e3cb63060da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_CHANNEL_RESERVED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac352d797d7c6349fdd995214d91b03d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_CHANNEL_EXCLUDED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacf6b832ba285afc1c46c1e58b2e24cc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_PRIVILEGE_ADDRESS</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca288a824f2654dc1a4594ae65302e4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_NO_ENOUGHSPACE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcace2d2c940deab5c64376f41f732f9f3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_CHANNEL_NOT_ASSIGNED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac2930cf9aa5d46afda7bd786bc107a619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_CHILD_OPERATION</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacffcea86cc2960804ec4e4547818546d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_TOO_MUCH_SIZE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac67b177149191d8c17380db98816ad531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DMAC_INVALID_ARGUMENT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca9836ce921e2c7e6c6ab5662430bfe6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_MFILE</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac95dcc24cc326fa7f8f05ea061eaa3401</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NODEV</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac501b890e21bec39aa769116fcabfb161</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_XDEV</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac21320b0e0456a4b9e16d98b12742b5da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_BADF</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcace42c45bfba3582c7b8c408bd6a84f521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_INVAL</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac789954157d7677398287582b5572a72d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_UNSUP</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac1f4e395a19860bc545a140eb1d2ac1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ALIAS_USED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac7ec225d576df8b15e3944051fd13cca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_CANNOT_MOUNT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac616a7061fe78dcece80066785b27e7e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_DRIVER_DELETED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac74e671161d130ecdf69f138108b3bcf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ASYNC_BUSY</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac626bacd88fbf32419233071dd2abab55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOASYNC</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaca1d646a2966ada732b74daa69ff8f444</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_REGDEV</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac2d341fd731d299dcd4edc2f229d4d9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOCWD</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac190e2a021c1f9f45d4d4f655e2e5e894</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NAMETOOLONG</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcacecb07497b1ce9c5194a43b325aff074a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NXIO</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac79df9436da0c24e5c500a5fa2f13d18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_IO</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaceccb0bbcceb673e03a74fdf862622820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_NOMEM</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcaceaa7270b4adfabb9b56365d19faac9ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_STDIO_NOT_OPENED</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac0cf51688c24faa13b3b9cec36496b0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_CACHE_ALIGNMENT</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac71869ff02a19215fbbdf2494562d5818</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_ERROR_ERRORMAX</name>
      <anchor>da38ce7dd0ddff755524e736afd6fcac407c48d38f9388c10fc9aeb867c31566</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psploadexec.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>psploadexec_8h</filename>
    <class kind="struct">SceKernelLoadExecParam</class>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterExitCallback</name>
      <anchorfile>group__LoadExec.html</anchorfile>
      <anchor>g2edcc6cc908579fd877c39378b06a792</anchor>
      <arglist>(int cbid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelExitGame</name>
      <anchorfile>group__LoadExec.html</anchorfile>
      <anchor>gdc458eebc603ffc5a3748ef7b08baeb9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelLoadExec</name>
      <anchorfile>group__LoadExec.html</anchorfile>
      <anchor>g19b06a8225cbdf630c7618de9f2815a4</anchor>
      <arglist>(const char *file, struct SceKernelLoadExecParam *param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspmoduleexport.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspmoduleexport_8h</filename>
    <class kind="struct">_PspLibraryEntry</class>
  </compound>
  <compound kind="file">
    <name>pspmoduleinfo.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspmoduleinfo_8h</filename>
    <class kind="struct">_scemoduleinfo</class>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MODULE_INFO</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>8505e70bfa7a546e6f77fe677a6ce05c</anchor>
      <arglist>(name, attributes, major_version, minor_version)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MAIN_THREAD_PRIORITY</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>e22c9f5bc3b2674304491196cf27cef6</anchor>
      <arglist>(priority)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MAIN_THREAD_STACK_SIZE_KB</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>bd6c208a42d27c21197ce65f5809da42</anchor>
      <arglist>(size_kb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MAIN_THREAD_ATTR</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>e99e404ef93d3568a9a54d4557d140a1</anchor>
      <arglist>(attr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MAIN_THREAD_ATTRIBUTE</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>33279334ff7f79037bec34ac52c329eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MAIN_THREAD_PARAMS</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>e408f0739ea8db7890f081171b0853e2</anchor>
      <arglist>(priority, size_kb, attribute)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NO_CREATE_MAIN_THREAD</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>fd3b121a029736ad6f6b389c36b6843e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_HEAP_SIZE_KB</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>7e5ee63420e4352dc9b3690b49fc9292</anchor>
      <arglist>(size_kb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MAIN_THREAD_NAME</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>2b6f8ad09bce57019b21a3e193be2bc1</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="typedef">
      <type>_scemoduleinfo</type>
      <name>_sceModuleInfo</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>349beb487c93fb94728da45cdf374c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const _sceModuleInfo</type>
      <name>SceModuleInfo</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>9840abf23267247218416627467db239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspModuleInfoAttr</name>
      <anchor>f27d6ecf27270e590951b4026738533b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MODULE_USER</name>
      <anchor>f27d6ecf27270e590951b4026738533b94da4bfc9283f5ab83b11b924a2d57ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MODULE_KERNEL</name>
      <anchor>f27d6ecf27270e590951b4026738533b189ef7623bbdd632389d38f1db82d746</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>_gp</name>
      <anchorfile>pspmoduleinfo_8h.html</anchorfile>
      <anchor>1f629201dc9ea82fadc9180deb2a6f01</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspmodulemgr.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspmodulemgr_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <class kind="struct">SceKernelLMOption</class>
    <class kind="struct">SceKernelSMOption</class>
    <class kind="struct">SceKernelModuleInfo</class>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MEMORY_PARTITION_KERNEL</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g2c0807fdae4d8932361ac4e77fb9689c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MEMORY_PARTITION_USER</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g3e50ae40e67fb6172ab7d86e87d3c464</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelLoadModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g7777a48e07030061c3b5da63697d27b2</anchor>
      <arglist>(const char *path, int flags, SceKernelLMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelLoadModuleMs</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g89789d907f5bc2300758a42bfa7b020f</anchor>
      <arglist>(const char *path, int flags, SceKernelLMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelLoadModuleByID</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g2a5c45e6a0268ec89aaf3942c73000e8</anchor>
      <arglist>(SceUID fid, int flags, SceKernelLMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelLoadModuleBufferUsbWlan</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g6896a8a63029aee4ba4264689b685fc7</anchor>
      <arglist>(SceSize bufsize, void *buf, int flags, SceKernelLMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStartModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g69c3f128b68a8b0ec89fb1f17a5bd5b5</anchor>
      <arglist>(SceUID modid, SceSize argsize, void *argp, int *status, SceKernelSMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStopModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>gf77c0abd9c45a2c10abea0cbddb29673</anchor>
      <arglist>(SceUID modid, SceSize argsize, void *argp, int *status, SceKernelSMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUnloadModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g5f22506e4149fdf094c0eccce9550984</anchor>
      <arglist>(SceUID modid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSelfStopUnloadModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g4572fedc91a1809d94cdb5f97bc4928f</anchor>
      <arglist>(int unknown, SceSize argsize, void *argp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStopUnloadSelfModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g1d5b57655b0bf5993fa85cfea6c7659b</anchor>
      <arglist>(SceSize argsize, void *argp, int *status, SceKernelSMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelQueryModuleInfo</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g88cf2be2180bd819ebdd9fa61a3ee5fb</anchor>
      <arglist>(SceUID modid, SceKernelModuleInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetModuleIdList</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>ge31cbf0c71d52e2299137c01ef9a1302</anchor>
      <arglist>(SceUID *readbuf, int readbufsize, int *idcount)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspmscm.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspmscm_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MS_CB_EVENT_INSERTED</name>
      <anchorfile>pspmscm_8h.html</anchorfile>
      <anchor>fbea9eec450ac40c8cdfdb7b3bd05ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MS_CB_EVENT_EJECTED</name>
      <anchorfile>pspmscm_8h.html</anchorfile>
      <anchor>e7f3c211b2f150b2c1fa1b5f9ba8d0f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspstdio.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspstdio_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelStdin</name>
      <anchorfile>group__Stdio.html</anchorfile>
      <anchor>gebd94e416c1e8687e4a6b7b8bee105a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelStdout</name>
      <anchorfile>group__Stdio.html</anchorfile>
      <anchor>gdd72283aae22376cd224ea5e1b8aacc8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelStderr</name>
      <anchorfile>group__Stdio.html</anchorfile>
      <anchor>g9338f8d2a40064bfaf8c41ffae93e693</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspsuspend.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspsuspend_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <member kind="function">
      <type>int</type>
      <name>sceKernelVolatileMemLock</name>
      <anchorfile>pspsuspend_8h.html</anchorfile>
      <anchor>ccf59ae311e52113042f267ad269da66</anchor>
      <arglist>(int unk, void **ptr, int *size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelVolatileMemTryLock</name>
      <anchorfile>pspsuspend_8h.html</anchorfile>
      <anchor>702d1f7e2504d181ecf8462f5bf6d51b</anchor>
      <arglist>(int unk, void **ptr, int *size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelVolatileMemUnlock</name>
      <anchorfile>pspsuspend_8h.html</anchorfile>
      <anchor>ac4b1d1258ea642d99b3fb79d42d88a6</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspsysmem.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspsysmem_8h</filename>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <member kind="typedef">
      <type>int</type>
      <name>SceKernelSysMemAlloc_t</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>gbfff3ced4a4f23fcab7991ad022a616a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspSysMemBlockTypes</name>
      <anchor>g5b65e055e1f9e99169cb1cde1e18eb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SMEM_Low</name>
      <anchor>gg5b65e055e1f9e99169cb1cde1e18eb18c285b32b36a59c00c68648c1110332ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SMEM_High</name>
      <anchor>gg5b65e055e1f9e99169cb1cde1e18eb18bc800ef1c1f23da39e3bbf92b203d8a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SMEM_Addr</name>
      <anchor>gg5b65e055e1f9e99169cb1cde1e18eb18ca9f8f1182820c3108ab8a9639bba7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelAllocPartitionMemory</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g0b5c821e691437713fd193a0c071ef87</anchor>
      <arglist>(SceUID partitionid, const char *name, int type, SceSize size, void *addr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelFreePartitionMemory</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g5e990d285f800cb78da505ffad2accf1</anchor>
      <arglist>(SceUID blockid)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceKernelGetBlockHeadAddr</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g9d937f1ec38c51c14fc28b7c8e81988e</anchor>
      <arglist>(SceUID blockid)</arglist>
    </member>
    <member kind="function">
      <type>SceSize</type>
      <name>sceKernelTotalFreeMemSize</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g34bb6bfa7d932f92714a7b797c94cd93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceSize</type>
      <name>sceKernelMaxFreeMemSize</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g20fc6133296639788ccc048ff00eee20</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDevkitVersion</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g451583bfbb351d0882b1317a8eb39a72</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspthreadman.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspthreadman_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspdebug_8h" name="pspdebug.h" local="no" imported="no">pspdebug.h</includes>
    <class kind="struct">SceKernelSysClock</class>
    <class kind="struct">SceKernelThreadOptParam</class>
    <class kind="struct">SceKernelThreadInfo</class>
    <class kind="struct">SceKernelThreadRunStatus</class>
    <class kind="struct">SceKernelSemaOptParam</class>
    <class kind="struct">SceKernelSemaInfo</class>
    <class kind="struct">SceKernelEventFlagInfo</class>
    <class kind="struct">SceKernelEventFlagOptParam</class>
    <class kind="struct">SceKernelMbxOptParam</class>
    <class kind="struct">SceKernelMbxInfo</class>
    <class kind="struct">SceKernelAlarmInfo</class>
    <class kind="struct">SceKernelCallbackInfo</class>
    <class kind="struct">SceKernelSystemStatus</class>
    <class kind="struct">SceKernelMppInfo</class>
    <class kind="struct">SceKernelVplOptParam</class>
    <class kind="struct">SceKernelVplInfo</class>
    <class kind="struct">SceKernelFplOptParam</class>
    <class kind="struct">SceKernelFplInfo</class>
    <class kind="struct">SceKernelVTimerOptParam</class>
    <class kind="struct">SceKernelVTimerInfo</class>
    <class kind="struct">SceKernelThreadEventHandlerInfo</class>
    <member kind="define">
      <type>#define</type>
      <name>THREAD_ATTR_VFPU</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gcbb85068a4f54a6fce5458ec81ec6854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>THREAD_ATTR_USER</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g57be9021cb33707141430dc5524529e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>SceKernelThreadEntry</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gf7130e206fb9d413e14aea94c79dcbad</anchor>
      <arglist>)(SceSize args, void *argp)</arglist>
    </member>
    <member kind="typedef">
      <type>SceKernelEventFlagOptParam</type>
      <name>SceKernelEventFlagOptParam</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gdc6125df8272095fea2c6781d6e385d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SceUInt(*</type>
      <name>SceKernelAlarmHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gf3cef078f5af8364f15e31d4671763f0</anchor>
      <arglist>)(void *common)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>SceKernelCallbackFunction</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g2ef311fd2c3f8219b6bc422f98c3f5a1</anchor>
      <arglist>)(int arg1, int arg2, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>SceUInt(*</type>
      <name>SceKernelVTimerHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g0ea8f43b3c0c0d0a51b29007c4548345</anchor>
      <arglist>)(SceUID uid, SceKernelSysClock *, SceKernelSysClock *, void *)</arglist>
    </member>
    <member kind="typedef">
      <type>SceUInt(*</type>
      <name>SceKernelVTimerHandlerWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g81386d1e87bc24c7cf606ded0051fd46</anchor>
      <arglist>)(SceUID uid, SceInt64, SceInt64, void *)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>SceKernelThreadEventHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbc6c9928cfb4a9b2b3478e66363d30b8</anchor>
      <arglist>)(int mask, SceUID thid, void *common)</arglist>
    </member>
    <member kind="enumeration">
      <name>PspThreadAttributes</name>
      <anchor>g895c9fb39c6f2480e73f3a695b271011</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_VFPU</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b271011d12b52dc01863c5862471f9746649142</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_USER</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b271011f00a8f5aa8d490eee4eb4a68d4737238</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_USBWLAN</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b271011c38a1bd8d9897c8a8efb7cc806f413e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_VSH</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b2710115583462f4cd68e3b0f3b549ab580cb46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_SCRATCH_SRAM</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b2710113da917d7a661dab77ec5e996f5c7f33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_NO_FILLSTACK</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b271011ffcbcb433bade17e77262d8f2ca198fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_CLEAR_STACK</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b271011c56103d5c7eb7a7a0891ffa324753f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspThreadStatus</name>
      <anchor>g90e3d817b79f1eecb4dd489376dcd1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_RUNNING</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e02c8325adb7b04073fcf3cacb15ea8c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_READY</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e092c9a856b85aa13923e17a989528968f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_WAITING</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e0caa25801243338626dc1c1fc8e23c99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_SUSPEND</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e0515ddafa29ab1ef334b1ceadd27767b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_STOPPED</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e0bc5bde06150a9431fef9c9e5a198b46c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_KILLED</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e03e589104e603d85e312319571cfce26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspEventFlagAttributes</name>
      <anchor>g6eb030ea3ffd2dfb0be56e6a5b48900c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_EVENT_WAITMULTIPLE</name>
      <anchor>gg6eb030ea3ffd2dfb0be56e6a5b48900c9db3ef4e8966b159e6da0fe2590e6004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspEventFlagWaitTypes</name>
      <anchor>g6447ecb6b82e11f3ba8c3e895c430cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_EVENT_WAITAND</name>
      <anchor>gg6447ecb6b82e11f3ba8c3e895c430cbd6d38f9a78fc1e1851e32b9069bde450e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_EVENT_WAITOR</name>
      <anchor>gg6447ecb6b82e11f3ba8c3e895c430cbd4c71f66ed18eec4d291bc688dee9be7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_EVENT_WAITCLEAR</name>
      <anchor>gg6447ecb6b82e11f3ba8c3e895c430cbd6bff82fe9789e33a6f0b31720db224ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SceKernelIdListType</name>
      <anchor>gb73e1647ba8ce49d40132e57883602dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Thread</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc6c07486899e0df175dcb90cefb2ac7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Semaphore</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc6f586e8489418f6428ac915abfa3320e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_EventFlag</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc8abd95cf3cd992b483d74e71490a366c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Mbox</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dcb0c48409be61f88ae379761cdf5e98ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Vpl</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dcda22acf5747579086eb359e0ddc183d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Fpl</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc411fae0b430b218535117cb750048ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Mpipe</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc60147b6fe440e3c4770cfd1a61892376</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Callback</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc14cad08b131ef9371a6a0a7322d7af5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_ThreadEventHandler</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc205a48351680e34a080bb3958ab179b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Alarm</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc673bce289cfe11dfa9daac5dc5405167</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_VTimer</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc13a6f5bc10feb810635e18a9e63994cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_SleepThread</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc2e1cada1f0344173360de9aba065bd2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_DelayThread</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc3a02bc58bf1ba70ac6dc77d2cb16aadb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_SuspendThread</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc93d8b4b14edcd3b462df1b11a0cc4442</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_DormantThread</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc874f26b72bce479b904e5b8d50fb89d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ThreadEventIds</name>
      <anchor>g226d814114ef3e0bb0d59a68456b2ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREADEVENT_ALL</name>
      <anchor>gg226d814114ef3e0bb0d59a68456b2ffef526905585202be533dca81edb69b722</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREADEVENT_KERN</name>
      <anchor>gg226d814114ef3e0bb0d59a68456b2ffef3f2fe247faf4ec061eb5f191af01997</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREADEVENT_USER</name>
      <anchor>gg226d814114ef3e0bb0d59a68456b2ffec9f31bd1243008f7fcf6f2f03bac83d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREADEVENT_CURRENT</name>
      <anchor>gg226d814114ef3e0bb0d59a68456b2ffe4df18851c6b405a926229cfa04bed4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ThreadEvents</name>
      <anchor>g3257fc32dd732c0009124610b68859b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREAD_CREATE</name>
      <anchor>gg3257fc32dd732c0009124610b68859b82caf5764996f4b2b062a359ca3cb93d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREAD_START</name>
      <anchor>gg3257fc32dd732c0009124610b68859b8ae8f7fe4c447de6809ddfcbf2b9254ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREAD_EXIT</name>
      <anchor>gg3257fc32dd732c0009124610b68859b8ab31e2753b087bbf42820595baed5604</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREAD_DELETE</name>
      <anchor>gg3257fc32dd732c0009124610b68859b8306d243f6c5886c6a3890c8b925d6eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gd7e21acdf3aca23200c81f73f69521a3</anchor>
      <arglist>(const char *name, SceKernelThreadEntry entry, int initPriority, int stackSize, SceUInt attr, SceKernelThreadOptParam *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5ca67bdd8f53d50a169befe55b0c9684</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStartThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ga3b54986929bad87d48b5c4d11b8678e</anchor>
      <arglist>(SceUID thid, SceSize arglen, void *argp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelExitThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3e4b74175f4aefa6bc6f410ac11a50c6</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelExitDeleteThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g1d2c7c3946da4fa98b26ac755fcf3cd1</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTerminateThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge2205c7bae95732218b797d67fe8b84d</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTerminateDeleteThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g12bdc656af48deb3352c1f5fa206f3b0</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSuspendDispatchThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g2443643769063468e6a57075f468d16b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelResumeDispatchThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g72c7c502932ec04792f1a87952649700</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSleepThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g9702b337be697c9d3bb0551770dbe176</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSleepThreadCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc180fba0281f65ce3ec623fc126e788b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWakeupThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7f9c78cb8602ecb7949b8d91fc755a0b</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelWakeupThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g32bb92de043c02c61974f10034b80a96</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSuspendThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g89460ef8c3815a4534508ce0a00b24bd</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelResumeThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3df65329e59b2591d3336613e42bc01b</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitThreadEnd</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gaf86416e6c601f8dcb92f66050066f10</anchor>
      <arglist>(SceUID thid, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitThreadEndCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbba95470fda6fdb60aa17b58905e9698</anchor>
      <arglist>(SceUID thid, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDelayThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g76893a433dee550c0b7be52d807e62a8</anchor>
      <arglist>(SceUInt delay)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDelayThreadCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7b51417e5999e727715379282cc2bf8b</anchor>
      <arglist>(SceUInt delay)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDelaySysClockThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ga5c1205eba3b45fa5e89721598df844c</anchor>
      <arglist>(SceKernelSysClock *delay)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDelaySysClockThreadCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g108196035af9f3c8895b646bef2ad2d7</anchor>
      <arglist>(SceKernelSysClock *delay)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelChangeCurrentThreadAttr</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gf951d0cf8f791972e4b467e16042364c</anchor>
      <arglist>(int unknown, SceUInt attr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelChangeThreadPriority</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g9495237d122769ed5ea5c6f2c6285e43</anchor>
      <arglist>(SceUID thid, int priority)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRotateThreadReadyQueue</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ga8bc5f547a985ed13ec982bc83c0a895</anchor>
      <arglist>(int priority)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReleaseWaitThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g864276ceccb242a7d3df092de89020ba</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadId</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5a71c2dc9a2d3e412fc9eeaae0c5a3c7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadCurrentPriority</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5e010f92f8ea412645ee00124dab3d89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadExitStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7fa2373891f0175338c0c5975b371c1c</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCheckThreadStack</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g58fa38bffbe03d73b6a33a9df6623757</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadStackFreeSize</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gfee4714c33cfa560511663e4110e1f9d</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferThreadStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge148cfb2a2228ca761be2efd0e3821c4</anchor>
      <arglist>(SceUID thid, SceKernelThreadInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferThreadRunStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g86f5d844c044c7aa237d5a4b1dccba9e</anchor>
      <arglist>(SceUID thid, SceKernelThreadRunStatus *status)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateSema</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gda2ceb5a89c2a999545844fa2cae9dad</anchor>
      <arglist>(const char *name, SceUInt attr, int initVal, int maxVal, SceKernelSemaOptParam *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteSema</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbfae2ae4f32fd9b1ffdfbb7ddd4af114</anchor>
      <arglist>(SceUID semaid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSignalSema</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gb81b0362839d7f9cbdcbf64305e7e603</anchor>
      <arglist>(SceUID semaid, int signal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitSema</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbae55d2ad8fa3ea26c7402fe34bbf8d5</anchor>
      <arglist>(SceUID semaid, int signal, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitSemaCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g39f2a84f2c014b35ca17a2412dafbd4b</anchor>
      <arglist>(SceUID semaid, int signal, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelPollSema</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g57b23ac4e988e2f461812aa06cb7928a</anchor>
      <arglist>(SceUID semaid, int signal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferSemaStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc059ca45489dc7be2c4d775d069d68f2</anchor>
      <arglist>(SceUID semaid, SceKernelSemaInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g983a3acb8fb04c7a46ebe8f5930582d7</anchor>
      <arglist>(const char *name, int attr, int bits, SceKernelEventFlagOptParam *opt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSetEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gdde2f5b79018af3aa642a0e29ed704e3</anchor>
      <arglist>(SceUID evid, u32 bits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelClearEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g358e93729e050e1b4f210f9436a00e6a</anchor>
      <arglist>(SceUID evid, u32 bits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelPollEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gef9269cf1887848425a551bda1b6eacf</anchor>
      <arglist>(int evid, u32 bits, u32 wait, u32 *outBits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g42d698e62bcf49b2271818e01e9937ce</anchor>
      <arglist>(int evid, u32 bits, u32 wait, u32 *outBits, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitEventFlagCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gd294c995f7e18847b0a27d2f8c5e3c77</anchor>
      <arglist>(int evid, u32 bits, u32 wait, u32 *outBits, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbcb2a121e8e7821396cbf644fb2d377d</anchor>
      <arglist>(int evid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferEventFlagStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge73e26eac189d1ff6746599fa6d23024</anchor>
      <arglist>(SceUID event, SceKernelEventFlagInfo *status)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g9704f79e78233e67da16bb9b87a868d8</anchor>
      <arglist>(const char *name, SceUInt attr, SceKernelMbxOptParam *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g0cc49472c5a3e2dda56acc8aef68acf3</anchor>
      <arglist>(SceUID mbxid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSendMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g6930c1105435faeabaec757d7b848d88</anchor>
      <arglist>(SceUID mbxid, void *message)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReceiveMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g69c85e9c86abc554d0c2c959231c42b2</anchor>
      <arglist>(SceUID mbxid, void **pmessage, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReceiveMbxCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gfc560e025518290d37d8c5da97013d09</anchor>
      <arglist>(SceUID mbxid, void **pmessage, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelPollMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gb81151d04f6509423c8fa3545f50fa2f</anchor>
      <arglist>(SceUID mbxid, void **pmessage)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelReceiveMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g93912582ff46abefde57c6d0de2ca832</anchor>
      <arglist>(SceUID mbxid, int *pnum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferMbxStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ga80af9c14450220c306e3f937146a302</anchor>
      <arglist>(SceUID mbxid, SceKernelMbxInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelSetAlarm</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g8d38f0b59dda60a504e477c88989ce14</anchor>
      <arglist>(SceUInt clock, SceKernelAlarmHandler handler, void *common)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelSetSysClockAlarm</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc7f93246d141c6ca9c2ba44c73dbec35</anchor>
      <arglist>(SceKernelSysClock *clock, SceKernelAlarmHandler handler, void *common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelAlarm</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g8ad33fa1eaa23222da02188fd7c41578</anchor>
      <arglist>(SceUID alarmid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferAlarmStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gf699e1a5bbf4ad781ef009dc7ab2b7a0</anchor>
      <arglist>(SceUID alarmid, SceKernelAlarmInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCreateCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3cf9b8f5cdd47b687d65ba345eed4d09</anchor>
      <arglist>(const char *name, SceKernelCallbackFunction func, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferCallbackStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gd19a071c4337a5ec31ca8809fb0d5862</anchor>
      <arglist>(SceUID cb, SceKernelCallbackInfo *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g08fcc15c1357518a5b910066c9cb1666</anchor>
      <arglist>(SceUID cb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelNotifyCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3786870930297f68fe805758c0970153</anchor>
      <arglist>(SceUID cb, int arg2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gca08520842550dcac247e7c7839e1881</anchor>
      <arglist>(SceUID cb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetCallbackCount</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g1540f817f8d121a979fbbb9f8c01d15e</anchor>
      <arglist>(SceUID cb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCheckCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gefe11af04ae86030017a9c7c9c80c365</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadmanIdList</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g0a6c792d8a94bf2b5432191fe1703c06</anchor>
      <arglist>(enum SceKernelIdListType type, SceUID *readbuf, int readbufsize, int *idcount)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferSystemStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g4e74b287ca83f2fe1e2b541f41c9bdbe</anchor>
      <arglist>(SceKernelSystemStatus *status)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g8c06b5cdeb43dc608bb1c0292b266b4d</anchor>
      <arglist>(const char *name, int part, int attr, void *unk1, void *opt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g73595f343ff0270f9d14ceba5b629cce</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSendMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gd1b98f9743cae9a86d6414da646c61a0</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSendMsgPipeCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g9ee6e90080f74d9118f867024f2d6beb</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTrySendMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge9f6a8ec2fdc925ddf915f36320b3ae1</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReceiveMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gecd0cce97640372fbc0905426f9e367e</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReceiveMsgPipeCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge0943b8da3da312380dffbbec9b0593d</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTryReceiveMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge0d3fcb370b8a7af271376a9fdbaae6a</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7011e5610981eae9983059ca93b4eaba</anchor>
      <arglist>(SceUID uid, int *psend, int *precv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferMsgPipeStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc655a59e88952387ca3ea928b31c1c33</anchor>
      <arglist>(SceUID uid, SceKernelMppInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc85e85797cd8d6c09b6312cd3429e22f</anchor>
      <arglist>(const char *name, int part, int attr, unsigned int size, struct SceKernelVplOptParam *opt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g54508dbefa85f028cb3d55cd7be0b769</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelAllocateVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbdd10c4ca3ec4b3b9700a95cb787fbe5</anchor>
      <arglist>(SceUID uid, unsigned int size, void **data, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelAllocateVplCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g34a3b111c2e38b7f704923abe7e44210</anchor>
      <arglist>(SceUID uid, unsigned int size, void **data, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTryAllocateVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g81e91873d2143f2b3c65e1c1089e0158</anchor>
      <arglist>(SceUID uid, unsigned int size, void **data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelFreeVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc159e5ffe9635dea1eb85d627786a583</anchor>
      <arglist>(SceUID uid, void *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gb593a84a4a3c1d8aa6fe651e547315b3</anchor>
      <arglist>(SceUID uid, int *pnum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferVplStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g079bbc5c11c5f93fc2a4c2f2bec92885</anchor>
      <arglist>(SceUID uid, SceKernelVplInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCreateFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7e098eebd308eb91e60294ed37b9c235</anchor>
      <arglist>(const char *name, int part, int attr, unsigned int size, unsigned int blocks, struct SceKernelFplOptParam *opt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g043977cf9cab17da4f0fa9b623e7888c</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelAllocateFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gd5a967abb81ef358fc2becda292c2f6a</anchor>
      <arglist>(SceUID uid, void **data, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelAllocateFplCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc24d52e91e1a5dc6b4291843606ecde4</anchor>
      <arglist>(SceUID uid, void **data, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTryAllocateFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g76964d8dbe53148df5456d48126d775f</anchor>
      <arglist>(SceUID uid, void **data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelFreeFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge1e19e8c2e984563ed8783d9b2d93f48</anchor>
      <arglist>(SceUID uid, void *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g183c20c5cfc1b8acbb1ff9f7b02bab04</anchor>
      <arglist>(SceUID uid, int *pnum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferFplStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gf7b9efbbd5595042716208ad1184bf0d</anchor>
      <arglist>(SceUID uid, SceKernelFplInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_sceKernelReturnFromTimerHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g8f05a3372ef8cad2dc42a06d4bcaf457</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_sceKernelReturnFromCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gae487db2e6db3ccb706379238a00fac0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUSec2SysClock</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5ee607bd14adae69b9663507e956139b</anchor>
      <arglist>(unsigned int usec, SceKernelSysClock *clock)</arglist>
    </member>
    <member kind="function">
      <type>SceInt64</type>
      <name>sceKernelUSec2SysClockWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gee8843257778fe320893fda97efbddcd</anchor>
      <arglist>(unsigned int usec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSysClock2USec</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge526b70f31d9423498d8fd5e1e13952d</anchor>
      <arglist>(SceKernelSysClock *clock, unsigned int *low, unsigned int *high)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSysClock2USecWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5f7f37a4de60b6b036b44a1c5c3a3b97</anchor>
      <arglist>(SceInt64 clock, unsigned *low, unsigned int *high)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetSystemTime</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g44ecc68217cdadddb5591c603c78d6a4</anchor>
      <arglist>(SceKernelSysClock *time)</arglist>
    </member>
    <member kind="function">
      <type>SceInt64</type>
      <name>sceKernelGetSystemTimeWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g667b282cd3c9da73c237d39f8d7c11b3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceKernelGetSystemTimeLow</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g0a482d4b393b6db06a556bdac4e61508</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateVTimer</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gb0cfea0e499d89300e8d502ba970bcae</anchor>
      <arglist>(const char *name, struct SceKernelVTimerOptParam *opt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteVTimer</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gdf2e118e60579bfc6fd0227551647fc1</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetVTimerBase</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g1b2532dae028592514e703a5230bf142</anchor>
      <arglist>(SceUID uid, SceKernelSysClock *base)</arglist>
    </member>
    <member kind="function">
      <type>SceInt64</type>
      <name>sceKernelGetVTimerBaseWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g438ece541868eb97c058ab339eecdbae</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetVTimerTime</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gdc8387108c2677056b8204b926a7f5c0</anchor>
      <arglist>(SceUID uid, SceKernelSysClock *time)</arglist>
    </member>
    <member kind="function">
      <type>SceInt64</type>
      <name>sceKernelGetVTimerTimeWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge2c6bc3543dfb447192b431f2887e5a3</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSetVTimerTime</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g9c12336521c4c964205d41d17a14fcc2</anchor>
      <arglist>(SceUID uid, SceKernelSysClock *time)</arglist>
    </member>
    <member kind="function">
      <type>SceInt64</type>
      <name>sceKernelSetVTimerTimeWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g6abf1adfe2d3a5a63d497189d1a126e4</anchor>
      <arglist>(SceUID uid, SceInt64 time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStartVTimer</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g121fd1875734c853e23794d25cd5cec9</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStopVTimer</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3840dbadebf829cd6519df23f3f60eca</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSetVTimerHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g2aa9c2e5b5cb1a790edb37291352b1ed</anchor>
      <arglist>(SceUID uid, SceKernelSysClock *time, SceKernelVTimerHandler handler, void *common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSetVTimerHandlerWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5b67259973b010ebe909904781ac737d</anchor>
      <arglist>(SceUID uid, SceInt64 time, SceKernelVTimerHandlerWide handler, void *common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelVTimerHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g205d0b6d3dedb9e1614b110d935f95c7</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferVTimerStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g8231da2aad8b4b2d568635207299c0d9</anchor>
      <arglist>(SceUID uid, SceKernelVTimerInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_sceKernelExitThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g55c86963a5efee386a9ca618651cab6c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>enum SceKernelIdListType</type>
      <name>sceKernelGetThreadmanIdType</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5cf2a9384ddd33eb3297eda50e041171</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelRegisterThreadEventHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7b2a7af60bcb78c68bf7d3ebde292a2c</anchor>
      <arglist>(const char *name, SceUID threadID, int mask, SceKernelThreadEventHandler handler, void *common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReleaseThreadEventHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gcc1a3a552e9540c8fbb04ee628208072</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferThreadEventHandlerStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3544261c572652289676a446350234ad</anchor>
      <arglist>(SceUID uid, struct SceKernelThreadEventHandlerInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>PspDebugProfilerRegs *</type>
      <name>sceKernelReferThreadProfiler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g91d45a31f37a49b12b1825191325abe9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>PspDebugProfilerRegs *</type>
      <name>sceKernelReferGlobalProfiler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3d08c312c9be09c66b384ed69d4b5ed7</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspuser.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>pspuser_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <includes id="pspkerneltypes_8h" name="pspkerneltypes.h" local="no" imported="no">pspkerneltypes.h</includes>
    <includes id="pspiofilemgr_8h" name="pspiofilemgr.h" local="no" imported="no">pspiofilemgr.h</includes>
    <includes id="psploadexec_8h" name="psploadexec.h" local="no" imported="no">psploadexec.h</includes>
    <includes id="pspmoduleinfo_8h" name="pspmoduleinfo.h" local="no" imported="no">pspmoduleinfo.h</includes>
    <includes id="pspmodulemgr_8h" name="pspmodulemgr.h" local="no" imported="no">pspmodulemgr.h</includes>
    <includes id="pspsysmem_8h" name="pspsysmem.h" local="no" imported="no">pspsysmem.h</includes>
    <includes id="pspthreadman_8h" name="pspthreadman.h" local="no" imported="no">pspthreadman.h</includes>
    <includes id="psputils_8h" name="psputils.h" local="no" imported="no">psputils.h</includes>
    <includes id="pspkerror_8h" name="pspkerror.h" local="no" imported="no">pspkerror.h</includes>
    <includes id="pspstdio_8h" name="pspstdio.h" local="no" imported="no">pspstdio.h</includes>
    <includes id="pspintrman_8h" name="pspintrman.h" local="no" imported="no">pspintrman.h</includes>
  </compound>
  <compound kind="file">
    <name>psputils.h</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>psputils_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <class kind="struct">_SceKernelUtilsMt19937Context</class>
    <class kind="struct">_SceKernelUtilsMd5Context</class>
    <class kind="struct">_SceKernelUtilsSha1Context</class>
    <member kind="typedef">
      <type>_SceKernelUtilsMt19937Context</type>
      <name>SceKernelUtilsMt19937Context</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>ge6c6c8a949d86bd351d3c99b1d5f2192</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_SceKernelUtilsMd5Context</type>
      <name>SceKernelUtilsMd5Context</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g49280010ed7a876fd38d7e2fd23672ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_SceKernelUtilsSha1Context</type>
      <name>SceKernelUtilsSha1Context</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>gb388d53cc6f55e11644c0bc123f2f4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>sceKernelLibcTime</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g8e8636583212c489e771c350344b88b7</anchor>
      <arglist>(time_t *t)</arglist>
    </member>
    <member kind="function">
      <type>clock_t</type>
      <name>sceKernelLibcClock</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g7dba5448d6fc4a7a3885a896fe19fa39</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelLibcGettimeofday</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g283fe226093da5a60b328bd3e5c29bdb</anchor>
      <arglist>(struct timeval *tp, struct timezone *tzp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheWritebackAll</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g59010a512c23da7cde2686a33836fe1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheWritebackInvalidateAll</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g0ac61726fa3a5ec964b7f84888946cdc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheWritebackRange</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g2a9db4a80a3a500bc6a257caa35b7b36</anchor>
      <arglist>(const void *p, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheWritebackInvalidateRange</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g443582fa64137ea9b6bc164e4a00d13d</anchor>
      <arglist>(const void *p, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheInvalidateRange</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>gfae57e9a0e23197c10caf5294e4661fa</anchor>
      <arglist>(const void *p, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsMt19937Init</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>ge2e711b9152ea93fda05c35749be9cca</anchor>
      <arglist>(SceKernelUtilsMt19937Context *ctx, u32 seed)</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>sceKernelUtilsMt19937UInt</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>ge7c2c682e735f4902d5c145ccb517f23</anchor>
      <arglist>(SceKernelUtilsMt19937Context *ctx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsMd5Digest</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g5a6de8e1dbf85e0f1ee7328ea14e8732</anchor>
      <arglist>(u8 *data, u32 size, u8 *digest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsMd5BlockInit</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g8fcf72d726d2f03878c50203b80a7e63</anchor>
      <arglist>(SceKernelUtilsMd5Context *ctx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsMd5BlockUpdate</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>ge35c1b6c43469150ab131d37f0f541ab</anchor>
      <arglist>(SceKernelUtilsMd5Context *ctx, u8 *data, u32 size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsMd5BlockResult</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g0a9ee2e863b0c05d30f854395c0ef092</anchor>
      <arglist>(SceKernelUtilsMd5Context *ctx, u8 *digest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsSha1Digest</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g547a72b744e2f08ebdf155ca4e890e2b</anchor>
      <arglist>(u8 *data, u32 size, u8 *digest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsSha1BlockInit</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>gb048a9243bcc9ecd5436bf098470ba0a</anchor>
      <arglist>(SceKernelUtilsSha1Context *ctx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsSha1BlockUpdate</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g93fbab8b219eeff7f2ba8f1c26aff613</anchor>
      <arglist>(SceKernelUtilsSha1Context *ctx, u8 *data, u32 size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsSha1BlockResult</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g384e1a2771bf565dcf846657b171d51b</anchor>
      <arglist>(SceKernelUtilsSha1Context *ctx, u8 *digest)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psputility.h</name>
    <path>/tmp/pspdev/pspsdk/src/utility/</path>
    <filename>psputility_8h</filename>
    <includes id="psputility__msgdialog_8h" name="psputility_msgdialog.h" local="no" imported="no">psputility_msgdialog.h</includes>
    <includes id="psputility__netconf_8h" name="psputility_netconf.h" local="no" imported="no">psputility_netconf.h</includes>
    <includes id="psputility__netparam_8h" name="psputility_netparam.h" local="no" imported="no">psputility_netparam.h</includes>
    <includes id="psputility__savedata_8h" name="psputility_savedata.h" local="no" imported="no">psputility_savedata.h</includes>
    <includes id="psputility__sysparam_8h" name="psputility_sysparam.h" local="no" imported="no">psputility_sysparam.h</includes>
    <includes id="psputility__osk_8h" name="psputility_osk.h" local="no" imported="no">psputility_osk.h</includes>
    <includes id="psputility__netmodules_8h" name="psputility_netmodules.h" local="no" imported="no">psputility_netmodules.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PSP_UTILITY_ACCEPT_CIRCLE</name>
      <anchorfile>psputility_8h.html</anchorfile>
      <anchor>ca20253457436312290918bd17985d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_UTILITY_ACCEPT_CROSS</name>
      <anchorfile>psputility_8h.html</anchorfile>
      <anchor>90610fb3bb36a1e6e3ef3b293ccc27e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psputility_msgdialog.h</name>
    <path>/tmp/pspdev/pspsdk/src/utility/</path>
    <filename>psputility__msgdialog_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <class kind="struct">_SceUtilityMsgDialogParams</class>
    <member kind="typedef">
      <type>_SceUtilityMsgDialogParams</type>
      <name>SceUtilityMsgDialogParams</name>
      <anchorfile>psputility__msgdialog_8h.html</anchorfile>
      <anchor>9b7baad11c5d139ad8a3bb49aedbe4e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityMsgDialogInitStart</name>
      <anchorfile>psputility__msgdialog_8h.html</anchorfile>
      <anchor>8833df96db540323cacceef4ffeccd04</anchor>
      <arglist>(SceUtilityMsgDialogParams *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceUtilityMsgDialogShutdownStart</name>
      <anchorfile>psputility__msgdialog_8h.html</anchorfile>
      <anchor>a4e3a104d53842b624261776462d1ac0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityMsgDialogGetStatus</name>
      <anchorfile>psputility__msgdialog_8h.html</anchorfile>
      <anchor>8bd37caa5be50fe9988214bc86097f76</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceUtilityMsgDialogUpdate</name>
      <anchorfile>psputility__msgdialog_8h.html</anchorfile>
      <anchor>b193336b2425a1079dde034b3539d58b</anchor>
      <arglist>(int n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psputility_netconf.h</name>
    <path>/tmp/pspdev/pspsdk/src/utility/</path>
    <filename>psputility__netconf_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <class kind="struct">_pspUtilityNetconfData</class>
    <member kind="typedef">
      <type>_pspUtilityNetconfData</type>
      <name>pspUtilityNetconfData</name>
      <anchorfile>psputility__netconf_8h.html</anchorfile>
      <anchor>8d3134f300e7bc0e515cd552b8ec3401</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>pspUtilityNetconfActions</name>
      <anchor>4d2e734308f86bfd6c9e24495f186516</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_NETCONF_ACTION_CONNECTAP</name>
      <anchor>4d2e734308f86bfd6c9e24495f1865168a9e098a16e905e5830163ef3d80d5a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_NETCONF_ACTION_DISPLAYSTATUS</name>
      <anchor>4d2e734308f86bfd6c9e24495f186516832ca366497fee9a98cf0164822129c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_NETCONF_ACTION_CONNECT_ADHOC</name>
      <anchor>4d2e734308f86bfd6c9e24495f186516e9fc381129813bca89c241d3a5fbb4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>pspUtilityNetconfStatus</name>
      <anchor>96a9f1ffe0f986fdffb4e2e643ab3e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_NETCONF_STATUS_INIT</name>
      <anchor>96a9f1ffe0f986fdffb4e2e643ab3e40f52e10d5587a7bb55b6e1ec01226c8f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_NETCONF_STATUS_RUNNING</name>
      <anchor>96a9f1ffe0f986fdffb4e2e643ab3e400ffa60d1d171621c7e6d8308c4b0e99c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_NETCONF_STATUS_FINISHED</name>
      <anchor>96a9f1ffe0f986fdffb4e2e643ab3e40c0b49189f7b4ef7fad02149f08873c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityNetconfInitStart</name>
      <anchorfile>psputility__netconf_8h.html</anchorfile>
      <anchor>4b527588b27ce2a9d9ae06bb3cb457fb</anchor>
      <arglist>(pspUtilityNetconfData *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityNetconfShutdownStart</name>
      <anchorfile>psputility__netconf_8h.html</anchorfile>
      <anchor>a39c6a42d551b8849c7197e1f1a118cb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityNetconfUpdate</name>
      <anchorfile>psputility__netconf_8h.html</anchorfile>
      <anchor>3f4efd3e77d3f23f7a681a8dda2d2973</anchor>
      <arglist>(int unknown)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityNetconfGetStatus</name>
      <anchorfile>psputility__netconf_8h.html</anchorfile>
      <anchor>45a5ea0bef1228929e24b94aadc6d89d</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psputility_netmodules.h</name>
    <path>/tmp/pspdev/pspsdk/src/utility/</path>
    <filename>psputility__netmodules_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NET_MODULE_COMMON</name>
      <anchorfile>psputility__netmodules_8h.html</anchorfile>
      <anchor>258e4c47806962e7a1416876e7305854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NET_MODULE_ADHOC</name>
      <anchorfile>psputility__netmodules_8h.html</anchorfile>
      <anchor>f18327624db882f5c53eb007c0424eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NET_MODULE_INET</name>
      <anchorfile>psputility__netmodules_8h.html</anchorfile>
      <anchor>99248553ed6d84ee3347e3a24a617ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NET_MODULE_PARSEURI</name>
      <anchorfile>psputility__netmodules_8h.html</anchorfile>
      <anchor>361d9002556e4f5033b421b49fa152f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NET_MODULE_PARSEHTTP</name>
      <anchorfile>psputility__netmodules_8h.html</anchorfile>
      <anchor>fb0ba4edacc13c55aae19bf333d77e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NET_MODULE_HTTP</name>
      <anchorfile>psputility__netmodules_8h.html</anchorfile>
      <anchor>661cd6cee5f6cfe27ae08535310593e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NET_MODULE_SSL</name>
      <anchorfile>psputility__netmodules_8h.html</anchorfile>
      <anchor>cea52f7941e4fe1fff8dc916d2d35473</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityLoadNetModule</name>
      <anchorfile>psputility__netmodules_8h.html</anchorfile>
      <anchor>822b0c08dd57e859d47ea203d8cf6b55</anchor>
      <arglist>(int module)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityUnloadNetModule</name>
      <anchorfile>psputility__netmodules_8h.html</anchorfile>
      <anchor>3b10d6265d4d9f6d3e814e0c6df675fc</anchor>
      <arglist>(int module)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psputility_netparam.h</name>
    <path>/tmp/pspdev/pspsdk/src/utility/</path>
    <filename>psputility__netparam_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <class kind="union">netData</class>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_NAME</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>e7922b791281a1ec8d19f875acfaa990</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_SSID</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>d242c1a86c0494fa278365a9b01e7346</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_SECURE</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>30ebbf9850cd9d2acdb8c583874dcb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_WEPKEY</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>98007b31dc751170889e2fb49d14c43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_IS_STATIC_IP</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>3b43603e9e00fe8bc30e4ae1353bb4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_IP</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>bbac36839f526762d3f53f83c857e1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_NETMASK</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>32bcd2e36f548c0357e4ce54dbddd660</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_ROUTE</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>19e2e6faca1b9074704411579d23d79e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_MANUAL_DNS</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>4a9c8e8e1165592e93294b1c778d33ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_PRIMARYDNS</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>c7f61aafae56336695540c4476256422</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_SECONDARYDNS</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>59f8c197ea538130bc5c48f4e69383f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_PROXY_USER</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>c187f25e0f285bdd102434eee9e690d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_PROXY_PASS</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>b1f963e6d868cf9ce4243e4b724c3567</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_USE_PROXY</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>b9cd59f5c671e885d0d1bfe9aaeddf72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_PROXY_SERVER</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>718796c1d4ad56b39917e0f15a57a89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_PROXY_PORT</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>bca641964e80062e63d9ace4199a28cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_UNKNOWN1</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>56617ac58fe947432e5004c216d357c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_UNKNOWN2</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>48330a3ae4aab999f19c0e140a398ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_ERROR_BAD_NETCONF</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>769a327e001fe658c059eece38cd2017</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_NETPARAM_ERROR_BAD_PARAM</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>cffbf9c4dbd195fc5a1b91e811b3ca58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityCheckNetParam</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>87ae63d90c52d81ff31d85fd4ef58a3c</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityGetNetParam</name>
      <anchorfile>psputility__netparam_8h.html</anchorfile>
      <anchor>bce0c70e249435d03e4676fd4ab079ab</anchor>
      <arglist>(int conf, int param, netData *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psputility_osk.h</name>
    <path>/tmp/pspdev/pspsdk/src/utility/</path>
    <filename>psputility__osk_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <class kind="struct">_SceUtilityOskData</class>
    <class kind="struct">_SceUtilityOskParams</class>
    <member kind="typedef">
      <type>_SceUtilityOskData</type>
      <name>SceUtilityOskData</name>
      <anchorfile>psputility__osk_8h.html</anchorfile>
      <anchor>bbceea94478a4a857ef8ba14b78cdbbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_SceUtilityOskParams</type>
      <name>SceUtilityOskParams</name>
      <anchorfile>psputility__osk_8h.html</anchorfile>
      <anchor>ab7b7898d918ae399fed11a26bcf7614</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SceOskState</name>
      <anchor>60099d81431417336f671653bcc71237</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_OSK_NONE</name>
      <anchor>60099d81431417336f671653bcc7123713b15c09d33b25604ce8a20ab7c8b0ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_OSK_INIT</name>
      <anchor>60099d81431417336f671653bcc7123757470ab60953fa1bd45a471f53b6bac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_OSK_VISIBLE</name>
      <anchor>60099d81431417336f671653bcc71237aa2e1c2a698cf49307698b1508424928</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_OSK_QUIT</name>
      <anchor>60099d81431417336f671653bcc7123763e1d7b6b5d1005bd6fa36dc21cc4365</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_OSK_FINISHED</name>
      <anchor>60099d81431417336f671653bcc71237afe0f8a084e6b4999703fc25dff22f58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityOskInitStart</name>
      <anchorfile>psputility__osk_8h.html</anchorfile>
      <anchor>583caf49162587d195146dbe60142b0f</anchor>
      <arglist>(SceUtilityOskParams *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityOskShutdownStart</name>
      <anchorfile>psputility__osk_8h.html</anchorfile>
      <anchor>24fb6fb26a86772f16f2b196b13e8fac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityOskUpdate</name>
      <anchorfile>psputility__osk_8h.html</anchorfile>
      <anchor>27b8aa2aa58bb018d034ff47304259d0</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityOskGetStatus</name>
      <anchorfile>psputility__osk_8h.html</anchorfile>
      <anchor>0e7bc1af8ebfb1e3e7cf3ee4c27567d6</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psputility_savedata.h</name>
    <path>/tmp/pspdev/pspsdk/src/utility/</path>
    <filename>psputility__savedata_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <class kind="struct">PspUtilitySavedataSFOParam</class>
    <class kind="struct">PspUtilitySavedataFileData</class>
    <class kind="struct">SceUtilitySavedataParam</class>
    <member kind="function">
      <type>int</type>
      <name>sceUtilitySavedataInitStart</name>
      <anchorfile>psputility__savedata_8h.html</anchorfile>
      <anchor>6c22ee23f729bea1e491365ab5a0df67</anchor>
      <arglist>(SceUtilitySavedataParam *params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilitySavedataGetStatus</name>
      <anchorfile>psputility__savedata_8h.html</anchorfile>
      <anchor>5718ab7cfdad144bf3d9b95e7b1981f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilitySavedataShutdownStart</name>
      <anchorfile>psputility__savedata_8h.html</anchorfile>
      <anchor>fd0c27cadf5c34ba43dc902959651484</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceUtilitySavedataUpdate</name>
      <anchorfile>psputility__savedata_8h.html</anchorfile>
      <anchor>0e0e4456819cfd1a093cdc07fe7a9749</anchor>
      <arglist>(int unknown)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psputility_sysparam.h</name>
    <path>/tmp/pspdev/pspsdk/src/utility/</path>
    <filename>psputility__sysparam_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ID_STRING_NICKNAME</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>40ad68e86924237c277287c8c2b7e5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ID_INT_ADHOC_CHANNEL</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>5f44dad40907ef0781f3faaf61929d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ID_INT_WLAN_POWERSAVE</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>6bfb7f7800d3e3a02a2a9e594d9c5567</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ID_INT_DATE_FORMAT</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>7b1999807c8ab0101932e4e11da28c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ID_INT_TIME_FORMAT</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>1ca5f732dc2b3847d86bd20dec6bb5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ID_INT_TIMEZONE</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>9be088d4611433bb2bc06abfd021c32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ID_INT_DAYLIGHTSAVINGS</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>41208cbf5b4e262c9f23664d70049bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ID_INT_LANGUAGE</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>56e68bd4ec4fd7f552d8f7d27bbfbcc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ID_INT_UNKNOWN</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>b588fd5a14adc025f065e09325ffe729</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_RETVAL_OK</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>195579bd7dc167c41c153726079be439</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_RETVAL_FAIL</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>5f51ee4efe1a8eaa64fc69fd961671fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ADHOC_CHANNEL_AUTOMATIC</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>df1883b3e9da77d843830fda81674511</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ADHOC_CHANNEL_1</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>9cfec380ccf36e98aa919c9b7b7a535c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ADHOC_CHANNEL_6</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>1c5d2a7bdcccf2d9b1777b6c2c5f42b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_ADHOC_CHANNEL_11</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>658a197b3b855b2df7d3a0b35f3182e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_WLAN_POWERSAVE_OFF</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>201c6baddd16e67bf7ea4f628c8b9644</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_WLAN_POWERSAVE_ON</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>075a0691df4188f35bdfaf1137a2da31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_DATE_FORMAT_YYYYMMDD</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>4b3b22b8c6ef1c6d87198f36e30b7c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_DATE_FORMAT_MMDDYYYY</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>ac1012c86af75047dc3fa0c93e5a9649</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_DATE_FORMAT_DDMMYYYY</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>e1000ff25c87962700e5d4a51ecf85c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_TIME_FORMAT_24HR</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>5e121b120481058a030dcbc20b21d08c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_TIME_FORMAT_12HR</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>a1754a0ad31cca569ca5b9f675950723</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_DAYLIGHTSAVINGS_STD</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>4a013743b06e807315f7088fdd332935</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_DAYLIGHTSAVINGS_SAVING</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>890915ddf947717c89216cdc9c5fff61</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_LANGUAGE_JAPANESE</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>7f6d499300b69599614597c049eb0609</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_LANGUAGE_ENGLISH</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>2b4bbf213f21fd52a15846edd1d4d006</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_LANGUAGE_FRENCH</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>6695dc123a8be3adbc9678a63aa4cf1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_LANGUAGE_SPANISH</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>8d1f7dd83107f9e912b000d38e7dbafa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_LANGUAGE_GERMAN</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>7e7e64d7342604c9116cfadcfdb189ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_LANGUAGE_ITALIAN</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>c04ba879bd02856fb09ef0735c437303</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_LANGUAGE_DUTCH</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>8694c9a933be05a43ee32457db6b01a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_LANGUAGE_PORTUGUESE</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>f404ae2950aecd952a1351e2983e2ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEMPARAM_LANGUAGE_KOREAN</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>388631acee21eacc61b01ee58b5d9071</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilitySetSystemParamInt</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>dde7eec473bf8121228a7b1df5431f9f</anchor>
      <arglist>(int id, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilitySetSystemParamString</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>c7f3f464fa0791acd80f049b122c332c</anchor>
      <arglist>(int id, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityGetSystemParamInt</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>82204aae7cf95481b6224298984b0c41</anchor>
      <arglist>(int id, int *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUtilityGetSystemParamString</name>
      <anchorfile>psputility__sysparam_8h.html</anchorfile>
      <anchor>bc70160ca9631b7773eb46bc478054c1</anchor>
      <arglist>(int id, char *str, int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspvfpu.c</name>
    <path>/tmp/pspdev/pspsdk/src/vfpu/</path>
    <filename>pspvfpu_8c</filename>
    <includes id="malloc_8h" name="malloc.h" local="no" imported="no">malloc.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="pspthreadman_8h" name="pspthreadman.h" local="yes" imported="no">pspthreadman.h</includes>
    <includes id="pspvfpu_8h" name="pspvfpu.h" local="yes" imported="no">pspvfpu.h</includes>
    <class kind="struct">pspvfpu_context</class>
    <member kind="define">
      <type>#define</type>
      <name>NMAT</name>
      <anchorfile>pspvfpu_8c.html</anchorfile>
      <anchor>81eeb3ca3337d4e47ad8fcd26536d857</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SV</name>
      <anchorfile>pspvfpu_8c.html</anchorfile>
      <anchor>e18fd4698199e1ab4a6200fe8b684510</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LV</name>
      <anchorfile>pspvfpu_8c.html</anchorfile>
      <anchor>f8ea4f9d8f51cab47a2c77fecf24c11a</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspvfpu_use_matrices</name>
      <anchorfile>pspvfpu_8c.html</anchorfile>
      <anchor>660efc6315092c80b449446cd3eed6a8</anchor>
      <arglist>(struct pspvfpu_context *c, vfpumatrixset_t keepset, vfpumatrixset_t tempset)</arglist>
    </member>
    <member kind="function">
      <type>pspvfpu_context *</type>
      <name>pspvfpu_initcontext</name>
      <anchorfile>pspvfpu_8c.html</anchorfile>
      <anchor>23cae8303bbac098947100b9a27f5181</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspvfpu_deletecontext</name>
      <anchorfile>pspvfpu_8c.html</anchorfile>
      <anchor>53928edd03902ad8c1a36bf2206f6e41</anchor>
      <arglist>(struct pspvfpu_context *c)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspvfpu.h</name>
    <path>/tmp/pspdev/pspsdk/src/vfpu/</path>
    <filename>pspvfpu_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>VMAT0</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>a29a80e018e27d8772ec981862a8071e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VMAT1</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>4f4f2745b91f85a1dadaaeaf282195ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VMAT2</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>be1288718b99bada481363df8d61431d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VMAT3</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>b1d8d40deb9cb2deb1e121dee671eb15</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VMAT4</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>90b9d0fb56ff0e200a811ac379022a18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VMAT5</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>2abadbbfcb1a6fedb3bf7ebf2dc21206</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VMAT6</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>69da66a4f30193589548926bb0830092</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VMAT7</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>0bdf55597a362191264c3227278dac41</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VFPU_ALIGNMENT</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>c70be9fa290482e53f0bccda7a6378e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>vfpumatrixset_t</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>eba2787b48612341054003bf6574dc46</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>pspvfpu_context *</type>
      <name>pspvfpu_initcontext</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>23cae8303bbac098947100b9a27f5181</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspvfpu_deletecontext</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>4a90c98843d28c42e6322f90f36552c8</anchor>
      <arglist>(struct pspvfpu_context *context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspvfpu_use_matrices</name>
      <anchorfile>pspvfpu_8h.html</anchorfile>
      <anchor>1ae1166ad460efb7e2e7f1b37c885bc2</anchor>
      <arglist>(struct pspvfpu_context *context, vfpumatrixset_t keepset, vfpumatrixset_t tempset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspchnnlsv.h</name>
    <path>/tmp/pspdev/pspsdk/src/vsh/</path>
    <filename>pspchnnlsv_8h</filename>
    <includes id="psptypes_8h" name="psptypes.h" local="no" imported="no">psptypes.h</includes>
    <class kind="struct">_pspChnnlsvContext1</class>
    <class kind="struct">_pspChnnlsvContext2</class>
    <member kind="typedef">
      <type>_pspChnnlsvContext1</type>
      <name>pspChnnlsvContext1</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>g45253017bd3f06e9907dba80bb9ed589</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_pspChnnlsvContext2</type>
      <name>pspChnnlsvContext2</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>ge0cebb1a074b51345637b62c4616f05c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_E7833020</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>gbeb942af1c8739b21fbee96a01a02e4c</anchor>
      <arglist>(pspChnnlsvContext1 *ctx, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_F21A1FCA</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>gd08f8774a3ff539d37347dc0f5d86faa</anchor>
      <arglist>(pspChnnlsvContext1 *ctx, unsigned char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_C4C494F8</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>g13d54931ff6367951ce3582ea58e27d6</anchor>
      <arglist>(pspChnnlsvContext1 *ctx, unsigned char *hash, unsigned char *cryptkey)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_ABFDFC8B</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>g26c7bcab00b4cbb7da86346c9e11ce1f</anchor>
      <arglist>(pspChnnlsvContext2 *ctx, int mode1, int mode2, unsigned char *hashkey, unsigned char *cipherkey)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_850A7FA1</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>g052c7b5884e3dfe89ba0895636b89851</anchor>
      <arglist>(pspChnnlsvContext2 *ctx, unsigned char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_21BE78B4</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>g842d9c27e3be2918092462803668e758</anchor>
      <arglist>(pspChnnlsvContext2 *ctx)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pspwlan.h</name>
    <path>/tmp/pspdev/pspsdk/src/wlan/</path>
    <filename>pspwlan_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>sceWlanDevIsPowerOn</name>
      <anchorfile>pspwlan_8h.html</anchorfile>
      <anchor>72c1ca23ad2afb446e734e1eaf355a1b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceWlanGetSwitchState</name>
      <anchorfile>pspwlan_8h.html</anchorfile>
      <anchor>57a615dd96dec7447e16878c839a5d5f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceWlanGetEtherAddr</name>
      <anchorfile>pspwlan_8h.html</anchorfile>
      <anchor>3ca533b4618db4e5c199b3bfb71a6cbd</anchor>
      <arglist>(char *etherAddr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceWlanDevAttach</name>
      <anchorfile>pspwlan_8h.html</anchorfile>
      <anchor>86a9b2e58ac22d2809b475616aad5785</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceWlanDevDetach</name>
      <anchorfile>pspwlan_8h.html</anchorfile>
      <anchor>fe889762bf0536428a1e3770dc3702d8</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>bin2c.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>bin2c_8c</filename>
    <includes id="unistd_8h" name="unistd.h" local="no" imported="no">unistd.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>bin2c_8c.html</anchorfile>
      <anchor>0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>buffer</name>
      <anchorfile>bin2c_8c.html</anchorfile>
      <anchor>70e7ad2e1a45c8db5fba9ad4778bd400</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>bin2o.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>bin2o_8c</filename>
    <includes id="unistd_8h" name="unistd.h" local="no" imported="no">unistd.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <class kind="struct">elf_section_t</class>
    <class kind="struct">elf_symbol_t</class>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>u8</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>ed742c436da53c1080638ce6ef7d13de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>u16</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>9e6c91d77e24643b888dbd1a1a590054</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>u32</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>10e94b422ef0c20dcdec20d31a1f5049</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>LE32</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>dd8d3a4f500a78b2eaabd65fe416caaf</anchor>
      <arglist>(u32 b)</arglist>
    </member>
    <member kind="function">
      <type>u16</type>
      <name>LE16</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>68acf34fff2674bb79d1ec656ae0c813</anchor>
      <arglist>(u16 b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_elf</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>8b08fa9ed18f504adda1dea35d582f10</anchor>
      <arglist>(FILE *dest, const unsigned char *source, u32 size, const char *label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>usage</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>2ef30c42cbc289d899a8be5d2d8f77d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>alignment</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>81b537b1af8936fc6ca2eda76d70430f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>have_size</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>642fd1e033e352a3b4266a31288a6cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>have_irx</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>d82bfdc0c437ea2f5f6a247f2cc785e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>elf_header</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>0f6eb2548418b30cb17bd46919692b27</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>shstrtab</name>
      <anchorfile>bin2o_8c.html</anchorfile>
      <anchor>9afcbbe471d79395b2252892248761b5</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>bin2s.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>bin2s_8c</filename>
    <includes id="unistd_8h" name="unistd.h" local="no" imported="no">unistd.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>bin2s_8c.html</anchorfile>
      <anchor>0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>buffer</name>
      <anchorfile>bin2s_8c.html</anchorfile>
      <anchor>70e7ad2e1a45c8db5fba9ad4778bd400</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>elftypes.h</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>elftypes_8h</filename>
    <includes id="types_8h" name="types.h" local="yes" imported="no">types.h</includes>
    <class kind="struct">ElfSection</class>
    <class kind="struct">ElfProgram</class>
    <class kind="struct">ElfHeader</class>
    <class kind="struct">ElfReloc</class>
    <class kind="struct">__attribute__</class>
    <class kind="struct">__attribute__</class>
    <class kind="struct">Elf32_Phdr</class>
    <class kind="struct">Elf32_Rel</class>
    <class kind="struct">__attribute__</class>
    <member kind="define">
      <type>#define</type>
      <name>ELF_MACHINE_MIPS</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>d9ac9567738ce1b1627c6e86963f720d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF_SH_STRTAB</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>9ecb0a934019acabbb170cdb83e71958</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF_SECT_MAX_NAME</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>8f2687d0162f0f2bdc3aaac3e0a3d885</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF_MAGIC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>bb1c2e5626667aacc7b3efd269a6c0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF_EXEC_TYPE</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>cfb03cab06b6146461559bc646c332d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF_PRX_TYPE</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>dbc95426a8e812c4b756d1c6ab800834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_NULL</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>1566f4c14cff9f4b539b00af54d62dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_PROGBITS</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>4bff22edbae51353ba9b3572d424b91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_SYMTAB</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>4add7784e43ec3d3b9c09d3ffc476a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_STRTAB</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>f4b916dc4ca5016fb5c374068002a532</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_RELA</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>bf2fc2781a2869352c2ffa0555f34118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_HASH</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>446fd322326bea21373453c80c3f7925</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_DYNAMIC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>3a9278d12cf2c9e7eaca87688d0a6e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_NOTE</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>65506a79f0e972c851851af7b1008d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_NOBITS</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>820ff00317949be2ea1fd634a17dc13e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_REL</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>2aea2ed985f81f13a157fe2da02a621a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_SHLIB</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>ce0ce008ff50406077a9450174fe55a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_DYNSYM</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>a9949aedf49107f6a07e618d5d791d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_LOPROC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>5180feedae655c854f46e4f7f8b0d75a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_HIPROC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>9be8a10dd9e8859bec0b640038890d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_LOUSER</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>65191e50120fb55adb41cce8ee010915</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_HIUSER</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>e46f05b4c63b841f74e2d349d777a688</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHT_PRXRELOC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>614b985dcf2bb5907a03d15a0374d556</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_NONE</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>92cb501f4c04605d295575d8d839fb4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_16</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>fa8cfd579492b34304c9a44d2f2ac59c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_32</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>82b1edcdac310704b643a413b98765fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_REL32</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>3f4723de8983a418e9f8e920f8e7f331</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_26</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>4b4535627d034fa18a4fb16a94339a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_HI16</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>b2b28557420b61a9b2426ba0f3da2242</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_LO16</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>e48f227b7795b7f339f6a0328633e84e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_GPREL16</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>4da7ab1035569f224fafbc7df547987a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_LITERAL</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>41deedc18c240f1443052301c853c552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_GOT16</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>da5f69fe0b77b61f6702b02c68e2aba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_PC16</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>6b0e7c0b2a8a65c6888af51f0a9e0b39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_CALL16</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>9aa637d76c26192590f3ce823069bef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MIPS_GPREL32</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>55ab8e659a043c6cef30f6c41fed347a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHF_WRITE</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>025c79223b0fee4676337d660f76b59b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHF_ALLOC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>38476fe4ed88ac83ba86a4e103199a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHF_EXECINSTR</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>b3780594e35fbbc6e5028bcb921d0a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PT_NULL</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>854729c1dc4623abeaeb765a1b745012</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PT_LOAD</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>84d7768fd6c6ece599d297090900cf92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PT_DYNAMIC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>2121a2f01c51e8462bfd4d47725649d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PT_INTERP</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>bcd3aa15bc567949c1ab6b1abc137710</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PT_NOTE</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>72baf87d62607c7fdccd3b8010d4ce30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PT_SHLIB</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>bff9f38fd394e09e60f5640550a23e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PT_PHDR</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>58ff00be749ca4000074f9b9066a1056</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PT_LOPROC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>caa6971207ea507ed02f22ba574b8534</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PT_HIPROC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>74427c5909fdced36b41134c11650249</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF32_R_SYM</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>8d1ac0f35a8999a4a8a3350ca95ab54b</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF32_R_TYPE</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>a4ffd69f2c1c03229686bfa3a898db00</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STB_LOCAL</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>72c40de459931e6f1d041201dc7398b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STB_GLOBAL</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>8091960a6799bf71a7494551dac1a2e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STB_WEAK</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>d4247ded90f9371e3c4d2f7dda260c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STB_LOPROC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>4f4d0360fcb960e31e119973a472010e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STB_HIPROC</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>5fa61266452365ab0e2d2ad32b87043e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF32_ST_BIND</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>3b84f3e0e035d1264115f5c76227c5eb</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF32_ST_TYPE</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>54dd2783f11c5f926d8db9250e1baa35</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELF32_ST_INFO</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>ceda3fb943b9f15cc44fe24651c25f29</anchor>
      <arglist>(b, t)</arglist>
    </member>
    <member kind="typedef">
      <type>u32</type>
      <name>Elf32_Addr</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>eafb57189333c55fc04663de069a6ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>u16</type>
      <name>Elf32_Half</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>abd1afed30230462c0c8bfce21849d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>u32</type>
      <name>Elf32_Off</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>75ac6d12b6cc28ea46d202dd5cd4b695</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>s32</type>
      <name>Elf32_Sword</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>ebeeccd55293b19356ac952df6253e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>u32</type>
      <name>Elf32_Word</name>
      <anchorfile>elftypes_8h.html</anchorfile>
      <anchor>a363a7fa5d0f9695fe3fec8af43c6748</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>getopt.h</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>getopt_8h</filename>
    <includes id="unistd_8h" name="unistd.h" local="no" imported="no">unistd.h</includes>
    <class kind="struct">option</class>
    <member kind="define">
      <type>#define</type>
      <name>no_argument</name>
      <anchorfile>getopt_8h.html</anchorfile>
      <anchor>3bc1d5f667b5b4ca4b4abb685dc874ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>required_argument</name>
      <anchorfile>getopt_8h.html</anchorfile>
      <anchor>6ece8d8dfa8378778f7290fdaba5b8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>optional_argument</name>
      <anchorfile>getopt_8h.html</anchorfile>
      <anchor>cca06c0a947656bd8b395bf1084ffb72</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getopt_long</name>
      <anchorfile>getopt_8h.html</anchorfile>
      <anchor>5f683e7897fb551b02ba936456387cc3</anchor>
      <arglist>(int, char *const *, const char *, const struct option *, int *)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>optarg</name>
      <anchorfile>getopt_8h.html</anchorfile>
      <anchor>db50a0eab9fed92fc3bfc7dfa4f2c410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>optind</name>
      <anchorfile>getopt_8h.html</anchorfile>
      <anchor>d5e1c16213bbee2d5e8cc363309f418c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>opterr</name>
      <anchorfile>getopt_8h.html</anchorfile>
      <anchor>e30f05ee1e2e5652f174a35c7875d25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>optopt</name>
      <anchorfile>getopt_8h.html</anchorfile>
      <anchor>475b8db98445da73e5f62a1ef6324b95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>getopt_long.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>getopt__long_8c</filename>
    <includes id="assert_8h" name="assert.h" local="no" imported="no">assert.h</includes>
    <includes id="getopt_8h" name="getopt.h" local="no" imported="no">getopt.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IGNORE_FIRST</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>2e63816577790cc7f29083aacb6658d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINT_ERROR</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>a0004d1735f5c5a47cd385525c5bdbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_POSIXLY_CORRECT</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>0436fb91a1618520c95c9878f9c35c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PERMUTE</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>fa24fc8ec6768f343ef635a259e37c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IN_ORDER</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>f8c35071771790bdc9182197e08e70d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADCH</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>1c8c2c090f7416155b04f9d6eb50faa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BADARG</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>a66fa298ed3187720cb609e15cd7d22c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INORDER</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>b043c5480fc290137f7fe7fb33ce6141</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMSG</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>c393ec775622430dfe25cd2ac9dec9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getopt_long</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>670b3d6580b88001f22388938a15504d</anchor>
      <arglist>(int nargc, char *const *nargv, const char *options, const struct option *long_options, int *idx)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>opterr</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>e30f05ee1e2e5652f174a35c7875d25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>optind</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>d5e1c16213bbee2d5e8cc363309f418c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>optopt</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>475b8db98445da73e5f62a1ef6324b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>optreset</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>62231492adf03e02ff80d0bfb3b3ebd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>optarg</name>
      <anchorfile>getopt__long_8c.html</anchorfile>
      <anchor>db50a0eab9fed92fc3bfc7dfa4f2c410</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mksfo.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>mksfo_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SIZE_POS</name>
      <anchorfile>mksfo_8c.html</anchorfile>
      <anchor>ae7b0c1b96949e1f56254db28492e375</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TITLE_POS</name>
      <anchorfile>mksfo_8c.html</anchorfile>
      <anchor>c8e518be0e1347be4261678e59887f2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TITLE_SIZE</name>
      <anchorfile>mksfo_8c.html</anchorfile>
      <anchor>35dab5d24d81cf68d06d7b61c5a081ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>mksfo_8c.html</anchorfile>
      <anchor>3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>g_defaultSfo</name>
      <anchorfile>mksfo_8c.html</anchorfile>
      <anchor>85c6cee502c27fa00d82b4e0ac24fc76</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pack-pbp.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>pack-pbp_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>pack-pbp_8c.html</anchorfile>
      <anchor>0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>@0</type>
      <name>header</name>
      <anchorfile>pack-pbp_8c.html</anchorfile>
      <anchor>365b65d7fadcd633987246933e22f3bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>signature</name>
      <anchorfile>struct@0.html</anchorfile>
      <anchor>68ae532ded9eed350f6fdf2b66f94b53</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>version</name>
      <anchorfile>struct@0.html</anchorfile>
      <anchor>eefed0dcf6d78aa1dafe54c7a9a5b0d5</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>offset</name>
      <anchorfile>struct@0.html</anchorfile>
      <anchor>343fba9711353cbf77edd236c7f0be03</anchor>
      <arglist>[8]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prxtypes.h</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>prxtypes_8h</filename>
    <includes id="types_8h" name="types.h" local="yes" imported="no">types.h</includes>
    <class kind="struct">PspModuleExport</class>
    <class kind="struct">PspModuleImport</class>
    <class kind="struct">PspModuleInfo</class>
    <class kind="struct">PspEntry</class>
    <class kind="struct">PspLibImport</class>
    <class kind="struct">PspLibExport</class>
    <class kind="struct">PspModule</class>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MODULE_MAX_NAME</name>
      <anchorfile>prxtypes_8h.html</anchorfile>
      <anchor>50ecc30fc5430bb1bb6981991791f3d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_LIB_MAX_NAME</name>
      <anchorfile>prxtypes_8h.html</anchorfile>
      <anchor>f79a695ff4684680c6db6c458488f50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_ENTRY_MAX_NAME</name>
      <anchorfile>prxtypes_8h.html</anchorfile>
      <anchor>6d8b2750600a18ea582e0c6a9c2b81da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MAX_V_ENTRIES</name>
      <anchorfile>prxtypes_8h.html</anchorfile>
      <anchor>ceb900eecfbbcf9bcf5a8c0dbd675a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MAX_F_ENTRIES</name>
      <anchorfile>prxtypes_8h.html</anchorfile>
      <anchor>af2b6032cba31094927804076d5d7564</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MODULE_INFO_NAME</name>
      <anchorfile>prxtypes_8h.html</anchorfile>
      <anchor>5da59c79702b2bef24f7154927402e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MODULE_REMOVE_REL</name>
      <anchorfile>prxtypes_8h.html</anchorfile>
      <anchor>de2bdde234d63e71a6916e46364e8ab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_SYSTEM_EXPORT</name>
      <anchorfile>prxtypes_8h.html</anchorfile>
      <anchor>c4659b2698fac43c3361a3965d93bd32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspEntryType</name>
      <anchor>0eb6e64addf945c6b22cab855b5e5c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_ENTRY_FUNC</name>
      <anchor>0eb6e64addf945c6b22cab855b5e5c884eea209b5e5d73d3e86c0e87730f64ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_ENTRY_VAR</name>
      <anchor>0eb6e64addf945c6b22cab855b5e5c881ef9de6b71a89a87fe9e6ebac453429f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspModuleExport</type>
      <name>packed</name>
      <anchorfile>prxtypes_8h.html</anchorfile>
      <anchor>22a1fdb1f113765117e214ec2108bd42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psp-build-exports.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>psp-build-exports_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="getopt_8h" name="getopt.h" local="no" imported="no">getopt.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="unistd_8h" name="unistd.h" local="no" imported="no">unistd.h</includes>
    <includes id="assert_8h" name="assert.h" local="no" imported="no">assert.h</includes>
    <includes id="ctype_8h" name="ctype.h" local="no" imported="no">ctype.h</includes>
    <includes id="sha1_8h" name="sha1.h" local="yes" imported="no">sha1.h</includes>
    <class kind="struct">psp_export</class>
    <class kind="struct">psp_alias</class>
    <class kind="struct">psp_lib</class>
    <class kind="struct">export_cmd</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LIB_NAME</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>fabcb24934009219261ba7bb166bb7c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LIB_FUNCS</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>24ddd45b4e4edb43e85e229f1d4f2dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LIB_VARS</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>69edafb2986deb0d61967f89557b69a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LIB_ENTRY_NAME</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>62234a50e69dcfd876d86a6e872b2f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_ERROR</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>7c213cc89d01ec9cdbaa3356698a86ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LINE</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>842ed03f27719bc87666bfd1f75415b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYSTEM_LIB_NAME</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>7e274d2b6e1237ccc19b9b66c826d713</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspConfigMode</name>
      <anchor>a702d4fc2aad6085b46612e946932153</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_BUILD_UNKNOWN</name>
      <anchor>a702d4fc2aad6085b46612e946932153c9a5e7cc2e165bb06eff6693d70faf0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_BUILD_EXPORTS</name>
      <anchor>a702d4fc2aad6085b46612e94693215343db8b6dea4bcac14b3138384791d1e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_BUILD_STUBS</name>
      <anchor>a702d4fc2aad6085b46612e94693215338e8f232203bc25dd99acb6fc258f8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_BUILD_STUBS_NEW</name>
      <anchor>a702d4fc2aad6085b46612e9469321531f6759ffbb76c7ace21d2c4cdd0e09eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_export_chain</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>df2a97ec807dfd3a4b57647859fd1843</anchor>
      <arglist>(struct psp_export *pHead)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_alias_chain</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>bfdf4f7d2232a8db8481a062045aa745</anchor>
      <arglist>(struct psp_alias *pHead)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_lib_data</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>ae858e3342f4f0cc635db745578df597</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>find_alias</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>32bd24c5ffddd8910176ffbc2db76266</anchor>
      <arglist>(struct psp_alias *pHead, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_args</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>56d5a76295d6c8eae1f9c3059d40b19a</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_help</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>402ea961bfc2ffeee61e3a7c330b1559</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strip_whitespace</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>396b542ac448d8306dc1e6f111d86026</anchor>
      <arglist>(char *dest, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse_string</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>83ed02a7f3c59a3a526915af6896672f</anchor>
      <arglist>(char *line, char **params, int max_params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build_exports_output_extern</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>61caeedd8e42e664bb94ee6ca2974832</anchor>
      <arglist>(struct psp_export *pHead)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build_exports_output_nids</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>0bae4de50f554bb53a3fa67696250d55</anchor>
      <arglist>(struct psp_export *pHead)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build_exports_output_names</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>c54fd7582e90d9c0eb0a9ec01d613feb</anchor>
      <arglist>(struct psp_export *pHead)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build_exports</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>70918c1d4212826e2918e35622c500a0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build_stubs_output_lib</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>e2123862485d4e93048287c1b82ac327</anchor>
      <arglist>(struct psp_lib *pLib)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build_stubs_output_lib_new</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>d9d312812f410b081845eb321f8d61c6</anchor>
      <arglist>(struct psp_lib *pLib)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>build_stubs</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>aa1f3165a7a1cf5a1e5c27532050923b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>validate_number</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>758fbf6067a4bd89d4a5a4c641791d06</anchor>
      <arglist>(const char *str, unsigned int *num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psp_begin_exports</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>c12f0f94e74f0e22c7a4921b945f4e3b</anchor>
      <arglist>(char **params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psp_end_exports</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>e9180114cfe85b804972ad3e4f503f10</anchor>
      <arglist>(char **params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psp_export_start</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>005c4116c86bae710384de7d46f03b0d</anchor>
      <arglist>(char **params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psp_export_end</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>6ace4ede8b9b8a73ba99ecf31cea4f67</anchor>
      <arglist>(char **params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>internal_do_export</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>62ac2a30777f22138c96a4449710bc4c</anchor>
      <arglist>(const char *name, unsigned int nid, struct psp_export **pHead)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psp_export_func_nid</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>a574172eb9818c33faaffd9c74560e75</anchor>
      <arglist>(char **params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psp_export_func_hash</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>de28ed0f015dc673ab48f121523fa8bb</anchor>
      <arglist>(char **params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psp_export_var_nid</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>1bd1835201ddb0b1f19d6dabd1a895c5</anchor>
      <arglist>(char **params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psp_export_var_hash</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>b6a65a7d942e57ce51bb1cd36a4fb638</anchor>
      <arglist>(char **params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>psp_export_alias</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>cbae2c3e5442540c9c37f914d8ce9e81</anchor>
      <arglist>(char **params)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_command</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>0b0e6391f449710cc52d78f46cfbbf76</anchor>
      <arglist>(const char *cmd, char **params, int param_count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load_exports</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>70024ec349c819e5d191a3983670f9da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dump_exports</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>3992f16d1d78028b633797fe03cfcf21</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>export_cmd</type>
      <name>commands</name>
      <anchorfile>psp-build-exports_8c.html</anchorfile>
      <anchor>79d8ce96ae92be4c2f0ed822d3fc5bed</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psp-config.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>psp-config_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="getopt_8h" name="getopt.h" local="no" imported="no">getopt.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="unistd_8h" name="unistd.h" local="no" imported="no">unistd.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PSPDEV_ENV</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>2df3c288d0a9658aa6caff96b08ab267</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PATH_ENV</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>1417bb0c04e21bbecda1d6738dbcbea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_PATH</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>b99ded389af74001a6298fc9e44e74e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PATH_SEP</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>837df2c29aacf37cb96c2b65acb312a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIR_SEP</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>5e4e2bb4643ada1903da735d4bf975ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIR_SEP_STR</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>7e9cd40a543edaf2d553839ea9f540df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSPDEV_PATH_SUFFIX</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>24df7ad040d5ace990e3b6dfb7f6acaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspConfigMode</name>
      <anchor>a702d4fc2aad6085b46612e946932153</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CONFIG_UNKNOWN</name>
      <anchor>a702d4fc2aad6085b46612e946932153af051d8b899becc7f771cad59fcfa05d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CONFIG_PSPSDK_PATH</name>
      <anchor>a702d4fc2aad6085b46612e9469321533255bea3bb7255dad20d9364ad25b4d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CONFIG_PSPDEV_PATH</name>
      <anchor>a702d4fc2aad6085b46612e9469321539e63c25d1366da305cae7990bbb8f43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CONFIG_PSP_PREFIX</name>
      <anchor>a702d4fc2aad6085b46612e94693215344fa17db4f10f01f01216e5feb2022be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_args</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>56d5a76295d6c8eae1f9c3059d40b19a</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_help</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>402ea961bfc2ffeee61e3a7c330b1559</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize_path</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>e8bfb0c9ce417c32dbd4735b2b636adc</anchor>
      <arglist>(char *out)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>find_pspdev_path</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>e3834554d0775fb0b7e305941fb6e6f1</anchor>
      <arglist>(char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_path</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>01f9bd9a7c2071b70777f50f59f03fe8</anchor>
      <arglist>(char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>psp-config_8c.html</anchorfile>
      <anchor>3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psp-fixup-imports.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>psp-fixup-imports_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="getopt_8h" name="getopt.h" local="no" imported="no">getopt.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="unistd_8h" name="unistd.h" local="no" imported="no">unistd.h</includes>
    <includes id="assert_8h" name="assert.h" local="no" imported="no">assert.h</includes>
    <includes id="ctype_8h" name="ctype.h" local="no" imported="no">ctype.h</includes>
    <includes id="types_8h" name="types.h" local="yes" imported="no">types.h</includes>
    <includes id="elftypes_8h" name="elftypes.h" local="yes" imported="no">elftypes.h</includes>
    <includes id="prxtypes_8h" name="prxtypes.h" local="yes" imported="no">prxtypes.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PRX_LIBSTUB_SECT</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>dc0cca16cd0a6eccb144f898c1abad55</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRX_STUBTEXT_SECT</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>2ae918199e6377c58989bb3119f46df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRX_NID_SECT</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>551aa57518d9c6865dc8e5add2f3fd56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIPS_JR_31</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>27911dc0bdc39ba97a678549c1915e22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIPS_NOP</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>db6473133345e21ffb59cd555afe4706</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_args</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>56d5a76295d6c8eae1f9c3059d40b19a</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_help</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>402ea961bfc2ffeee61e3a7c330b1559</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>load_file</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>261e145a1a69b7bdbbe03d193c4298a0</anchor>
      <arglist>(const char *file, unsigned int *size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>validate_header</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>e91e1e0dd5942ae3bf51e22297fe84f3</anchor>
      <arglist>(unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load_sections</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>54c13e80408acd47af6d0509b02b7fbf</anchor>
      <arglist>(unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load_elf</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>91df43d2f365cc3a96e4130146a12cd4</anchor>
      <arglist>(const char *elf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_data</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>ab78602b372303d27f4caa0dd50859c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fixup_imports</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>82c2bfcf323f16414111c436f6bccb0b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>psp-fixup-imports_8c.html</anchorfile>
      <anchor>3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>psp-prxgen.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>psp-prxgen_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="getopt_8h" name="getopt.h" local="no" imported="no">getopt.h</includes>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="unistd_8h" name="unistd.h" local="no" imported="no">unistd.h</includes>
    <includes id="assert_8h" name="assert.h" local="no" imported="no">assert.h</includes>
    <includes id="ctype_8h" name="ctype.h" local="no" imported="no">ctype.h</includes>
    <includes id="types_8h" name="types.h" local="yes" imported="no">types.h</includes>
    <includes id="elftypes_8h" name="elftypes.h" local="yes" imported="no">elftypes.h</includes>
    <includes id="prxtypes_8h" name="prxtypes.h" local="yes" imported="no">prxtypes.h</includes>
    <member kind="function">
      <type>int</type>
      <name>process_args</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>56d5a76295d6c8eae1f9c3059d40b19a</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_help</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>402ea961bfc2ffeee61e3a7c330b1559</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>load_file</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>36ff9e6f70618966353b9a8d62661cdf</anchor>
      <arglist>(const char *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>validate_header</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>e91e1e0dd5942ae3bf51e22297fe84f3</anchor>
      <arglist>(unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load_sections</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>54c13e80408acd47af6d0509b02b7fbf</anchor>
      <arglist>(unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>remove_weak_relocs</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>97fecb22fbbedec4c9fd90f1165d7583</anchor>
      <arglist>(struct ElfSection *pReloc, struct ElfSection *pSymbol, struct ElfSection *pString)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process_relocs</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>eed30a14257cf240c51ff38a8378295f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reindex_sections</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>2c3a983635efba8ad15cf003dc980170</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load_elf</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>91df43d2f365cc3a96e4130146a12cd4</anchor>
      <arglist>(const char *elf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>calculate_outsize</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>7363280a2a5d0288ae67e4043c394cee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output_header</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>2dcae411eda4bb09e3546de301635574</anchor>
      <arglist>(unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output_ph</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>8e08a116f426bfa4cb9c7a9cb1438483</anchor>
      <arglist>(unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output_alloc</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>9bef579517d148367e77a65361056bca</anchor>
      <arglist>(unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output_sh</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>fad1e8b5e1f5fff504f55c4781a83167</anchor>
      <arglist>(unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output_relocs</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>620649fd1c2993ca7cf9b71612876e3d</anchor>
      <arglist>(unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>output_shstrtab</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>eddbf38ab2d6f1964cebb79d7f566186</anchor>
      <arglist>(unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>output_prx</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>2fcf4f504459dd78c29436b2c72c4aee</anchor>
      <arglist>(const char *prxfile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_data</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>ab78602b372303d27f4caa0dd50859c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>psp-prxgen_8c.html</anchorfile>
      <anchor>3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sha1.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>sha1_8c</filename>
    <includes id="string_8h" name="string.h" local="no" imported="no">string.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <includes id="sha1_8h" name="sha1.h" local="yes" imported="no">sha1.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BRG_LITTLE_ENDIAN</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>2cbe3e91ef2411799f48e841a348310c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRG_BIG_ENDIAN</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>8bc35b586ede9d02393a6794cd9ba4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLATFORM_BYTE_ORDER</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>f1fc6f24fa4e3d41f5e584cfed2c88dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>rotl32</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>9187080df465eee5b8e06dd238ca9960</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>rotr32</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>a2b9ee759d7397127a4988d7f583b4ee</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>bswap_32</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>5bcbf8b6ee067af4c2fd60ef3bdb39d2</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWAP_BYTES</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>ef3cb28ad8469ea1b9dea5586789d213</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>bsw_32</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>6b0d8bb64105eb34532e449789e0f7c1</anchor>
      <arglist>(p, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHA1_MASK</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>fbc99afb091d773b295dad5d4d36cfd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ch</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>19ff9e8264567df11d6d130afa745c93</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>parity</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>39392e9ae4479d297b3adc03d227e93c</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>maj</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>90fc2751b148c381a7a7ca44817c54f8</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>q</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>3d91bbd662eab5a3ac1d0cf245edd362</anchor>
      <arglist>(v, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>one_cycle</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>fe84ee4f51efd0991d31b2908b341e06</anchor>
      <arglist>(v, a, b, c, d, e, f, k, h)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>five_cycle</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>1f9d5d33adfcd35c0165146592974f11</anchor>
      <arglist>(v, f, k, i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>hf</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>34cdc8352bb2749372d3ef5030217417</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>hf</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>34cdc8352bb2749372d3ef5030217417</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha1_compile</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>b7ff1aa0b03f92159c505c1b1213f98c</anchor>
      <arglist>(sha1_ctx ctx[1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha1_begin</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>0a78d63c78e2506b942766bbaffa91ae</anchor>
      <arglist>(sha1_ctx ctx[1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha1_hash</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>36083edd45e5c66e1789ed07eb615442</anchor>
      <arglist>(const unsigned char data[], unsigned long len, sha1_ctx ctx[1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha1_end</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>fb422ef6dfd8f94d155e37ce543a7c78</anchor>
      <arglist>(unsigned char hval[], sha1_ctx ctx[1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha1</name>
      <anchorfile>sha1_8c.html</anchorfile>
      <anchor>db8d783a5470b492d370733e044e03a4</anchor>
      <arglist>(unsigned char hval[], const unsigned char data[], unsigned long len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sha1.h</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>sha1_8h</filename>
    <class kind="struct">sha1_ctx</class>
    <member kind="define">
      <type>#define</type>
      <name>SHA1_BLOCK_SIZE</name>
      <anchorfile>sha1_8h.html</anchorfile>
      <anchor>4be887a15639aa78e6a129b9c8f4d2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHA1_DIGEST_SIZE</name>
      <anchorfile>sha1_8h.html</anchorfile>
      <anchor>3ba9296b223f1b3c710d6b812fd860e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha1_compile</name>
      <anchorfile>sha1_8h.html</anchorfile>
      <anchor>b7ff1aa0b03f92159c505c1b1213f98c</anchor>
      <arglist>(sha1_ctx ctx[1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha1_begin</name>
      <anchorfile>sha1_8h.html</anchorfile>
      <anchor>0a78d63c78e2506b942766bbaffa91ae</anchor>
      <arglist>(sha1_ctx ctx[1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha1_hash</name>
      <anchorfile>sha1_8h.html</anchorfile>
      <anchor>36083edd45e5c66e1789ed07eb615442</anchor>
      <arglist>(const unsigned char data[], unsigned long len, sha1_ctx ctx[1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha1_end</name>
      <anchorfile>sha1_8h.html</anchorfile>
      <anchor>fb422ef6dfd8f94d155e37ce543a7c78</anchor>
      <arglist>(unsigned char hval[], sha1_ctx ctx[1])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sha1</name>
      <anchorfile>sha1_8h.html</anchorfile>
      <anchor>db8d783a5470b492d370733e044e03a4</anchor>
      <arglist>(unsigned char hval[], const unsigned char data[], unsigned long len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>types.h</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>types_8h</filename>
    <includes id="config_8h" name="config.h" local="yes" imported="no">config.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>LW_LE</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>f5c567ec1932f37a397edcc41ed081eb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LW_BE</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>1db29d6eb423108a060429f52d51e86b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LH_LE</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>5224d232170d0cdf0c249d37e25677fe</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LH_BE</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>044d0abecdd5dd227a6e7be59b5eca20</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LW</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>19cef5f847c47ae8501a2671fee11e90</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LH</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>db710eb552bda187fe0aa14aa8ab5d5e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SW_LE</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>6a421a5ff9d8628d03b316480521cf40</anchor>
      <arglist>(x, v)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SW_BE</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>60374bf64c5a294aa9858d3adb75c1b7</anchor>
      <arglist>(x, v)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SH_LE</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>a6e24a12137a1d0daabdb753c7f67437</anchor>
      <arglist>(x, v)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SH_BE</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>6836abf27aa34e58e7632a221a889a28</anchor>
      <arglist>(x, v)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SW</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>3f907eb026edc69320bbd49e34e2fe39</anchor>
      <arglist>(x, v)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SH</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>86f8d77df209d0f7e9b9f307f6abdbfd</anchor>
      <arglist>(x, v)</arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>u8</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>92c50087ca0e64fa93fc59402c55f8ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>u16</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>ce9d960e74685e2cd84b36132dbbf8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>u32</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>faa62991928fb9fb18ff0db62a040aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>u64</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>3f7e2bcbb0b4c338f3c4f6c937cd4234</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int8_t</type>
      <name>s8</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>9e382f207c65ca13ab4ae98363aeda80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>s16</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>a980e2c02ba2305e0f489d5650655425</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>s32</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>e9b1af5c037e57a98884758875d3a7c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>s64</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>350c6fc928e3bdc6c6486268ac8fb269</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>lw_be</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>73edfdd96c4bcf9a300c8e5f14e00fe1</anchor>
      <arglist>(u32 data)</arglist>
    </member>
    <member kind="function">
      <type>u16</type>
      <name>lh_be</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>3975dd0ab3941f234db63da49dd992f1</anchor>
      <arglist>(u16 data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sw_be</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>fc17d34d31975218f77778c559f70836</anchor>
      <arglist>(u32 *data, u32 val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sh_be</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>f126f1cd2cb267cb5da026fd65dc9949</anchor>
      <arglist>(u16 *data, u16 val)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>unpack-pbp.c</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>unpack-pbp_8c</filename>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">stdio.h</includes>
    <includes id="stdlib_8h" name="stdlib.h" local="no" imported="no">stdlib.h</includes>
    <class kind="struct">HEADER</class>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>unpack-pbp_8c.html</anchorfile>
      <anchor>0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>filename</name>
      <anchorfile>unpack-pbp_8c.html</anchorfile>
      <anchor>69d8ae4f8f9b46cbd2269c8bd786df52</anchor>
      <arglist>[8]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__attribute__</name>
    <filename>struct____attribute____.html</filename>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>e_magic</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>9821a0ea4aeb7caf4661a63ea2f1a751</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>e_class</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>173761d60b1897d5aab54717ab64e8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>e_data</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>f2fce1eefffbabe489c4ceaa95992c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>e_idver</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>f7669db467bd6665fd305d1bcb673814</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>e_pad</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>d7ab172cb74aea72aef836ee6c21afa9</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Half</type>
      <name>e_type</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>932e753773df8010eab5b0f47425e7df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Half</type>
      <name>e_machine</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>42121ad02949d4a823f17e1b58f96bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>e_version</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>79a03dd1b7540809a4b2b9848ba3abc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Addr</type>
      <name>e_entry</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>d4543a5a8f345b7615d02455a39d0778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Off</type>
      <name>e_phoff</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>1e7fb0f8876e7cffda0724dd190ae577</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Off</type>
      <name>e_shoff</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>f6f540bffab558379f9df23f18c9117a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>e_flags</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>b159a8ab791f757bde90e95d4762fdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Half</type>
      <name>e_ehsize</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>9409f2fd66ee919a7928d3622013ee1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Half</type>
      <name>e_phentsize</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>c73641b6bafe950199f576f76f0bae7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Half</type>
      <name>e_phnum</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>654998ffd27c0631163639e3219f1a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Half</type>
      <name>e_shentsize</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>b59beb557c2bdbdf01894f244bd76e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Half</type>
      <name>e_shnum</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>a24fde98000d7c920936677b63deb1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Half</type>
      <name>e_shstrndx</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>c18b9700ee448aaff209db1d1f9a3cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>sh_name</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>d56e863023b2586a8dd85f6926284d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>sh_type</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>bb8f48d866a4e966c362f373f85cca8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>sh_flags</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>9603e5f06c0fad781680cfb3e5467beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Addr</type>
      <name>sh_addr</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>299385b43baaffb1d953f6e3a869a981</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Off</type>
      <name>sh_offset</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>d0a32ebb7141ac3cf18c06b59e985298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>sh_size</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>590c111d82e552d7c06afe0d5795be7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>sh_link</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>2f34031a12b7bf0b3e7704f33e41ef5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>sh_info</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>61f7f87029e1b5b26a24773c9d1083b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>sh_addralign</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>acf260a5fc2dbb810e1395510b50ff76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>sh_entsize</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>c0a2033f5b750422bb5315b317f4e21d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>st_name</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>01b0819ce8319aa7a7d0b371d28f872b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Addr</type>
      <name>st_value</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>7239eea69997a2fefdbb4801fc272cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>st_size</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>af6775d27710eb4d8577096fd31677cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>st_info</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>3d96f696c04727ce4540a3f7d115a203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>st_other</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>8c5829844a17b87f4169ff292bc3b7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Half</type>
      <name>st_shndx</name>
      <anchorfile>struct____attribute____.html</anchorfile>
      <anchor>5396ae870b047365c2b5aaf9e9f786bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__psplibc_FILE</name>
    <filename>struct____psplibc__FILE.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>struct____psplibc__FILE.html</anchorfile>
      <anchor>28dd9b41d7d4e6907114a38610bbec35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fd</name>
      <anchorfile>struct____psplibc__FILE.html</anchorfile>
      <anchor>7c18b9e2c536ab2f6d1495d9a9f6d099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cnt</name>
      <anchorfile>struct____psplibc__FILE.html</anchorfile>
      <anchor>feeaa1c12c2aeb2514f66fd960e5a98e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>struct____psplibc__FILE.html</anchorfile>
      <anchor>3e99723a977d6b627fc64e3ba2a02a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>has_putback</name>
      <anchorfile>struct____psplibc__FILE.html</anchorfile>
      <anchor>94dd94b4d59069899b05b08b910063aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>putback</name>
      <anchorfile>struct____psplibc__FILE.html</anchorfile>
      <anchor>cdfde6d11e53666a5bc744407bdaacf7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_heap_mem_header</name>
    <filename>struct__heap__mem__header.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>ptr</name>
      <anchorfile>struct__heap__mem__header.html</anchorfile>
      <anchor>5bb0ddbbb9a287d8610014e97cb3f529</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>struct__heap__mem__header.html</anchorfile>
      <anchor>db33e3641e92ebe50f758d6ca6188429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_heap_mem_header *</type>
      <name>prev</name>
      <anchorfile>struct__heap__mem__header.html</anchorfile>
      <anchor>f5e445e1836bad8c65e26c793f92a3f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>_heap_mem_header *</type>
      <name>next</name>
      <anchorfile>struct__heap__mem__header.html</anchorfile>
      <anchor>c1b3375d9aef611657127cce414b65c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_pspChnnlsvContext1</name>
    <filename>struct__pspChnnlsvContext1.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>mode</name>
      <anchorfile>struct__pspChnnlsvContext1.html</anchorfile>
      <anchor>1d898b4041865da9943941be9af80bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>buffer1</name>
      <anchorfile>struct__pspChnnlsvContext1.html</anchorfile>
      <anchor>c20682aa91cbd467955db0071c912797</anchor>
      <arglist>[0x10]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>buffer2</name>
      <anchorfile>struct__pspChnnlsvContext1.html</anchorfile>
      <anchor>496a846862583ae90272356e1fb75530</anchor>
      <arglist>[0x10]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unknown</name>
      <anchorfile>struct__pspChnnlsvContext1.html</anchorfile>
      <anchor>ed011e9afb0f32c88d751e0772678832</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_pspChnnlsvContext2</name>
    <filename>struct__pspChnnlsvContext2.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>unknown</name>
      <anchorfile>struct__pspChnnlsvContext2.html</anchorfile>
      <anchor>0a2dc3864cb1de045aef204a2de6ff65</anchor>
      <arglist>[0x100]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_PspDebugProfilerRegs</name>
    <filename>struct__PspDebugProfilerRegs.html</filename>
    <member kind="variable">
      <type>volatile u32</type>
      <name>enable</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>63b672b68a644ca684fdd26cdf1dee02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>systemck</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>8f486146d16a56475ce608d4628525ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>cpuck</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>753b1ce05e15a5bd246cba5b70aca84f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>stall</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>31c588dcce4d94b396d48f8f72d5ab9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>internal</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>98aee5575385b0b04dbea0dd5524a31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>memory</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>4346e4ccb04e357c47d9a03ebf6d0d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>copz</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>e10e1933fbaf94f38b3167e97b3ac035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>vfpu</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>2a10b10bd3f7b891ebe42d1c9995fb3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>sleep</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>49e22ec1eb7aedd838e43c3f31656584</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>bus_access</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>f67e33cbf8b5ac0a033f8ce02c87679b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>uncached_load</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>ca8a8f7e87d44b0da9533c843db22ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>uncached_store</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>0c0ba9251a4658a10a08941561540d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>cached_load</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>f48b1ea4695ee61b9b4287116ad707a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>cached_store</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>9b7e4f0c903267d03ef3faad4b73b347</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>i_miss</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>f7ff9d7322e4540e8e702fd433992d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>d_miss</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>7919b44fb901101c39f341b8edebd418</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>d_writeback</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>cbc3cf6e25173c87ea62dcebc7fb805a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>cop0_inst</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>172148a0c42aefb81fc16f5ec8762090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>fpu_inst</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>f6ca2f9dd90ef60d550461e55228f4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>vfpu_inst</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>de921bad3b2278212f3b172e6059f55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile u32</type>
      <name>local_bus</name>
      <anchorfile>struct__PspDebugProfilerRegs.html</anchorfile>
      <anchor>b5b0ac1f843073d826a32a3aa6cae517</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_PspDebugRegBlock</name>
    <filename>struct__PspDebugRegBlock.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>frame</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>e0d65a93217925efd3b36cc7c89f43e8</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>r</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>b1bc7f8ff4acff09ccc31c02688f780c</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>status</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>394424f6f830bc070075db5900fa44e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>lo</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>d748e026d672dedeb25fe54db7811448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>hi</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>6a3c0aa175d74caf75411ad6d84340e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>badvaddr</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>d2af9c323daad23a805b265d17c92d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cause</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>9b01aefaad1de507762059692846c5e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>epc</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>6b00c8f0bf96e55257183effe859d4ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fpr</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>2c3b3477201bc23d39b67b33850a53bd</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>fsr</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>8d3e9c3d0eaecbb1e1d35d6089174b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>fir</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>9059eb4c9510c8430c1958bec26eb54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>frame_ptr</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>4d8d4bb393620eb5c4b43a84376ea234</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>unused</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>602bf47514fa0b52dbf05b608c3e42d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>index</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>995c08149eb4d92fb67deb279502eb86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>random</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>db539d7417d98a6a2f4c29003acda960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>entrylo0</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>a6b486e327a61db818ff5c54256c7380</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>entrylo1</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>41d8db1a2c8b2942cad3d7702db0e222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>context</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>299ae84401eb75864d18dac73df1eb75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>pagemask</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>52df0a8092d123452e2ada3fb088ae5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>wired</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>bea88081172b1b3331b3b4938b17dc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cop0_7</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>ddffa10039b2accadc79169a51840c7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cop0_8</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>7726cabdb09f162a7c9d0b652c556a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cop0_9</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>676c31d6fbad362c74bdc6cfb2c444b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>entryhi</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>3742182fd835d05c3828f11d3fa9256f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cop0_11</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>ce2dbacf456a18ae46812de24e50f69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cop0_12</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>f4e47fb543df52ce5bbcec2f3023ae6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cop0_13</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>669d01a69e0ccc21aa5225506404e90d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>cop0_14</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>fa76aa24f0cf5db83ddb55d0cac868bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>prid</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>af9869905fb1272de16bcb487927ca87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>padding</name>
      <anchorfile>struct__PspDebugRegBlock.html</anchorfile>
      <anchor>34eb8f77ca416752be5741bfe8541a4f</anchor>
      <arglist>[100]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_PspDebugStackTrace</name>
    <filename>struct__PspDebugStackTrace.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>call_addr</name>
      <anchorfile>struct__PspDebugStackTrace.html</anchorfile>
      <anchor>ff7bced94390aa19aa3486de8d1a4fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>func_addr</name>
      <anchorfile>struct__PspDebugStackTrace.html</anchorfile>
      <anchor>a514e5778c9261fc975d082453a6be52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_PspLibraryEntry</name>
    <filename>struct__PspLibraryEntry.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>struct__PspLibraryEntry.html</anchorfile>
      <anchor>f308995899cba5b886cb2127735193f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>version</name>
      <anchorfile>struct__PspLibraryEntry.html</anchorfile>
      <anchor>9570c009e644e1d80257bf9ea0b56778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>attribute</name>
      <anchorfile>struct__PspLibraryEntry.html</anchorfile>
      <anchor>0ba5faaf211590251c9b859ae6adec66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>entLen</name>
      <anchorfile>struct__PspLibraryEntry.html</anchorfile>
      <anchor>06c5baae0941d2443edc74368ae5051c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>varCount</name>
      <anchorfile>struct__PspLibraryEntry.html</anchorfile>
      <anchor>4a21987934e7089665bd811fced0a006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>funcCount</name>
      <anchorfile>struct__PspLibraryEntry.html</anchorfile>
      <anchor>291403e0b36b54282d3a7dcc9deaff0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>entrytable</name>
      <anchorfile>struct__PspLibraryEntry.html</anchorfile>
      <anchor>3ff602ddb54e3f9a76c50cfb21d540f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_PspSysmemPartitionInfo</name>
    <filename>struct__PspSysmemPartitionInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>struct__PspSysmemPartitionInfo.html</anchorfile>
      <anchor>881fa6b4154eee6e44f09b1c847d207e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>startaddr</name>
      <anchorfile>struct__PspSysmemPartitionInfo.html</anchorfile>
      <anchor>fd646268735b19c1dd5ca4690c8ab011</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>memsize</name>
      <anchorfile>struct__PspSysmemPartitionInfo.html</anchorfile>
      <anchor>eb6b4367174122d2a39a010fea5d1376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>attr</name>
      <anchorfile>struct__PspSysmemPartitionInfo.html</anchorfile>
      <anchor>d4b618c2ea24103718a2450845294e44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_pspUtilityNetconfData</name>
    <filename>struct__pspUtilityNetconfData.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>size</name>
      <anchorfile>struct__pspUtilityNetconfData.html</anchorfile>
      <anchor>b9f23d981024525a1af3f42506220ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>language</name>
      <anchorfile>struct__pspUtilityNetconfData.html</anchorfile>
      <anchor>17a26e05b96969a521242afc6bedaa69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>buttonSwap</name>
      <anchorfile>struct__pspUtilityNetconfData.html</anchorfile>
      <anchor>0acab2dae5c39e7a7ad995b30530afb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unknown</name>
      <anchorfile>struct__pspUtilityNetconfData.html</anchorfile>
      <anchor>8f9d36788b73c69bf4f79c6413432931</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>result</name>
      <anchorfile>struct__pspUtilityNetconfData.html</anchorfile>
      <anchor>1b9099fb81ad831d9f99933f1b3c108e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unknown2</name>
      <anchorfile>struct__pspUtilityNetconfData.html</anchorfile>
      <anchor>20776310b8e0a87dbf2834159fb57166</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>action</name>
      <anchorfile>struct__pspUtilityNetconfData.html</anchorfile>
      <anchor>221a195e90fd8b0ef06a8b4610b7a4f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>unknown3</name>
      <anchorfile>struct__pspUtilityNetconfData.html</anchorfile>
      <anchor>812db2006eb087b6622a81fa24cdab64</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_returnCache</name>
    <filename>struct__returnCache.html</filename>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>returnAddress</name>
      <anchorfile>struct__returnCache.html</anchorfile>
      <anchor>1b2349d2441c1445563c3b1450fd6a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>raOffset</name>
      <anchorfile>struct__returnCache.html</anchorfile>
      <anchor>76e5f0849d1b2f5a6e95e25ef7bea34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>spAdjust</name>
      <anchorfile>struct__returnCache.html</anchorfile>
      <anchor>dfa018facbf8ccebeda416af0235b9ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_SceKernelUtilsMd5Context</name>
    <filename>struct__SceKernelUtilsMd5Context.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>h</name>
      <anchorfile>struct__SceKernelUtilsMd5Context.html</anchorfile>
      <anchor>b4047bb69f0c8e935269d3183372e3ab</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pad</name>
      <anchorfile>struct__SceKernelUtilsMd5Context.html</anchorfile>
      <anchor>d6a93370977e51cdd3ef7edb63458838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUShort16</type>
      <name>usRemains</name>
      <anchorfile>struct__SceKernelUtilsMd5Context.html</anchorfile>
      <anchor>3e80e8bf7d80f26389411c4324e851bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUShort16</type>
      <name>usComputed</name>
      <anchorfile>struct__SceKernelUtilsMd5Context.html</anchorfile>
      <anchor>a85d213d8e3dea5fb68296c1f9a2b642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceULong64</type>
      <name>ullTotalLen</name>
      <anchorfile>struct__SceKernelUtilsMd5Context.html</anchorfile>
      <anchor>78e064e565d7819762838a818a5d1ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>buf</name>
      <anchorfile>struct__SceKernelUtilsMd5Context.html</anchorfile>
      <anchor>253a83f2898d4471364b9f01ce7ea239</anchor>
      <arglist>[64]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_SceKernelUtilsMt19937Context</name>
    <filename>struct__SceKernelUtilsMt19937Context.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>struct__SceKernelUtilsMt19937Context.html</anchorfile>
      <anchor>2f629ea718f00e445b562e91a68a5bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>state</name>
      <anchorfile>struct__SceKernelUtilsMt19937Context.html</anchorfile>
      <anchor>0d89327511005948703b5321195afa05</anchor>
      <arglist>[624]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_SceKernelUtilsSha1Context</name>
    <filename>struct__SceKernelUtilsSha1Context.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>h</name>
      <anchorfile>struct__SceKernelUtilsSha1Context.html</anchorfile>
      <anchor>b77a451c775d17e6fc75f92b05ffb500</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>SceUShort16</type>
      <name>usRemains</name>
      <anchorfile>struct__SceKernelUtilsSha1Context.html</anchorfile>
      <anchor>bad27908b48d9497e0ed931f81434e35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUShort16</type>
      <name>usComputed</name>
      <anchorfile>struct__SceKernelUtilsSha1Context.html</anchorfile>
      <anchor>c8facd93842f0ce7f8e175242b1b2dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceULong64</type>
      <name>ullTotalLen</name>
      <anchorfile>struct__SceKernelUtilsSha1Context.html</anchorfile>
      <anchor>13f236dbd3af8c89a25c0c204d6dec38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>buf</name>
      <anchorfile>struct__SceKernelUtilsSha1Context.html</anchorfile>
      <anchor>1170d3c578fa91ddd2dc40afce3f1131</anchor>
      <arglist>[64]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_scemoduleinfo</name>
    <filename>struct__scemoduleinfo.html</filename>
    <member kind="variable">
      <type>unsigned short</type>
      <name>modattribute</name>
      <anchorfile>struct__scemoduleinfo.html</anchorfile>
      <anchor>351fa68ecbcb182a9974e08398b88c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>modversion</name>
      <anchorfile>struct__scemoduleinfo.html</anchorfile>
      <anchor>52a6c7cd56fea92e0fc264d03111af1c</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>modname</name>
      <anchorfile>struct__scemoduleinfo.html</anchorfile>
      <anchor>6490809592f251baddba575a42c601ed</anchor>
      <arglist>[27]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>terminal</name>
      <anchorfile>struct__scemoduleinfo.html</anchorfile>
      <anchor>b9e4437172a08702e7703fe0b12cf3df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>gp_value</name>
      <anchorfile>struct__scemoduleinfo.html</anchorfile>
      <anchor>c4a54dcaeea919c526b1115deef80c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ent_top</name>
      <anchorfile>struct__scemoduleinfo.html</anchorfile>
      <anchor>63c9bd43d3863cf150f7e4a9634daebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ent_end</name>
      <anchorfile>struct__scemoduleinfo.html</anchorfile>
      <anchor>6731e3fd8f57cdec7d702f9d8087e0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>stub_top</name>
      <anchorfile>struct__scemoduleinfo.html</anchorfile>
      <anchor>08bda14688dc70c71151d91c0ace80b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>stub_end</name>
      <anchorfile>struct__scemoduleinfo.html</anchorfile>
      <anchor>990b2f64774f0d72f7720efd2d5e42e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_SceUtilityMsgDialogParams</name>
    <filename>struct__SceUtilityMsgDialogParams.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>struct__SceUtilityMsgDialogParams.html</anchorfile>
      <anchor>e361e001b144155fa63e8e27b82e0f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>language</name>
      <anchorfile>struct__SceUtilityMsgDialogParams.html</anchorfile>
      <anchor>217fb443cb345619227a225766859f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>buttonSwap</name>
      <anchorfile>struct__SceUtilityMsgDialogParams.html</anchorfile>
      <anchor>40d6f51fc7ce1a0cc7a984ab0d4a998e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unknown</name>
      <anchorfile>struct__SceUtilityMsgDialogParams.html</anchorfile>
      <anchor>e454d542660b4d98bd2138e029a748e8</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>returnValue</name>
      <anchorfile>struct__SceUtilityMsgDialogParams.html</anchorfile>
      <anchor>1f342708b2bcd4dfca47d1e361085ee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unknown2</name>
      <anchorfile>struct__SceUtilityMsgDialogParams.html</anchorfile>
      <anchor>a4cbcfe7c893bf37a468f88d3bf7bf58</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>message</name>
      <anchorfile>struct__SceUtilityMsgDialogParams.html</anchorfile>
      <anchor>c2e9cae343773c1568be5304cbb0e66a</anchor>
      <arglist>[512]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_SceUtilityOskData</name>
    <filename>struct__SceUtilityOskData.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>unk_00</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>8889f4ca55e8dc32ff55430924a12cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_04</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>09d109141c843392dc4a15629d6a8348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>language</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>f2680c8a0db6a7b6af1cb4c492c8ec1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_12</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>bbb6cb1c7197d9b8e482f6ad1d4ff8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_16</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>4930527f2220bd503685e8d60a2b0bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lines</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>7bbeaa311de33afaa4afdeed7fdd2c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_24</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>4fbe0eff966d290500939127dc0a5b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short *</type>
      <name>desc</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>9921f3bc25bb429ab21b81e4c0487a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short *</type>
      <name>intext</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>f22d224aa2aac57adae47ae431b94d04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>outtextlength</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>735823e4d85b07939c201c56d6889c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short *</type>
      <name>outtext</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>4e912bcad2127ad44a6f454250cdd237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rc</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>0f6176155f9b30edce0966da1bbaae24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>outtextlimit</name>
      <anchorfile>struct__SceUtilityOskData.html</anchorfile>
      <anchor>6777f883c97262ced29e27d740276c61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_SceUtilityOskParams</name>
    <filename>struct__SceUtilityOskParams.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>size</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>d29db01402f7593420980cd970bef2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>language</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>86858f2ed0034b5a23949fccab607fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>buttonswap</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>d4be58e55caf7d902c71f91d81497a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_12</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>d679fd0abd33c8eb4b8ddc6217ab2f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_16</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>89ba5e1a20dd3e7697aac27020c08476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_20</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>436dd9a99fb5da956a3d1c1919d4389d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_24</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>0715231d472786e58fc593fcdab990e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rc</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>0cd255a1a399d6a327027ff9e94e1656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_32</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>a7055009f8c1ddabf80eb1ff67c64656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_36</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>387fd461e96aa21e32ed2a71a913586a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_40</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>85bb51c2012586ddfe8ff3b8e2ec40be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_44</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>ef6d847fefb0f7d56efcbff125d9131c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_48</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>b62e84856a59a72ef3fac13adc952d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUtilityOskData *</type>
      <name>data</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>b7142bfdaccdd68ddf51f2c6f7cf20f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_56</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>b4f047c3c5db167c11e942f9e1e7ddca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_60</name>
      <anchorfile>struct__SceUtilityOskParams.html</anchorfile>
      <anchor>2caf25ebf0b66d43f292314f1d6d00d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_ThreadInfoSkel</name>
    <filename>struct__ThreadInfoSkel.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>struct__ThreadInfoSkel.html</anchorfile>
      <anchor>b0490f3bb62bbb421c6162ee88658e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>struct__ThreadInfoSkel.html</anchorfile>
      <anchor>e86f68bd6383cbc732f60b8a57238656</anchor>
      <arglist>[32]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>charmap_t</name>
    <filename>structcharmap__t.html</filename>
    <member kind="variable">
      <type>unsigned short</type>
      <name>sjis</name>
      <anchorfile>structcharmap__t.html</anchorfile>
      <anchor>3c9041e90013b901f3ccac01d62c0351</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>ascii</name>
      <anchorfile>structcharmap__t.html</anchorfile>
      <anchor>63c0e1414ee11badcb7c4ba0b7884eea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ConfigDescriptor</name>
    <filename>structConfigDescriptor.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bLength</name>
      <anchorfile>structConfigDescriptor.html</anchorfile>
      <anchor>30648d1f39bf3a0201cdc8b32cdb8e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bDescriptorType</name>
      <anchorfile>structConfigDescriptor.html</anchorfile>
      <anchor>3a220713dc1c9e448fffa1523de1f4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>wTotalLength</name>
      <anchorfile>structConfigDescriptor.html</anchorfile>
      <anchor>9fe20f20ce586d9e5b0c1055694f91a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bNumInterfaces</name>
      <anchorfile>structConfigDescriptor.html</anchorfile>
      <anchor>bb911a910ad50df44ab41b5863175e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bConfigurationValue</name>
      <anchorfile>structConfigDescriptor.html</anchorfile>
      <anchor>01739fc77f00f4c9dd02f3304dc4aee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>iConfiguration</name>
      <anchorfile>structConfigDescriptor.html</anchorfile>
      <anchor>c458c5e24372b1f2e0eae6229655c310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bmAttributes</name>
      <anchorfile>structConfigDescriptor.html</anchorfile>
      <anchor>bb56be4cf7e2c513f75eb5cc8a451c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bMaxPower</name>
      <anchorfile>structConfigDescriptor.html</anchorfile>
      <anchor>cd0c3d4ac4ab1db8d3f865b38bfea2cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DeviceDescriptor</name>
    <filename>structDeviceDescriptor.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bLength</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>ed7ec9fcbd879c6c847850130d22234c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bDescriptorType</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>7e5846e059e5c29961dbeb2482ffb816</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>bcdUSB</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>19f9ed5d3ecf7e30dc0c283b7adac247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bDeviceClass</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>1643ee369678e082b806b4caafdba85f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bDeviceSubClass</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>65bc8e6c597d1745bc7ba0b1723d4c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bDeviceProtocol</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>7f5efad1e8700c0f1fa19c120b321602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bMaxPacketSize</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>65c3e8ce56f961409c89cb3822bb1d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>idVendor</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>be947a3bffbb12251a27e2bda4f1259c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>idProduct</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>11f0cf6b82843da957a7beb4ca92a709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>bcdDevice</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>24e30b8d6edf2a780505161e6cf1946c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>iManufacturer</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>830e522e2d201ba3e75c0026add26671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>iProduct</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>a6c5738391082c90b5fa0f62805e3604</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>iSerialNumber</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>5ce5d6fa565cdc12f461223c05f9be6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bNumConfigurations</name>
      <anchorfile>structDeviceDescriptor.html</anchorfile>
      <anchor>c24a55b8e42364df3bf6422fcc87f308</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DeviceRequest</name>
    <filename>structDeviceRequest.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bmRequestType</name>
      <anchorfile>structDeviceRequest.html</anchorfile>
      <anchor>54eb419e08f64bbced3040fc7a5bf4f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bRequest</name>
      <anchorfile>structDeviceRequest.html</anchorfile>
      <anchor>ff1794c7286c29563375b4a42029abf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>wValue</name>
      <anchorfile>structDeviceRequest.html</anchorfile>
      <anchor>ebe9553934a994652f5be9c35462dd38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>wIndex</name>
      <anchorfile>structDeviceRequest.html</anchorfile>
      <anchor>25cfffb6db01484854a22e7acba47ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>wLength</name>
      <anchorfile>structDeviceRequest.html</anchorfile>
      <anchor>7e2696fabca5290974513f3022fa0faa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>div_t</name>
    <filename>structdiv__t.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>quot</name>
      <anchorfile>structdiv__t.html</anchorfile>
      <anchor>0b9dda2884048daa68ca4aaa12b17b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rem</name>
      <anchorfile>structdiv__t.html</anchorfile>
      <anchor>c64389de252de53eda8b4f8dbb7c623f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Elf32_Phdr</name>
    <filename>structElf32__Phdr.html</filename>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>p_type</name>
      <anchorfile>structElf32__Phdr.html</anchorfile>
      <anchor>8b1d2942ddb9abcb85db1429b5116923</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Off</type>
      <name>p_offset</name>
      <anchorfile>structElf32__Phdr.html</anchorfile>
      <anchor>c590d4c4b26104216e53058b5b03eef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Addr</type>
      <name>p_vaddr</name>
      <anchorfile>structElf32__Phdr.html</anchorfile>
      <anchor>01a298ebc899bcf9c23211a7bf1155a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Addr</type>
      <name>p_paddr</name>
      <anchorfile>structElf32__Phdr.html</anchorfile>
      <anchor>f18f0a179a5fca09e3c04bcdce3fac2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>p_filesz</name>
      <anchorfile>structElf32__Phdr.html</anchorfile>
      <anchor>c9151f2e11001284bf1c7d2d2659555c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>p_memsz</name>
      <anchorfile>structElf32__Phdr.html</anchorfile>
      <anchor>da1cdd3d6ccb79a17bed0e3c21379c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>p_flags</name>
      <anchorfile>structElf32__Phdr.html</anchorfile>
      <anchor>35c457e6828894b7b275730593802050</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>p_align</name>
      <anchorfile>structElf32__Phdr.html</anchorfile>
      <anchor>fd09d9e4297b13fc94fd57d09f2a9f70</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Elf32_Rel</name>
    <filename>structElf32__Rel.html</filename>
    <member kind="variable">
      <type>Elf32_Addr</type>
      <name>r_offset</name>
      <anchorfile>structElf32__Rel.html</anchorfile>
      <anchor>ddcf5ef67ababeb4940889e912c11eff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Elf32_Word</type>
      <name>r_info</name>
      <anchorfile>structElf32__Rel.html</anchorfile>
      <anchor>81c52bb1589056c5d37d58b9bfe2a046</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>elf_section_t</name>
    <filename>structelf__section__t.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>sh_name</name>
      <anchorfile>structelf__section__t.html</anchorfile>
      <anchor>6870160ef85d91c7528cf74285752dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sh_type</name>
      <anchorfile>structelf__section__t.html</anchorfile>
      <anchor>fab22e39c28af29346c827acc09b35f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sh_flags</name>
      <anchorfile>structelf__section__t.html</anchorfile>
      <anchor>a13f3f934ac99817ee744df89e9fd478</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sh_addr</name>
      <anchorfile>structelf__section__t.html</anchorfile>
      <anchor>14cc1983e684fca323f0c92bef712c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sh_offset</name>
      <anchorfile>structelf__section__t.html</anchorfile>
      <anchor>25d6d77dfea2ee8f64de224b17f4562b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sh_size</name>
      <anchorfile>structelf__section__t.html</anchorfile>
      <anchor>897d195907d89697b62fd523dcda1b64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sh_link</name>
      <anchorfile>structelf__section__t.html</anchorfile>
      <anchor>2f25c92bf408f471157c7ff3fc87eecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sh_info</name>
      <anchorfile>structelf__section__t.html</anchorfile>
      <anchor>598e7cff34935db8bb41b59505d6e77f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sh_addralign</name>
      <anchorfile>structelf__section__t.html</anchorfile>
      <anchor>3fbbaa9fb72361219b905677b873bd87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>sh_entsize</name>
      <anchorfile>structelf__section__t.html</anchorfile>
      <anchor>2b4339cf9914c175da246ba9a20ef907</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>elf_symbol_t</name>
    <filename>structelf__symbol__t.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>st_name</name>
      <anchorfile>structelf__symbol__t.html</anchorfile>
      <anchor>5f8fb09753e888dcf26a21f2692a5d52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>st_value</name>
      <anchorfile>structelf__symbol__t.html</anchorfile>
      <anchor>b76ee00b22bc4f65c21c81156ac7028b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>st_size</name>
      <anchorfile>structelf__symbol__t.html</anchorfile>
      <anchor>c2a86239452d44a9222a97fd05116c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>st_info</name>
      <anchorfile>structelf__symbol__t.html</anchorfile>
      <anchor>00f9c8ea072de555b3c9e4a3e73075e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>st_other</name>
      <anchorfile>structelf__symbol__t.html</anchorfile>
      <anchor>5a38ce71dfef9f06bb293828c2327d5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>st_shndx</name>
      <anchorfile>structelf__symbol__t.html</anchorfile>
      <anchor>bf55a458314e861575ed7d71c742f09f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ElfHeader</name>
    <filename>structElfHeader.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>iMagic</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>ad1e7557b6ed829ef18281e452025633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iClass</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>d5a2fa6114c9e2e2d36c1f519c18ed5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iData</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>7a083f3a474b262d35452e20d69a6274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iIdver</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>d048aba9d49d7204676cc1f09c248ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iType</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>87ee550afe4a379a769d1b9a32b33982</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iMachine</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>9640fec9b4128da408854b813c459cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iVersion</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>1fc8174f4d8a38ed17d768d6b15b874c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iEntry</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>7b7a3a140fccf8891dd7bf208e633614</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iPhoff</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>99bd29e01ae2fee674ffa6e47c7752c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iShoff</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>8ee2f15831ec60de6728358213f89614</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iFlags</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>66280c1191190ad0a2ef42e85f69f884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iEhsize</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>16948aeb90e5ce13a3f22757df251a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iPhentsize</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>5f99154fe6ddc6f4d5f29a05cd62602e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iPhnum</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>513965996ceedeed641722cb1ee11265</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iShentsize</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>2d08e6c5c9aaf16fb10c465b94d40677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iShnum</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>52e7dd3c4ad709ed6c79b21e3b187908</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iShstrndx</name>
      <anchorfile>structElfHeader.html</anchorfile>
      <anchor>9e0ef311ad1fa7b1337ecb0406eea516</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ElfProgram</name>
    <filename>structElfProgram.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>iType</name>
      <anchorfile>structElfProgram.html</anchorfile>
      <anchor>e0139bfcecc263488670a6cd45007bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iOffset</name>
      <anchorfile>structElfProgram.html</anchorfile>
      <anchor>e0170eba6368bef4c431e4a092bfba87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iVaddr</name>
      <anchorfile>structElfProgram.html</anchorfile>
      <anchor>45371b3420ae589faa6787bf426395b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iPaddr</name>
      <anchorfile>structElfProgram.html</anchorfile>
      <anchor>9b6946426024b264be0d3da883d54b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iFilesz</name>
      <anchorfile>structElfProgram.html</anchorfile>
      <anchor>176e6d982c35b174c291af0a086c8d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iMemsz</name>
      <anchorfile>structElfProgram.html</anchorfile>
      <anchor>c1690b2aaaf21d0307bdcdad05160ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iFlags</name>
      <anchorfile>structElfProgram.html</anchorfile>
      <anchor>dcefbcb4c4ed8f12270ee3e7de12565e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iAlign</name>
      <anchorfile>structElfProgram.html</anchorfile>
      <anchor>6f677a3e97a745aa9ddddd463e98e144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8 *</type>
      <name>pData</name>
      <anchorfile>structElfProgram.html</anchorfile>
      <anchor>61e09c7afd05275ba47de5ea32e2f375</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ElfReloc</name>
    <filename>structElfReloc.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>secname</name>
      <anchorfile>structElfReloc.html</anchorfile>
      <anchor>a2d7917834cc2a7c300ca4311bdcd37b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>base</name>
      <anchorfile>structElfReloc.html</anchorfile>
      <anchor>53d43031b0f56afaf9d25d4a78171edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>type</name>
      <anchorfile>structElfReloc.html</anchorfile>
      <anchor>237bff420d56894a200d2a421dfa2626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>symbol</name>
      <anchorfile>structElfReloc.html</anchorfile>
      <anchor>6d491acb94a5d8e22a552330a0da1ecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>offset</name>
      <anchorfile>structElfReloc.html</anchorfile>
      <anchor>b0c3fed99585bdd94557146eba75d785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>addr</name>
      <anchorfile>structElfReloc.html</anchorfile>
      <anchor>eebb10f02548f9542371f63d049ecad7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ElfSection</name>
    <filename>structElfSection.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>iName</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>e2c402b30a4be1cace3a92748e42e60a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iType</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>e8bd3adbbde028898a3cce0faf7e6167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iFlags</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>5f5e4846f28e33b6f26f5dd7efcb609f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iAddr</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>b5a4ecc93cc4d594f3d363ff31e1b2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iOffset</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>d5fc88c74bd27bf50b36aa73acc84732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iSize</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>7e4e81ee5e1d6d23aba05bc2d7bca9e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iLink</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>b7f6dd8dc6e7ba5f4fe93bd8cdcf8d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iInfo</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>25e6cf7f54f9b25ece3f6fe7ac17a34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iAddralign</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>a3a3d6eca9757d770c266d5a065a315b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>iEntsize</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>a89b0b575b56b779fe5ca03a1fd551e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8 *</type>
      <name>pData</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>704bc9ac729bb5b9df87d0269f18cf38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>szName</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>b77eb580accae03a9d5067c11596fe21</anchor>
      <arglist>[ELF_SECT_MAX_NAME]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iIndex</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>0a8c56b432feae7b2d3631e2d5fdf1df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ElfSection *</type>
      <name>pRef</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>56cd77fad79c93a4c4ee4923d3fd77ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blOutput</name>
      <anchorfile>structElfSection.html</anchorfile>
      <anchor>16b94130e8b9726e9d20b9b0aabb2780</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EndpointDescriptor</name>
    <filename>structEndpointDescriptor.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bLength</name>
      <anchorfile>structEndpointDescriptor.html</anchorfile>
      <anchor>331f48ecb6560de20c3a4185ec58e119</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bDescriptorType</name>
      <anchorfile>structEndpointDescriptor.html</anchorfile>
      <anchor>b7e16e7e617d18df85ed0c7ca1fe4744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bEndpointAddress</name>
      <anchorfile>structEndpointDescriptor.html</anchorfile>
      <anchor>dcce37af8cf65a12d57d0948dc074063</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bmAttributes</name>
      <anchorfile>structEndpointDescriptor.html</anchorfile>
      <anchor>94aeed5accf8149b11015f5392ec7194</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>wMaxPacketSize</name>
      <anchorfile>structEndpointDescriptor.html</anchorfile>
      <anchor>8b42aacab1f89f0d54b34b6c5a7d1221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bInterval</name>
      <anchorfile>structEndpointDescriptor.html</anchorfile>
      <anchor>3d8e085ec7ea2e66896fdaff25b6ccaa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>environvariable_t</name>
    <filename>structenvironvariable__t.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structenvironvariable__t.html</anchorfile>
      <anchor>0573a2ea0a8f1f215392e0588675d9d7</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>value</name>
      <anchorfile>structenvironvariable__t.html</anchorfile>
      <anchor>1b7017e700def3cb78797158683a06df</anchor>
      <arglist>[256]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>export_cmd</name>
    <filename>structexport__cmd.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>structexport__cmd.html</anchorfile>
      <anchor>dd000a2d8fcf695e5f1332773f73cb50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>params</name>
      <anchorfile>structexport__cmd.html</anchorfile>
      <anchor>7bea7a0d84d1c94f8c0cf829dc9903fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>handler</name>
      <anchorfile>structexport__cmd.html</anchorfile>
      <anchor>7dc553ed4b8311da63a5ec9ea6e8aa89</anchor>
      <arglist>)(char **params)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FILE</name>
    <filename>structFILE.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>structFILE.html</anchorfile>
      <anchor>471ea806c5116b0982e2d99ff8c81d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fd</name>
      <anchorfile>structFILE.html</anchorfile>
      <anchor>8ee55c9e71f36acc422313bdb2528b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cnt</name>
      <anchorfile>structFILE.html</anchorfile>
      <anchor>d7170dc89332708df4e301a4f702d089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flag</name>
      <anchorfile>structFILE.html</anchorfile>
      <anchor>99548099398fc71a7212f83c8be86286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>has_putback</name>
      <anchorfile>structFILE.html</anchorfile>
      <anchor>0f0876225ceb5bb8fc6eb3baad87c2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>putback</name>
      <anchorfile>structFILE.html</anchorfile>
      <anchor>6fcccf5d383887603be62d6514546876</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gmonhdr</name>
    <filename>structgmonhdr.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>lpc</name>
      <anchorfile>structgmonhdr.html</anchorfile>
      <anchor>709030fd222dd42444fb11f95e747f75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hpc</name>
      <anchorfile>structgmonhdr.html</anchorfile>
      <anchor>a1e35f157fb70ca1246dfd367a4d8bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncnt</name>
      <anchorfile>structgmonhdr.html</anchorfile>
      <anchor>7395f6d226f556a76b60454f993a3734</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>version</name>
      <anchorfile>structgmonhdr.html</anchorfile>
      <anchor>1d6ca2f3a74eb148e2e3467de4fd0c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>profrate</name>
      <anchorfile>structgmonhdr.html</anchorfile>
      <anchor>cc151ea5e38eb63ebf31e507e46081f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>resv</name>
      <anchorfile>structgmonhdr.html</anchorfile>
      <anchor>4162c403a30fe064a4b707362c3c4643</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gmonparam</name>
    <filename>structgmonparam.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>state</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>c97bc25f25734bc5700f4b60a462e54f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>lowpc</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>9fd296601d9e7e64e7aea2fb1eabe8d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>highpc</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>16727050002846529905970116c21601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>textsize</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>82ebd1f92bfee836af04e904d9079e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>hashfraction</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>03fd40b60de01f44bab691b241510e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>narcs</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>1ada6e7bcc1981af19a08d3b41f00cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rawarc *</type>
      <name>arcs</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>04e786d02de984529f0d88f38fe67070</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nsamples</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>e8f8120395bc8dab1cd5fb4e58e0bf1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>samples</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>02cead4b7d45049dfae19b7a6f492167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>timer</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>770e2115020cba09b005a2deccfcaa82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pc</name>
      <anchorfile>structgmonparam.html</anchorfile>
      <anchor>7453ae3699fca5b45b200c94d706cb60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GuContext</name>
    <filename>structGuContext.html</filename>
    <member kind="variable">
      <type>GuDisplayList</type>
      <name>list</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>17827bcc6a9408543d3021977b8e7da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scissor_enable</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>b0a9382c396153331135e00c13751f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scissor_start</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>e937870b1ab0ff8bd75739562b1f8bb3</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scissor_end</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>fe57d8697b0ba818fee2d0e03a41f7e9</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>near_plane</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>823e38e239987084a3a6b6682f5db727</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>far_plane</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>eab84b68da2c174f1abb2724083236e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>depth_offset</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>fa9bf458ab3edb7e6e8d271f0bbe9828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fragment_2x</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>05d2cb96afbbc34419a573072ba7a3e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>texture_function</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>e0db7c0d7100485fb6a6e1c4f7944c68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>texture_proj_map_mode</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>9e4b7615f0b1b0819c29e2a9a5d9d393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>texture_map_mode</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>da912e13af5f5e8f1b25dac7f711267e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sprite_mode</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>934b9be0766acc768d0e97474d4ee52c</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>clear_color</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>29973fc7ab48d135f3054b50e7aac3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>clear_stencil</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>dd39c98e72c1ed5c0b151614970a67ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>clear_depth</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>9b09e02149ab11a0f8dd0fbbebe38523</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>texture_mode</name>
      <anchorfile>structGuContext.html</anchorfile>
      <anchor>a55c8a6a7d57c015d3c3770e3aa053ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GuDisplayList</name>
    <filename>structGuDisplayList.html</filename>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>start</name>
      <anchorfile>structGuDisplayList.html</anchorfile>
      <anchor>82c278042cfec3a2dc2616c9c958b0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>current</name>
      <anchorfile>structGuDisplayList.html</anchorfile>
      <anchor>c81d920c2777323e9b4bb6ea517a776a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>parent_context</name>
      <anchorfile>structGuDisplayList.html</anchorfile>
      <anchor>f1da59ed2581622984341e3cd7b65914</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GuDrawBuffer</name>
    <filename>structGuDrawBuffer.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>pixel_size</name>
      <anchorfile>structGuDrawBuffer.html</anchorfile>
      <anchor>d39d0346425b848e0dc7dadbe4d460ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>frame_width</name>
      <anchorfile>structGuDrawBuffer.html</anchorfile>
      <anchor>fcf7aca81ee2e7796650ef005bcb962c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>frame_buffer</name>
      <anchorfile>structGuDrawBuffer.html</anchorfile>
      <anchor>b2046a19b4ff418dd95f00a6c788bfc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>disp_buffer</name>
      <anchorfile>structGuDrawBuffer.html</anchorfile>
      <anchor>f414b5c9453be97809a9fc2393bec471</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>depth_buffer</name>
      <anchorfile>structGuDrawBuffer.html</anchorfile>
      <anchor>caaad86ae921396fb8dba486f807dbf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>depth_width</name>
      <anchorfile>structGuDrawBuffer.html</anchorfile>
      <anchor>736f51cc97205662dab0c2fd1d66130d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>width</name>
      <anchorfile>structGuDrawBuffer.html</anchorfile>
      <anchor>1ebaed652bee1b1bbd6aa11518ec7ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>height</name>
      <anchorfile>structGuDrawBuffer.html</anchorfile>
      <anchor>7d386904ca9e68088ece72988c9f1681</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GuLightSettings</name>
    <filename>structGuLightSettings.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>enable</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>9eb98bafc0fbc832a53f0fcb0cebab25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>type</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>9f098e8baeb1d7eaad90338fc64cc7b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>xpos</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>5430e316d51435a51b927edf8fc42f32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>ypos</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>f2b4b6ff913eba98f064e2cd2dab29fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>zpos</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>296d855a828d0b8f5370976fff1c966b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>xdir</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>fc5919dc5b598f2fa926dc569729c59b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>ydir</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>00c8c8a722b6927c9def20229d5d5921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>zdir</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>afa10c33c365650d10dfb52c314f50e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>ambient</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>4441775a9762b8f66a199e9379f78deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>diffuse</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>b15f627852adf9b8cbbd1ea298563e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>specular</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>553d4f002607d3caa30835f8c22d73ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>constant</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>bbe7f93a965d42816f263f6cc8ff3a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>linear</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>6eb62e7b0e5a78cae582c839d0f0abe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>quadratic</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>3f410177b8d010c61e14989ee0bf9927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>exponent</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>9b5ee2cefb4577c90c32520ee8bde192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>cutoff</name>
      <anchorfile>structGuLightSettings.html</anchorfile>
      <anchor>ae570a6a6dfcff53812ca0ebfeccbe24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GuSettings</name>
    <filename>structGuSettings.html</filename>
    <member kind="variable">
      <type>GuCallback</type>
      <name>sig</name>
      <anchorfile>structGuSettings.html</anchorfile>
      <anchor>a7c25ddce82e9a64f3b8cb29b67b1f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuCallback</type>
      <name>fin</name>
      <anchorfile>structGuSettings.html</anchorfile>
      <anchor>fbd0d812cd44e3a815eed112301807bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>signal_history</name>
      <anchorfile>structGuSettings.html</anchorfile>
      <anchor>e45e76c3e279b1ef9f7a81bede20ad4f</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>signal_offset</name>
      <anchorfile>structGuSettings.html</anchorfile>
      <anchor>cd68d8d72b29460cccd0334c2fa05326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>kernel_event_flag</name>
      <anchorfile>structGuSettings.html</anchorfile>
      <anchor>199b3c3fa9ecf62b48c67bfd21e62830</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ge_callback_id</name>
      <anchorfile>structGuSettings.html</anchorfile>
      <anchor>32970ae285d758335401c64ad1d9ab69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GuSwapBuffersCallback</type>
      <name>swapBuffersCallback</name>
      <anchorfile>structGuSettings.html</anchorfile>
      <anchor>d775d463b01201d37a490e920cb7419c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>swapBuffersBehaviour</name>
      <anchorfile>structGuSettings.html</anchorfile>
      <anchor>436fd1bb759948d13d5844b94595428d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HEADER</name>
    <filename>structHEADER.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>signature</name>
      <anchorfile>structHEADER.html</anchorfile>
      <anchor>247c1df0facc4ea65e887eaf94199234</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>version</name>
      <anchorfile>structHEADER.html</anchorfile>
      <anchor>9199db7409951094425689b4f105aece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>offset</name>
      <anchorfile>structHEADER.html</anchorfile>
      <anchor>40f006a349dbe1a752294c76f01e0563</anchor>
      <arglist>[8]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>InterfaceDescriptor</name>
    <filename>structInterfaceDescriptor.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bLength</name>
      <anchorfile>structInterfaceDescriptor.html</anchorfile>
      <anchor>04b61d6c28a30d04f83405e1dca043c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bDescriptorType</name>
      <anchorfile>structInterfaceDescriptor.html</anchorfile>
      <anchor>90593d2abf932cebb72657de1b7b0a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bInterfaceNumber</name>
      <anchorfile>structInterfaceDescriptor.html</anchorfile>
      <anchor>2a7295deff8c74ade51888bf5659d3d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bAlternateSetting</name>
      <anchorfile>structInterfaceDescriptor.html</anchorfile>
      <anchor>c4f0b3737c6a1c4b81b7cb5f4d5d4ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bNumEndpoints</name>
      <anchorfile>structInterfaceDescriptor.html</anchorfile>
      <anchor>e0fe370bd32ad0fe50bbfe74d82b632a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bInterfaceClass</name>
      <anchorfile>structInterfaceDescriptor.html</anchorfile>
      <anchor>56645fff2f9d17c1c4929c08c06a8c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bInterfaceSubClass</name>
      <anchorfile>structInterfaceDescriptor.html</anchorfile>
      <anchor>aec1ffdcc64786e94a7ca9d4ebc31eb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bInterfaceProtocol</name>
      <anchorfile>structInterfaceDescriptor.html</anchorfile>
      <anchor>267f518a7b0b23add50fa4b9e92b6899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>iInterface</name>
      <anchorfile>structInterfaceDescriptor.html</anchorfile>
      <anchor>c48765f19b360342f51abb763154f5ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ldiv_t</name>
    <filename>structldiv__t.html</filename>
    <member kind="variable">
      <type>long</type>
      <name>quot</name>
      <anchorfile>structldiv__t.html</anchorfile>
      <anchor>73efd59c176304c327cb4214d0e5e5c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>rem</name>
      <anchorfile>structldiv__t.html</anchorfile>
      <anchor>0f217ff62b8640aa945ec84d6d0bd000</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>lldiv_t</name>
    <filename>structlldiv__t.html</filename>
    <member kind="variable">
      <type>long long</type>
      <name>quot</name>
      <anchorfile>structlldiv__t.html</anchorfile>
      <anchor>e4d4bccdf22f41e052073f5790c5ec37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long long</type>
      <name>rem</name>
      <anchorfile>structlldiv__t.html</anchorfile>
      <anchor>32d4596a917aa9b496c8a49178a0e3c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>netData</name>
    <filename>unionnetData.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>asUint</name>
      <anchorfile>unionnetData.html</anchorfile>
      <anchor>158aacc07726a07d88f1c88972a9ece8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>asString</name>
      <anchorfile>unionnetData.html</anchorfile>
      <anchor>79e4035f31129bbbc4f075429de8b318</anchor>
      <arglist>[128]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>option</name>
    <filename>structoption.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>structoption.html</anchorfile>
      <anchor>dc503659d37af8017fb4b86d61c99086</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>has_arg</name>
      <anchorfile>structoption.html</anchorfile>
      <anchor>90d7ee9a51eea5c002682dbd0af149e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>flag</name>
      <anchorfile>structoption.html</anchorfile>
      <anchor>b366eea5fe7be25c1928328ba715e353</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>val</name>
      <anchorfile>structoption.html</anchorfile>
      <anchor>13bd155ec3b405d29c41ab8d0793be11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pdpStatStruct</name>
    <filename>structpdpStatStruct.html</filename>
    <member kind="variable">
      <type>pdpStatStruct *</type>
      <name>next</name>
      <anchorfile>structpdpStatStruct.html</anchorfile>
      <anchor>f77d08a81421d7c4d5a8b342dddeeeaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pdpId</name>
      <anchorfile>structpdpStatStruct.html</anchorfile>
      <anchor>b7fd0e5bf3b9b79165fdad6c6afbc755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>mac</name>
      <anchorfile>structpdpStatStruct.html</anchorfile>
      <anchor>0d9f6708f1177b64d7746579e731e816</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>int16</type>
      <name>port</name>
      <anchorfile>structpdpStatStruct.html</anchorfile>
      <anchor>f60a7e7bb6cd713ea455f169b6d3c07e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>rcvdData</name>
      <anchorfile>structpdpStatStruct.html</anchorfile>
      <anchor>49ec1aaa9c23fd6e3be4b40734386546</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>productStruct</name>
    <filename>structproductStruct.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>unknown</name>
      <anchorfile>structproductStruct.html</anchorfile>
      <anchor>f0d43286d395b7f1ede242e921611b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>product</name>
      <anchorfile>structproductStruct.html</anchorfile>
      <anchor>cc3100b6f2b2edcfb8fac3e00d8fb02a</anchor>
      <arglist>[9]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>psp_alias</name>
    <filename>structpsp__alias.html</filename>
    <member kind="variable">
      <type>psp_alias *</type>
      <name>pNext</name>
      <anchorfile>structpsp__alias.html</anchorfile>
      <anchor>0f97abf8db1efaa0e915c03de7720804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structpsp__alias.html</anchorfile>
      <anchor>a524d095da8ad9283c0af44e4a0f3b28</anchor>
      <arglist>[MAX_LIB_ENTRY_NAME+1]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>alias</name>
      <anchorfile>structpsp__alias.html</anchorfile>
      <anchor>1814917da33e38fed0b3b9907c136b44</anchor>
      <arglist>[MAX_LIB_ENTRY_NAME+1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>psp_audio_channelinfo</name>
    <filename>structpsp__audio__channelinfo.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>threadhandle</name>
      <anchorfile>structpsp__audio__channelinfo.html</anchorfile>
      <anchor>264f8f556cf15ac4ec43a9b29e7e2294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>handle</name>
      <anchorfile>structpsp__audio__channelinfo.html</anchorfile>
      <anchor>3c25671852bcc0fc83c2c128436f5267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>volumeleft</name>
      <anchorfile>structpsp__audio__channelinfo.html</anchorfile>
      <anchor>52c1c5a2b759e9ed0a3757bdf376a890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>volumeright</name>
      <anchorfile>structpsp__audio__channelinfo.html</anchorfile>
      <anchor>8afd1dd2adfb7c62ea5ab4a40a6d910e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pspAudioCallback_t</type>
      <name>callback</name>
      <anchorfile>structpsp__audio__channelinfo.html</anchorfile>
      <anchor>52179e856b3960d582a11cbf7206c12b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pdata</name>
      <anchorfile>structpsp__audio__channelinfo.html</anchorfile>
      <anchor>af045562d2791a3b9f9ca317d89bc79e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>psp_export</name>
    <filename>structpsp__export.html</filename>
    <member kind="variable">
      <type>psp_export *</type>
      <name>pNext</name>
      <anchorfile>structpsp__export.html</anchorfile>
      <anchor>a0ae62cafb6172850730772131cc7830</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nid</name>
      <anchorfile>structpsp__export.html</anchorfile>
      <anchor>889daa63c507d0924af2599d88b77d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structpsp__export.html</anchorfile>
      <anchor>cc216f8c8d09e6e27b631b43ab019967</anchor>
      <arglist>[MAX_LIB_ENTRY_NAME+1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>psp_lib</name>
    <filename>structpsp__lib.html</filename>
    <member kind="variable">
      <type>psp_lib *</type>
      <name>pNext</name>
      <anchorfile>structpsp__lib.html</anchorfile>
      <anchor>c941616eb3f7ddb33f0b9804b528fbd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structpsp__lib.html</anchorfile>
      <anchor>dab2064749c8c3b4ec524d586d83129e</anchor>
      <arglist>[MAX_LIB_NAME+1]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>ver</name>
      <anchorfile>structpsp__lib.html</anchorfile>
      <anchor>f591ea5b58a42e4c59b0f444480745f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>attr</name>
      <anchorfile>structpsp__lib.html</anchorfile>
      <anchor>d40f69ee2e020f626dd1d227a5391666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>funcCount</name>
      <anchorfile>structpsp__lib.html</anchorfile>
      <anchor>86def0d5138260f57abfcbaf79790b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>psp_export *</type>
      <name>pFuncHead</name>
      <anchorfile>structpsp__lib.html</anchorfile>
      <anchor>42b94dce62b15b2aff9fb481d91dc170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>varCount</name>
      <anchorfile>structpsp__lib.html</anchorfile>
      <anchor>0ef0c5bbbc572478b82ad7833c7e9ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>psp_export *</type>
      <name>pVarHead</name>
      <anchorfile>structpsp__lib.html</anchorfile>
      <anchor>f325ce388f3b9d6bbe3d569df2140f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>psp_alias *</type>
      <name>pAliasHead</name>
      <anchorfile>structpsp__lib.html</anchorfile>
      <anchor>c9d932d319d0a1d826b75f41973f511b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspEntry</name>
    <filename>structPspEntry.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structPspEntry.html</anchorfile>
      <anchor>be8601aa50ece1a59a1aa43cfe8d91f0</anchor>
      <arglist>[PSP_ENTRY_MAX_NAME]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nid</name>
      <anchorfile>structPspEntry.html</anchorfile>
      <anchor>efd61528229c8e8b38fd5fcf83cf4c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum PspEntryType</type>
      <name>type</name>
      <anchorfile>structPspEntry.html</anchorfile>
      <anchor>d0e3b8fc6044549707bf82b78ba27de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>addr</name>
      <anchorfile>structPspEntry.html</anchorfile>
      <anchor>b577394788b7e03d4e3561711874a15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nid_addr</name>
      <anchorfile>structPspEntry.html</anchorfile>
      <anchor>b576f07a8f560e1118c1f2941ee6ab0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspGeCallbackData</name>
    <filename>structPspGeCallbackData.html</filename>
    <member kind="variable">
      <type>PspGeCallback</type>
      <name>signal_func</name>
      <anchorfile>structPspGeCallbackData.html</anchorfile>
      <anchor>75b6124ba7a81627f55cc20765c827bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>signal_arg</name>
      <anchorfile>structPspGeCallbackData.html</anchorfile>
      <anchor>9bb193af6e0cba247f40892515ad0b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspGeCallback</type>
      <name>finish_func</name>
      <anchorfile>structPspGeCallbackData.html</anchorfile>
      <anchor>49965928ee64a728d399569941690e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>finish_arg</name>
      <anchorfile>structPspGeCallbackData.html</anchorfile>
      <anchor>1a8a8c6ae4c8e049d4d3d0c1036a3c8c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspGeContext</name>
    <filename>structPspGeContext.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>context</name>
      <anchorfile>structPspGeContext.html</anchorfile>
      <anchor>0855397db27ddcf081bf363bdb3eeb7c</anchor>
      <arglist>[512]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspIoDrv</name>
    <filename>structPspIoDrv.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>structPspIoDrv.html</anchorfile>
      <anchor>bbec0dcd07b2b88bda290d6f191bca80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>dev_type</name>
      <anchorfile>structPspIoDrv.html</anchorfile>
      <anchor>5c5a961bee649117d6fc04793a522f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>unk2</name>
      <anchorfile>structPspIoDrv.html</anchorfile>
      <anchor>db7d83110473d7b63d62fa2f2214d0ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>name2</name>
      <anchorfile>structPspIoDrv.html</anchorfile>
      <anchor>8e86a56d4ac048998f029ddfceb778ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspIoDrvFuncs *</type>
      <name>funcs</name>
      <anchorfile>structPspIoDrv.html</anchorfile>
      <anchor>5ba99e4fca03c7fbf6b22b30cf4fd2c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspIoDrvArg</name>
    <filename>structPspIoDrvArg.html</filename>
    <member kind="variable">
      <type>PspIoDrv *</type>
      <name>drv</name>
      <anchorfile>structPspIoDrvArg.html</anchorfile>
      <anchor>91f3fab2f593b1bb1d213c54e512bc9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>structPspIoDrvArg.html</anchorfile>
      <anchor>08a31da5988fab13e7f4c66392c4cf16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspIoDrvFileArg</name>
    <filename>structPspIoDrvFileArg.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>unk1</name>
      <anchorfile>structPspIoDrvFileArg.html</anchorfile>
      <anchor>18f1d2166d9c7bb2eaa1701fddf85aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>fs_num</name>
      <anchorfile>structPspIoDrvFileArg.html</anchorfile>
      <anchor>559012d3c9b88dce836e268b40ec635a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspIoDrvArg *</type>
      <name>drv</name>
      <anchorfile>structPspIoDrvFileArg.html</anchorfile>
      <anchor>cb67d4a0b6d84d29d70bb5cad1133aa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>unk2</name>
      <anchorfile>structPspIoDrvFileArg.html</anchorfile>
      <anchor>fb047583b9e35207e59851d6a62a2a75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>structPspIoDrvFileArg.html</anchorfile>
      <anchor>c6b6764b3f2f012660a2e1f42ae22f33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspIoDrvFuncs</name>
    <filename>structPspIoDrvFuncs.html</filename>
    <member kind="variable">
      <type>int(*</type>
      <name>IoInit</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>abfc9f59805638a2637ca6891747cac8</anchor>
      <arglist>)(PspIoDrvArg *arg)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoExit</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>1318ec01e97e933e846440b060173151</anchor>
      <arglist>)(PspIoDrvArg *arg)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoOpen</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>d68d0bbe01699693192bc578c0fca5f2</anchor>
      <arglist>)(PspIoDrvFileArg *arg, char *file, int flags, SceMode mode)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoClose</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>e28fe2a28419c30540b578a96220e905</anchor>
      <arglist>)(PspIoDrvFileArg *arg)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoRead</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>ac504093732563c1c16ab82a56892ef9</anchor>
      <arglist>)(PspIoDrvFileArg *arg, char *data, int len)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoWrite</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>1c858bab5d3785c37ade6f8efe101057</anchor>
      <arglist>)(PspIoDrvFileArg *arg, const char *data, int len)</arglist>
    </member>
    <member kind="variable">
      <type>SceOff(*</type>
      <name>IoLseek</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>3364ac305bbc93b3bcb83c1f323f616c</anchor>
      <arglist>)(PspIoDrvFileArg *arg, SceOff ofs, int whence)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoIoctl</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>f3e0680afebcf722dcc73a376ae2dc38</anchor>
      <arglist>)(PspIoDrvFileArg *arg, unsigned int cmd, void *indata, int inlen, void *outdata, int outlen)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoRemove</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>959241def831b1be741879ba06eb1cfe</anchor>
      <arglist>)(PspIoDrvFileArg *arg, const char *name)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoMkdir</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>3e056ff10753965a1fd73a3bf53633f6</anchor>
      <arglist>)(PspIoDrvFileArg *arg, const char *name, SceMode mode)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoRmdir</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>546d56975d7c82631a48b4445cc651cb</anchor>
      <arglist>)(PspIoDrvFileArg *arg, const char *name)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoDopen</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>3c9df8ba0cdc6dac7418fbd8ceecaa0f</anchor>
      <arglist>)(PspIoDrvFileArg *arg, const char *dirname)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoDclose</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>a2a7b41e651412bddaf6c3765a002dc7</anchor>
      <arglist>)(PspIoDrvFileArg *arg)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoDread</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>02f781ef67d10447906afd46af739d73</anchor>
      <arglist>)(PspIoDrvFileArg *arg, SceIoDirent *dir)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoGetstat</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>c88355c848b59629830c66f6d4d399cc</anchor>
      <arglist>)(PspIoDrvFileArg *arg, const char *file, SceIoStat *stat)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoChstat</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>7cb17653efbc29a8075c10c7d9e3de96</anchor>
      <arglist>)(PspIoDrvFileArg *arg, const char *file, SceIoStat *stat, int bits)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoRename</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>1ba5905b56c007167cd88d42733f6900</anchor>
      <arglist>)(PspIoDrvFileArg *arg, const char *oldname, const char *newname)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoChdir</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>b2ed4de479a761b74b2234d5f17208d0</anchor>
      <arglist>)(PspIoDrvFileArg *arg, const char *dir)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoMount</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>b14ded140ab39617b7a22a1875ee9757</anchor>
      <arglist>)(PspIoDrvFileArg *arg)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoUmount</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>e4afd339570a1427fefb7ed072f6cd43</anchor>
      <arglist>)(PspIoDrvFileArg *arg)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoDevctl</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>34a0911abdccea9f5d379013d28a6e54</anchor>
      <arglist>)(PspIoDrvFileArg *arg, const char *devname, unsigned int cmd, void *indata, int inlen, void *outdata, int outlen)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>IoUnk21</name>
      <anchorfile>structPspIoDrvFuncs.html</anchorfile>
      <anchor>4d975272822273668812177ac5561215</anchor>
      <arglist>)(PspIoDrvFileArg *arg)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspLibExport</name>
    <filename>structPspLibExport.html</filename>
    <member kind="variable">
      <type>PspLibExport *</type>
      <name>prev</name>
      <anchorfile>structPspLibExport.html</anchorfile>
      <anchor>07b9b702ea865a5d30ee1d992f4cfbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspLibExport *</type>
      <name>next</name>
      <anchorfile>structPspLibExport.html</anchorfile>
      <anchor>dc1efb770dd535382a7f5f440e434bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structPspLibExport.html</anchorfile>
      <anchor>1f67fb5f18d5ed86527d2853e5aab42f</anchor>
      <arglist>[PSP_LIB_MAX_NAME]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>addr</name>
      <anchorfile>structPspLibExport.html</anchorfile>
      <anchor>0efa017610b0cf0f0308b2f58e535432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspModuleExport</type>
      <name>stub</name>
      <anchorfile>structPspLibExport.html</anchorfile>
      <anchor>cf904ccc5f09758d9acd1ab706d58d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspEntry</type>
      <name>funcs</name>
      <anchorfile>structPspLibExport.html</anchorfile>
      <anchor>3d28b26bbc029e73410b4ac06a8fdd9c</anchor>
      <arglist>[PSP_MAX_F_ENTRIES]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>f_count</name>
      <anchorfile>structPspLibExport.html</anchorfile>
      <anchor>30d076717575603ccb6d88b59e82cc6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspEntry</type>
      <name>vars</name>
      <anchorfile>structPspLibExport.html</anchorfile>
      <anchor>f9d0c2ffb9e03f0f08a8c947edcd1a5f</anchor>
      <arglist>[PSP_MAX_V_ENTRIES]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>v_count</name>
      <anchorfile>structPspLibExport.html</anchorfile>
      <anchor>4f31d7fd80b2fe84a6a7dffc6196a23a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspLibImport</name>
    <filename>structPspLibImport.html</filename>
    <member kind="variable">
      <type>PspLibImport *</type>
      <name>prev</name>
      <anchorfile>structPspLibImport.html</anchorfile>
      <anchor>f0f187f0f0915a749bfb44bb61100c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspLibImport *</type>
      <name>next</name>
      <anchorfile>structPspLibImport.html</anchorfile>
      <anchor>0863272fe3cf966cefed2b7277a1d78a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structPspLibImport.html</anchorfile>
      <anchor>046ef97c8ab409c964b2c7791f0517cb</anchor>
      <arglist>[PSP_LIB_MAX_NAME]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>addr</name>
      <anchorfile>structPspLibImport.html</anchorfile>
      <anchor>6b7f093b5c43824875abe02c1f17ac2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspModuleImport</type>
      <name>stub</name>
      <anchorfile>structPspLibImport.html</anchorfile>
      <anchor>39fcf3033a35323e8a0df432eecb852a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspEntry</type>
      <name>funcs</name>
      <anchorfile>structPspLibImport.html</anchorfile>
      <anchor>2ea384a41a0eb8cdc29261b477c68eef</anchor>
      <arglist>[PSP_MAX_F_ENTRIES]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>f_count</name>
      <anchorfile>structPspLibImport.html</anchorfile>
      <anchor>5822589957cc6f6ecda961336d54102e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspEntry</type>
      <name>vars</name>
      <anchorfile>structPspLibImport.html</anchorfile>
      <anchor>6b184c731b054471384fc26c724ad616</anchor>
      <arglist>[PSP_MAX_V_ENTRIES]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>v_count</name>
      <anchorfile>structPspLibImport.html</anchorfile>
      <anchor>34ee55cd033a580c52f5bfce67d7a834</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspModule</name>
    <filename>structPspModule.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structPspModule.html</anchorfile>
      <anchor>76b08c54f42bc7e3c6be70f7fd231d25</anchor>
      <arglist>[PSP_MODULE_MAX_NAME+1]</arglist>
    </member>
    <member kind="variable">
      <type>PspModuleInfo</type>
      <name>info</name>
      <anchorfile>structPspModule.html</anchorfile>
      <anchor>dcc93ed3e948172d695a38497d610ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>addr</name>
      <anchorfile>structPspModule.html</anchorfile>
      <anchor>a55cc5040ef5ce91a80e95db0f073622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspLibExport *</type>
      <name>exp_head</name>
      <anchorfile>structPspModule.html</anchorfile>
      <anchor>991699ad436247b57c4aaac368b7878a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspLibImport *</type>
      <name>imp_head</name>
      <anchorfile>structPspModule.html</anchorfile>
      <anchor>49c8617c883925fbd8b4f2ef1084ecd0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspModuleExport</name>
    <filename>structPspModuleExport.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>structPspModuleExport.html</anchorfile>
      <anchor>1b2652d7f96780cf613d662ab3b71bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>flags</name>
      <anchorfile>structPspModuleExport.html</anchorfile>
      <anchor>721cc4c67c659487facb4ab10e9e2c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>unk</name>
      <anchorfile>structPspModuleExport.html</anchorfile>
      <anchor>49e7ef5c3accf31e614bf9ed3dbe364c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>v_count</name>
      <anchorfile>structPspModuleExport.html</anchorfile>
      <anchor>ae132ccf4ab62eaedfafdac03a4dda93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>f_count</name>
      <anchorfile>structPspModuleExport.html</anchorfile>
      <anchor>3e5020c7d53266102bdb4116fcf63d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32 *</type>
      <name>exports</name>
      <anchorfile>structPspModuleExport.html</anchorfile>
      <anchor>68b5cf83fd1355f3b67afb5e8ded2bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>name</name>
      <anchorfile>structPspModuleExport.html</anchorfile>
      <anchor>be41fc7f37399b6255b7f378d5232309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>counts</name>
      <anchorfile>structPspModuleExport.html</anchorfile>
      <anchor>3e6184cb617fc481941e5847fcca2e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>exports</name>
      <anchorfile>structPspModuleExport.html</anchorfile>
      <anchor>af6b0b7a636d255ef8a2fa5f918c2638</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspModuleImport</name>
    <filename>structPspModuleImport.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>name</name>
      <anchorfile>structPspModuleImport.html</anchorfile>
      <anchor>014986d6302a495b44e77c66cd966487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>flags</name>
      <anchorfile>structPspModuleImport.html</anchorfile>
      <anchor>c0bf3f1e2da7af262eb4c7979110c09a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>entry_size</name>
      <anchorfile>structPspModuleImport.html</anchorfile>
      <anchor>63f31c623385f318c92f00ab2623452e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>var_count</name>
      <anchorfile>structPspModuleImport.html</anchorfile>
      <anchor>9f63c78d7e6ed17f32cfd5dd0741d7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>func_count</name>
      <anchorfile>structPspModuleImport.html</anchorfile>
      <anchor>26a78863dc7742b6a804ea3427139448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>nids</name>
      <anchorfile>structPspModuleImport.html</anchorfile>
      <anchor>7b048755ceb9e68d7ae28b15439fbf5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>funcs</name>
      <anchorfile>structPspModuleImport.html</anchorfile>
      <anchor>9eaab02f350b14bcf32eb97f463ce7e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspModuleInfo</name>
    <filename>structPspModuleInfo.html</filename>
    <member kind="variable">
      <type>u32</type>
      <name>flags</name>
      <anchorfile>structPspModuleInfo.html</anchorfile>
      <anchor>a5f3af80f9bc6db0fcb11ca83a8c5892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structPspModuleInfo.html</anchorfile>
      <anchor>5a37c7996dc7f559cd8a70d9e786f550</anchor>
      <arglist>[PSP_MODULE_MAX_NAME]</arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>gp</name>
      <anchorfile>structPspModuleInfo.html</anchorfile>
      <anchor>561f476eb43cd118c93bd5d452fd84af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>exports</name>
      <anchorfile>structPspModuleInfo.html</anchorfile>
      <anchor>1e5d8f8e49888eb6226d28ce48ceea60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>exp_end</name>
      <anchorfile>structPspModuleInfo.html</anchorfile>
      <anchor>8e13d2109a685274493aff9aa6b0c50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>imports</name>
      <anchorfile>structPspModuleInfo.html</anchorfile>
      <anchor>9b159baaade6d8d3deda1e34cc6c296f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>imp_end</name>
      <anchorfile>structPspModuleInfo.html</anchorfile>
      <anchor>145e3d25066500375a2783dfac125804</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pspTime</name>
    <filename>structpspTime.html</filename>
    <member kind="variable">
      <type>u16</type>
      <name>year</name>
      <anchorfile>structpspTime.html</anchorfile>
      <anchor>41dfae10401d491af614cfbe044fea07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>month</name>
      <anchorfile>structpspTime.html</anchorfile>
      <anchor>aac165b6d9f06d906438405a73a78326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>day</name>
      <anchorfile>structpspTime.html</anchorfile>
      <anchor>0f81be4eb06706664d629e0979e3854c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>hour</name>
      <anchorfile>structpspTime.html</anchorfile>
      <anchor>a497bb3ff92e5d605a7188528d346b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>minutes</name>
      <anchorfile>structpspTime.html</anchorfile>
      <anchor>562a1c39477ec684eda621429f4de08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>seconds</name>
      <anchorfile>structpspTime.html</anchorfile>
      <anchor>1aa1ecff346d07d1fed38fcbc703fb1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>microseconds</name>
      <anchorfile>structpspTime.html</anchorfile>
      <anchor>e1f8e22c5facc51746e76437d29fdc2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspUtilitySavedataFileData</name>
    <filename>structPspUtilitySavedataFileData.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>buf</name>
      <anchorfile>structPspUtilitySavedataFileData.html</anchorfile>
      <anchor>d9e2db0b4487e8c4883084667bb4df4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceSize</type>
      <name>bufSize</name>
      <anchorfile>structPspUtilitySavedataFileData.html</anchorfile>
      <anchor>653f27adbbcdee4825506fd2fa388add</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structPspUtilitySavedataFileData.html</anchorfile>
      <anchor>58f7bf67c3a4c2a8e3fac12ac833937d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unknown</name>
      <anchorfile>structPspUtilitySavedataFileData.html</anchorfile>
      <anchor>00ea2abd2f5476ef208e893f7551ac25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PspUtilitySavedataSFOParam</name>
    <filename>structPspUtilitySavedataSFOParam.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>title</name>
      <anchorfile>structPspUtilitySavedataSFOParam.html</anchorfile>
      <anchor>413c968a5bcf8ec86895a724cb595f18</anchor>
      <arglist>[0x80]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>savedataTitle</name>
      <anchorfile>structPspUtilitySavedataSFOParam.html</anchorfile>
      <anchor>3c9a2a4979bad8ddec51c090b580b115</anchor>
      <arglist>[0x80]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>detail</name>
      <anchorfile>structPspUtilitySavedataSFOParam.html</anchorfile>
      <anchor>87a3c461520c7bb1b3bd944e750533f7</anchor>
      <arglist>[0x400]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>parentalLevel</name>
      <anchorfile>structPspUtilitySavedataSFOParam.html</anchorfile>
      <anchor>92b5fb5c3bcf2aaaa7e9f11715b33971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>unknown</name>
      <anchorfile>structPspUtilitySavedataSFOParam.html</anchorfile>
      <anchor>a12f1a42c5731634ba6b33de3d7a2a1b</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pspvfpu_context</name>
    <filename>structpspvfpu__context.html</filename>
    <member kind="function">
      <type>float fpregs[4 *4 *NMAT]</type>
      <name>__attribute__</name>
      <anchorfile>structpspvfpu__context.html</anchorfile>
      <anchor>166a3b3e84d6c7bd29d29647e2a1a8f0</anchor>
      <arglist>((aligned(VFPU_ALIGNMENT)))</arglist>
    </member>
    <member kind="variable">
      <type>vfpumatrixset_t</type>
      <name>valid</name>
      <anchorfile>structpspvfpu__context.html</anchorfile>
      <anchor>126578557d58366ac8637f1f612bee7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vfpumatrixset_t</type>
      <name>owned</name>
      <anchorfile>structpspvfpu__context.html</anchorfile>
      <anchor>0ffbd35beb129415132b3876042e3dcc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rawarc</name>
    <filename>structrawarc.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>frompc</name>
      <anchorfile>structrawarc.html</anchorfile>
      <anchor>0e1c198369348b3a23253cca5d129bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>selfpc</name>
      <anchorfile>structrawarc.html</anchorfile>
      <anchor>6a682950e0305d11b9b0a622e5857545</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>count</name>
      <anchorfile>structrawarc.html</anchorfile>
      <anchor>0787fc6c1809e63be90350d8d2c66c0d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RegParam</name>
    <filename>structRegParam.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>regtype</name>
      <anchorfile>structRegParam.html</anchorfile>
      <anchor>971e8d38a37107ef19943e1e70e752a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structRegParam.html</anchorfile>
      <anchor>4534ea90d96cea2cce4341885b018dfb</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>namelen</name>
      <anchorfile>structRegParam.html</anchorfile>
      <anchor>c8253e761f17748edaa2fb5afe3ee5a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>unk2</name>
      <anchorfile>structRegParam.html</anchorfile>
      <anchor>94ce719d29ef97e25a2c44927a3a740b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>unk3</name>
      <anchorfile>structRegParam.html</anchorfile>
      <anchor>c4acbf81d003d5e767eeb2434428fcc8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>s_strargument</name>
    <filename>structs__strargument.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>next</name>
      <anchorfile>structs__strargument.html</anchorfile>
      <anchor>458f726f0e0236cf4479866179848833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>last</name>
      <anchorfile>structs__strargument.html</anchorfile>
      <anchor>76601eff1c7f85fd20924ae21933490d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceCtrlData</name>
    <filename>structSceCtrlData.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>TimeStamp</name>
      <anchorfile>structSceCtrlData.html</anchorfile>
      <anchor>a0b659eae86539adeb1158359c94c408</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>Buttons</name>
      <anchorfile>structSceCtrlData.html</anchorfile>
      <anchor>ac5e33ff43d405f96cc6ed74dcbc4717</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>Lx</name>
      <anchorfile>structSceCtrlData.html</anchorfile>
      <anchor>303de117f8ad5c5ff0839f7e7f9f4b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>Ly</name>
      <anchorfile>structSceCtrlData.html</anchorfile>
      <anchor>daaf55560bc3aa51cd744fcb4d1bb424</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>Rsrv</name>
      <anchorfile>structSceCtrlData.html</anchorfile>
      <anchor>b49444206b75043ef737a6328a359697</anchor>
      <arglist>[6]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceCtrlLatch</name>
    <filename>structSceCtrlLatch.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>uiMake</name>
      <anchorfile>structSceCtrlLatch.html</anchorfile>
      <anchor>a55505729896e0f8b81dd37ae81f849f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>uiBreak</name>
      <anchorfile>structSceCtrlLatch.html</anchorfile>
      <anchor>fdd4b4c8fa1dc9cde6ef60b41d438eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>uiPress</name>
      <anchorfile>structSceCtrlLatch.html</anchorfile>
      <anchor>93bb0553c8ce28e0e4561d585a38c29a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>uiRelease</name>
      <anchorfile>structSceCtrlLatch.html</anchorfile>
      <anchor>778f6e27a73d8d2296b9bab1f8c917dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceIoDirent</name>
    <filename>structSceIoDirent.html</filename>
    <member kind="variable">
      <type>SceIoStat</type>
      <name>d_stat</name>
      <anchorfile>structSceIoDirent.html</anchorfile>
      <anchor>3a4bcbbc3ff31daf29269f6edd0ef058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>d_name</name>
      <anchorfile>structSceIoDirent.html</anchorfile>
      <anchor>26afa621714ed02e988a758c8e69496a</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>d_private</name>
      <anchorfile>structSceIoDirent.html</anchorfile>
      <anchor>3a5a0bd642cc54433fbeca9ce1d10682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dummy</name>
      <anchorfile>structSceIoDirent.html</anchorfile>
      <anchor>c2a6943eda6b27d5c20d6389ad9ab680</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceIoStat</name>
    <filename>structSceIoStat.html</filename>
    <member kind="variable">
      <type>SceMode</type>
      <name>st_mode</name>
      <anchorfile>structSceIoStat.html</anchorfile>
      <anchor>432ee7ab09142b707686e318ae5f8f83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>st_attr</name>
      <anchorfile>structSceIoStat.html</anchorfile>
      <anchor>f32aa0a6b11893ba19b2d369159830cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceOff</type>
      <name>st_size</name>
      <anchorfile>structSceIoStat.html</anchorfile>
      <anchor>67a3e4e86264a440da54204caeeafb16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspDateTime</type>
      <name>st_ctime</name>
      <anchorfile>structSceIoStat.html</anchorfile>
      <anchor>252dd5c7ca01496c2d0ad2d79cb7794c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspDateTime</type>
      <name>st_atime</name>
      <anchorfile>structSceIoStat.html</anchorfile>
      <anchor>edd44da5256aa23f13dfb9e116142584</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspDateTime</type>
      <name>st_mtime</name>
      <anchorfile>structSceIoStat.html</anchorfile>
      <anchor>c2eb220880f258d48d1220fffd6a3fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>st_private</name>
      <anchorfile>structSceIoStat.html</anchorfile>
      <anchor>f7b69aca53d97b66ebebfa7d2c7309a8</anchor>
      <arglist>[6]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelAlarmInfo</name>
    <filename>structSceKernelAlarmInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelAlarmInfo.html</anchorfile>
      <anchor>09d0d7ca2cc9d4c1e815e5b039629be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelSysClock</type>
      <name>schedule</name>
      <anchorfile>structSceKernelAlarmInfo.html</anchorfile>
      <anchor>11f57569607c5d1c83ee5255129fc5ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelAlarmHandler</type>
      <name>handler</name>
      <anchorfile>structSceKernelAlarmInfo.html</anchorfile>
      <anchor>4351cab82b217b65060c41b487de829c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>common</name>
      <anchorfile>structSceKernelAlarmInfo.html</anchorfile>
      <anchor>cf01a66bfc362b4bc5992bbd1a38486c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelCallbackInfo</name>
    <filename>structSceKernelCallbackInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelCallbackInfo.html</anchorfile>
      <anchor>eaa2262448be6179eeb02d4a0c377e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelCallbackInfo.html</anchorfile>
      <anchor>4e1008ecf923b84c9f0e9e5d8c8ae3e7</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>SceUID</type>
      <name>threadId</name>
      <anchorfile>structSceKernelCallbackInfo.html</anchorfile>
      <anchor>30c183d7fa234de1fce25b2ea3a3f10a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelCallbackFunction</type>
      <name>callback</name>
      <anchorfile>structSceKernelCallbackInfo.html</anchorfile>
      <anchor>8fb49b90f496e6ee191ac96806873f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>common</name>
      <anchorfile>structSceKernelCallbackInfo.html</anchorfile>
      <anchor>16a6314cf9df4fc14ac355fca96937f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>notifyCount</name>
      <anchorfile>structSceKernelCallbackInfo.html</anchorfile>
      <anchor>1aaf328ab83967373b9281c4e3ea45c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>notifyArg</name>
      <anchorfile>structSceKernelCallbackInfo.html</anchorfile>
      <anchor>a12bebd86b0409c380eaebbe3d401ffc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelEventFlagInfo</name>
    <filename>structSceKernelEventFlagInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelEventFlagInfo.html</anchorfile>
      <anchor>7d83fadd88ac0ee793fb83223aa13b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelEventFlagInfo.html</anchorfile>
      <anchor>6b13b15e78983de6c0e77d09063bb76e</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>attr</name>
      <anchorfile>structSceKernelEventFlagInfo.html</anchorfile>
      <anchor>db5597c90a7d070a541ae07853af68e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>initPattern</name>
      <anchorfile>structSceKernelEventFlagInfo.html</anchorfile>
      <anchor>19ff2cb23dbc31cfa5d5dd8352acc31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>currentPattern</name>
      <anchorfile>structSceKernelEventFlagInfo.html</anchorfile>
      <anchor>2438485d1f7da3a179148d5ac0ce6627</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numWaitThreads</name>
      <anchorfile>structSceKernelEventFlagInfo.html</anchorfile>
      <anchor>0bedc86144a6d5a4cbe7f5ed44e02918</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelEventFlagOptParam</name>
    <filename>structSceKernelEventFlagOptParam.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelEventFlagOptParam.html</anchorfile>
      <anchor>2e5b7f14aeaca58e3eea53cf7b8711e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelFplInfo</name>
    <filename>structSceKernelFplInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelFplInfo.html</anchorfile>
      <anchor>8c40460105b7abc8f0de2c33ad132f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelFplInfo.html</anchorfile>
      <anchor>522fc4623d01ea68f9f0b70ff1af8ae4</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>attr</name>
      <anchorfile>structSceKernelFplInfo.html</anchorfile>
      <anchor>886594b75933b0f6bb2d5371713ce330</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>structSceKernelFplInfo.html</anchorfile>
      <anchor>d7273cfe5671c4d66c70e1b30fa4ffa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numBlocks</name>
      <anchorfile>structSceKernelFplInfo.html</anchorfile>
      <anchor>76d4f2bb4c013b3227e284f76d5f06d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>freeBlocks</name>
      <anchorfile>structSceKernelFplInfo.html</anchorfile>
      <anchor>913e62de0a347fecb735baebe065526a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numWaitThreads</name>
      <anchorfile>structSceKernelFplInfo.html</anchorfile>
      <anchor>10faa0740685961245f3dc500a2e1e3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelFplOptParam</name>
    <filename>structSceKernelFplOptParam.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelFplOptParam.html</anchorfile>
      <anchor>91ccc58a527ce3183744be996a6bb098</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelLMOption</name>
    <filename>structSceKernelLMOption.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelLMOption.html</anchorfile>
      <anchor>4e35c721c22b0855672bb6e3f6cded25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUID</type>
      <name>mpidtext</name>
      <anchorfile>structSceKernelLMOption.html</anchorfile>
      <anchor>74c601faa4c529a49a4a8c69378b4493</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUID</type>
      <name>mpiddata</name>
      <anchorfile>structSceKernelLMOption.html</anchorfile>
      <anchor>ec58524332146e708769b71052ef6dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>flags</name>
      <anchorfile>structSceKernelLMOption.html</anchorfile>
      <anchor>f9cfebeea5240100c5a5493d5e485bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>position</name>
      <anchorfile>structSceKernelLMOption.html</anchorfile>
      <anchor>9379dacdb0c7bc968b45f079b5cbaa16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>access</name>
      <anchorfile>structSceKernelLMOption.html</anchorfile>
      <anchor>ac557dce4437677d2e1c3a8d37f99e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>creserved</name>
      <anchorfile>structSceKernelLMOption.html</anchorfile>
      <anchor>733dce002b2e147cac05924915dcbbf4</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelLoadExecParam</name>
    <filename>structSceKernelLoadExecParam.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelLoadExecParam.html</anchorfile>
      <anchor>69b46821007c064453e7c9f38a96efb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceSize</type>
      <name>args</name>
      <anchorfile>structSceKernelLoadExecParam.html</anchorfile>
      <anchor>86d9638c92d0f8e6e96fbdda627557ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>argp</name>
      <anchorfile>structSceKernelLoadExecParam.html</anchorfile>
      <anchor>1ff7170c54ad9b3aaeba9d707fa122ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>key</name>
      <anchorfile>structSceKernelLoadExecParam.html</anchorfile>
      <anchor>9c70f3c084997049dc4aefa789e4f6ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelMbxInfo</name>
    <filename>structSceKernelMbxInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelMbxInfo.html</anchorfile>
      <anchor>b39a884dbb06b58e14271f3904ae3b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelMbxInfo.html</anchorfile>
      <anchor>a5a7deecf6d919f042ee437be94bee3d</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>attr</name>
      <anchorfile>structSceKernelMbxInfo.html</anchorfile>
      <anchor>9b49696282d9c5b4e6bbb8cdde3b8af1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numWaitThreads</name>
      <anchorfile>structSceKernelMbxInfo.html</anchorfile>
      <anchor>ea49e2d42c4c4dac2ef2e6415d2d46ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numMessages</name>
      <anchorfile>structSceKernelMbxInfo.html</anchorfile>
      <anchor>c68596458fe41a855c74934a7c025ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>firstMessage</name>
      <anchorfile>structSceKernelMbxInfo.html</anchorfile>
      <anchor>f2b806b51e890b3f82246c2b93b3b68c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelMbxOptParam</name>
    <filename>structSceKernelMbxOptParam.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelMbxOptParam.html</anchorfile>
      <anchor>9f1baadf7c60f1ab9ed9e890b760e567</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelModuleInfo</name>
    <filename>structSceKernelModuleInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>6bc36956dd5c294e8f613adfb33730ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>nsegment</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>f87a969983a816a449689f7c5d4dd528</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>reserved</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>9fd07c435d869409329c4ec23e35be77</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>segmentaddr</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>8788c96dd290c447efc4f6b48855037d</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>segmentsize</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>83898f67175d5c8646d23d96406d7761</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>entry_addr</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>3c5ced5cc6f0b5342162236b5e4b62bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>gp_value</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>f83d8aeebd4d802e1778c9a4fe1a7cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>text_addr</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>f3e0bf485e7ac794f73b6aebc94bb955</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>text_size</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>c74eddf7c38929954ea9f3170d157932</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>data_size</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>a4c0d6ef27f77e87dbf187ed3117e99b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>bss_size</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>e8600a347ae6d06f06174b25764a25bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>attribute</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>0287c7c70cffcb7e24caa0806110af11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>version</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>fc495608627dbd5fc80050c832f30b32</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelModuleInfo.html</anchorfile>
      <anchor>0b78e344a135b03e472e9afe6fb996fd</anchor>
      <arglist>[28]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelMppInfo</name>
    <filename>structSceKernelMppInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelMppInfo.html</anchorfile>
      <anchor>199606da4067987da2d544fedad1bf82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelMppInfo.html</anchorfile>
      <anchor>ae628f64e5271d3da870390b6a24ad60</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>attr</name>
      <anchorfile>structSceKernelMppInfo.html</anchorfile>
      <anchor>dc8f23c529c8f34abbb649bbf8972ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufSize</name>
      <anchorfile>structSceKernelMppInfo.html</anchorfile>
      <anchor>14013b4a2d2a703a132d2cd9d3ba5b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>freeSize</name>
      <anchorfile>structSceKernelMppInfo.html</anchorfile>
      <anchor>f0e84d4e5a94d3f42c4413d7aa134000</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numSendWaitThreads</name>
      <anchorfile>structSceKernelMppInfo.html</anchorfile>
      <anchor>7cd057d9f68cb823d7c231d48cf88ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numReceiveWaitThreads</name>
      <anchorfile>structSceKernelMppInfo.html</anchorfile>
      <anchor>cc90b14de0ab83dd33cf208a1a94dc73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelSemaInfo</name>
    <filename>structSceKernelSemaInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelSemaInfo.html</anchorfile>
      <anchor>c9c2f4b85e3632e188ff51f48d8fa8e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelSemaInfo.html</anchorfile>
      <anchor>0498c9d74b2370ae188e24b13c12a971</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>attr</name>
      <anchorfile>structSceKernelSemaInfo.html</anchorfile>
      <anchor>a828681068d8cf1b644c53b2857db656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>initCount</name>
      <anchorfile>structSceKernelSemaInfo.html</anchorfile>
      <anchor>dfd8c09ff32bf0047269054e9d032c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>currentCount</name>
      <anchorfile>structSceKernelSemaInfo.html</anchorfile>
      <anchor>d0aef61d05f3ba87f555aecd2c81707d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxCount</name>
      <anchorfile>structSceKernelSemaInfo.html</anchorfile>
      <anchor>d5fafcca551c905a77ddfc090c8bc084</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numWaitThreads</name>
      <anchorfile>structSceKernelSemaInfo.html</anchorfile>
      <anchor>77ee30ffb32694f53a405f0e81aa9989</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelSemaOptParam</name>
    <filename>structSceKernelSemaOptParam.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelSemaOptParam.html</anchorfile>
      <anchor>a6a9268018fdc26fd09309dc422bd23f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelSMOption</name>
    <filename>structSceKernelSMOption.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelSMOption.html</anchorfile>
      <anchor>a89ba3a07a9e415918425441c96932a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUID</type>
      <name>mpidstack</name>
      <anchorfile>structSceKernelSMOption.html</anchorfile>
      <anchor>72a538962af090b17f28a17b46efec18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceSize</type>
      <name>stacksize</name>
      <anchorfile>structSceKernelSMOption.html</anchorfile>
      <anchor>906057a5526645251ea7988d81a22e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>priority</name>
      <anchorfile>structSceKernelSMOption.html</anchorfile>
      <anchor>8bba68731c855c285c69de3bb7bf8630</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>attribute</name>
      <anchorfile>structSceKernelSMOption.html</anchorfile>
      <anchor>7d24454f9541adf215f1dbc6e222fdae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelSysClock</name>
    <filename>structSceKernelSysClock.html</filename>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>low</name>
      <anchorfile>structSceKernelSysClock.html</anchorfile>
      <anchor>1460869b59345e9746bff2599f71e340</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>hi</name>
      <anchorfile>structSceKernelSysClock.html</anchorfile>
      <anchor>bb9402389ff8e1288332ba88f1b825a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelSystemStatus</name>
    <filename>structSceKernelSystemStatus.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelSystemStatus.html</anchorfile>
      <anchor>114c40823949a1dc395b4e4e11566ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>status</name>
      <anchorfile>structSceKernelSystemStatus.html</anchorfile>
      <anchor>8ffcd1a3ea9d3b1c4556df684c7bc5e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelSysClock</type>
      <name>idleClocks</name>
      <anchorfile>structSceKernelSystemStatus.html</anchorfile>
      <anchor>60e6cead9b891290c2c9ea0eb84a7392</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>comesOutOfIdleCount</name>
      <anchorfile>structSceKernelSystemStatus.html</anchorfile>
      <anchor>c984aab2d993cf971ae377ec80a3ac9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>threadSwitchCount</name>
      <anchorfile>structSceKernelSystemStatus.html</anchorfile>
      <anchor>7fd3f4b1a97bffea56ddca5f068f022f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>vfpuSwitchCount</name>
      <anchorfile>structSceKernelSystemStatus.html</anchorfile>
      <anchor>5d2e2fbee9bbc45b6495babe5e0f21b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelThreadEventHandlerInfo</name>
    <filename>structSceKernelThreadEventHandlerInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelThreadEventHandlerInfo.html</anchorfile>
      <anchor>6ecba9e88ced3073741e3bfd3cc4bfa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelThreadEventHandlerInfo.html</anchorfile>
      <anchor>d827c891b26350d9cfd6aba7213c5b20</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>SceUID</type>
      <name>threadId</name>
      <anchorfile>structSceKernelThreadEventHandlerInfo.html</anchorfile>
      <anchor>6a64b060935d829cc9a877f2a608f976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mask</name>
      <anchorfile>structSceKernelThreadEventHandlerInfo.html</anchorfile>
      <anchor>88af9e0c9406f9eb1fd6b9f420aee35b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelThreadEventHandler</type>
      <name>handler</name>
      <anchorfile>structSceKernelThreadEventHandlerInfo.html</anchorfile>
      <anchor>4cb7aef642bc6fa3bcfa13fb5bd6381d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>common</name>
      <anchorfile>structSceKernelThreadEventHandlerInfo.html</anchorfile>
      <anchor>2c2c3e94d2fbd4b6edd718652ab2b7e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelThreadInfo</name>
    <filename>structSceKernelThreadInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>69ef974c7579b7af777fcb98b202a6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>e56890fcacae673875d2d9eeefca3b17</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>attr</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>969add82ccac429c2ff0296a3a92fbcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>status</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>5714d029d7cf7bea143a47e9cdca1c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelThreadEntry</type>
      <name>entry</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>3ca76db6f243d1b628b21b1421a05582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>stack</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>6fa6536d29c24261e6c582ec89f35547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stackSize</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>3ea54db9fd9d81dc69a94ee56f3a6c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>gpReg</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>c63870794b389950d70d50c04654d209</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>initPriority</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>ca89b4d1d6e9c6a5b932a510b41c899a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>currentPriority</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>b3d6b7aeb997b809fd29078080115ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>waitType</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>d717dace76e451cc9acbc3d81e4341a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUID</type>
      <name>waitId</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>29c32a2783782173d9ccd785aece33ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>wakeupCount</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>0eb35ec74f744d3bb05d05134cfa8a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>exitStatus</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>1cae3fc7c5ea6f075950689c4e1b2cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelSysClock</type>
      <name>runClocks</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>ae5d077149cdb57c93f4b6509acded5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>intrPreemptCount</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>6aca98c6db3c1f55abb43588f98ea548</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>threadPreemptCount</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>1e3ab6232be9f798357ccdf1c01e3b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>releaseCount</name>
      <anchorfile>structSceKernelThreadInfo.html</anchorfile>
      <anchor>4fad5f882c4ab4f562cda0cdbca8ffe1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelThreadOptParam</name>
    <filename>structSceKernelThreadOptParam.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelThreadOptParam.html</anchorfile>
      <anchor>ee8d2288f7603805b4013c6524371aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUID</type>
      <name>stackMpid</name>
      <anchorfile>structSceKernelThreadOptParam.html</anchorfile>
      <anchor>3bef6fa6be4ecac03145ceeedd7b04a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelThreadRunStatus</name>
    <filename>structSceKernelThreadRunStatus.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelThreadRunStatus.html</anchorfile>
      <anchor>e5877005b3d0698e3d3ca53064b243b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>status</name>
      <anchorfile>structSceKernelThreadRunStatus.html</anchorfile>
      <anchor>635b7d333823f13ea26019bac5e90de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>currentPriority</name>
      <anchorfile>structSceKernelThreadRunStatus.html</anchorfile>
      <anchor>aaf42a13a4e716db9e51b5fb1aee3619</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>waitType</name>
      <anchorfile>structSceKernelThreadRunStatus.html</anchorfile>
      <anchor>32d46a6e5154e9a6247ecb6ff370ed43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>waitId</name>
      <anchorfile>structSceKernelThreadRunStatus.html</anchorfile>
      <anchor>34474a931b3f3f0524c8981da962f620</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>wakeupCount</name>
      <anchorfile>structSceKernelThreadRunStatus.html</anchorfile>
      <anchor>62f4d7a67e9b631bdf01ad2b46e4d883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelSysClock</type>
      <name>runClocks</name>
      <anchorfile>structSceKernelThreadRunStatus.html</anchorfile>
      <anchor>94529acfad9898eefc1cdf59d1c4aee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>intrPreemptCount</name>
      <anchorfile>structSceKernelThreadRunStatus.html</anchorfile>
      <anchor>12aa1a169da942a8b4d7556bb7fb9091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>threadPreemptCount</name>
      <anchorfile>structSceKernelThreadRunStatus.html</anchorfile>
      <anchor>00361adcb2ae7e2c96a974c1b61e3802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>releaseCount</name>
      <anchorfile>structSceKernelThreadRunStatus.html</anchorfile>
      <anchor>258c3aa01dd219d37d58ca3a4768a0c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelVplInfo</name>
    <filename>structSceKernelVplInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelVplInfo.html</anchorfile>
      <anchor>b8ebc44fd13e8ef95516bba88734268e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelVplInfo.html</anchorfile>
      <anchor>82107d31cc6de3404b865b5b7e1fd9a9</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>SceUInt</type>
      <name>attr</name>
      <anchorfile>structSceKernelVplInfo.html</anchorfile>
      <anchor>6dc3422c72b5144c838492bb9d4f86fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>poolSize</name>
      <anchorfile>structSceKernelVplInfo.html</anchorfile>
      <anchor>32f8138e8e9baa9b60dbfc345bebf6c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>freeSize</name>
      <anchorfile>structSceKernelVplInfo.html</anchorfile>
      <anchor>8fb5583f10ae4bcbd47bb5b81868b1bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numWaitThreads</name>
      <anchorfile>structSceKernelVplInfo.html</anchorfile>
      <anchor>6fcd043f0a42fc31e32a3359b3291ee8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelVplOptParam</name>
    <filename>structSceKernelVplOptParam.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelVplOptParam.html</anchorfile>
      <anchor>436b3b23f1f146aa99a25d45fc395428</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelVTimerInfo</name>
    <filename>structSceKernelVTimerInfo.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelVTimerInfo.html</anchorfile>
      <anchor>10177870f5538c519605668a696dd1bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSceKernelVTimerInfo.html</anchorfile>
      <anchor>866bb3b430fda90d144026da7e4c75fd</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>active</name>
      <anchorfile>structSceKernelVTimerInfo.html</anchorfile>
      <anchor>30ae8f92c10245451d8cc19d94dd6e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelSysClock</type>
      <name>base</name>
      <anchorfile>structSceKernelVTimerInfo.html</anchorfile>
      <anchor>8c99a645a24fbaf54322ae5ce8627298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelSysClock</type>
      <name>current</name>
      <anchorfile>structSceKernelVTimerInfo.html</anchorfile>
      <anchor>3ff0b4b8c3487aff4d83918a590d3720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelSysClock</type>
      <name>schedule</name>
      <anchorfile>structSceKernelVTimerInfo.html</anchorfile>
      <anchor>47932747750b4600a9383d65c5173af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceKernelVTimerHandler</type>
      <name>handler</name>
      <anchorfile>structSceKernelVTimerInfo.html</anchorfile>
      <anchor>dc33ad1778e03a0eeeed56e3d6626a54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>common</name>
      <anchorfile>structSceKernelVTimerInfo.html</anchorfile>
      <anchor>2de06cb28e92bb67c1438153ef6a0659</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceKernelVTimerOptParam</name>
    <filename>structSceKernelVTimerOptParam.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceKernelVTimerOptParam.html</anchorfile>
      <anchor>ebe10f75622316d0bb3d9227567f95fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceLibraryEntryTable</name>
    <filename>structSceLibraryEntryTable.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>libname</name>
      <anchorfile>structSceLibraryEntryTable.html</anchorfile>
      <anchor>f81a46c9f940187a8a6fd69c1626d12c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>version</name>
      <anchorfile>structSceLibraryEntryTable.html</anchorfile>
      <anchor>cdfb28cf9141bfa7bdbfb7ccf14a5e6d</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>attribute</name>
      <anchorfile>structSceLibraryEntryTable.html</anchorfile>
      <anchor>4644ba458b911e0ce3e46c2b6183a03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>len</name>
      <anchorfile>structSceLibraryEntryTable.html</anchorfile>
      <anchor>d0c085685c1b91d318cc4e2c50890058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>vstubcount</name>
      <anchorfile>structSceLibraryEntryTable.html</anchorfile>
      <anchor>721ef365aed1b7a713ef17e1ba07733a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>stubcount</name>
      <anchorfile>structSceLibraryEntryTable.html</anchorfile>
      <anchor>7f52c51ab7441c56b12fa0f54849147a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>entrytable</name>
      <anchorfile>structSceLibraryEntryTable.html</anchorfile>
      <anchor>4e1ab65178e1ca1cbf34d78a8e65a94b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceLibraryStubTable</name>
    <filename>structSceLibraryStubTable.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>libname</name>
      <anchorfile>structSceLibraryStubTable.html</anchorfile>
      <anchor>0ddc32494aae0a592083279df1879f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>version</name>
      <anchorfile>structSceLibraryStubTable.html</anchorfile>
      <anchor>0532735ba962b4ffe9c98521e4fae7a8</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>attribute</name>
      <anchorfile>structSceLibraryStubTable.html</anchorfile>
      <anchor>25a4a2a5c33ff4d7c0a0041a3e889912</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>len</name>
      <anchorfile>structSceLibraryStubTable.html</anchorfile>
      <anchor>58f8da51d9059cb56d5ca2af967c7e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>vstubcount</name>
      <anchorfile>structSceLibraryStubTable.html</anchorfile>
      <anchor>9c925cea359c50a8a71ec30925db25f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>stubcount</name>
      <anchorfile>structSceLibraryStubTable.html</anchorfile>
      <anchor>195940bb34de82931b3924c833870d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>nidtable</name>
      <anchorfile>structSceLibraryStubTable.html</anchorfile>
      <anchor>6e962e67b4c8e1cc75fecf06b9b260fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>stubtable</name>
      <anchorfile>structSceLibraryStubTable.html</anchorfile>
      <anchor>85a5d6eb85604a01b80e1718abcd61c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>vstubtable</name>
      <anchorfile>structSceLibraryStubTable.html</anchorfile>
      <anchor>208dd13f46b86a43c43589380e48c578</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceLibStubEntry</name>
    <filename>structSceLibStubEntry.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>moduleName</name>
      <anchorfile>structSceLibStubEntry.html</anchorfile>
      <anchor>5fa7a57a6b695a727c51ec19271b11f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>version</name>
      <anchorfile>structSceLibStubEntry.html</anchorfile>
      <anchor>6be88059bfb29a9421e5f2a85ea8cab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>attr</name>
      <anchorfile>structSceLibStubEntry.html</anchorfile>
      <anchor>48e5917488cd17d7528df3d47ed358e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>structsz</name>
      <anchorfile>structSceLibStubEntry.html</anchorfile>
      <anchor>9e16dab823da9bdbe5302a9ebfbad58d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>numVars</name>
      <anchorfile>structSceLibStubEntry.html</anchorfile>
      <anchor>079271bfd8d38b9753cd420343b9d158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>numFuncs</name>
      <anchorfile>structSceLibStubEntry.html</anchorfile>
      <anchor>811d04a09b5a82a24604cd3fb721b9f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32 *</type>
      <name>nidList</name>
      <anchorfile>structSceLibStubEntry.html</anchorfile>
      <anchor>2cf971b7489eb28e27f2a56179dfa133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32 *</type>
      <name>stubs</name>
      <anchorfile>structSceLibStubEntry.html</anchorfile>
      <anchor>ef4e5ef7000d65453d6510e406011a21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceModule</name>
    <filename>structSceModule.html</filename>
    <member kind="variable">
      <type>SceModule *</type>
      <name>next</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>c9534c5c2dab77002030f27a70dd6a19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>attribute</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>11771d6e5ab7f82142c439ee0c0583a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>version</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>af9547ff4af46b76e8418267088a3494</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>modname</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>33222c63cb59a7ec5cae7b75cdd09847</anchor>
      <arglist>[27]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>terminal</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>1415e3961f8bfb5b61dff5f1f41b0338</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>unknown1</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>07cc3b5444b231a63c3a1b26ae02a97a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>unknown2</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>a5c599f40cfdf0f34a92e3750dbcb7c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUID</type>
      <name>modid</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>17821d6c5a096534ca4ee6676ea3a020</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>unknown3</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>d4417723ed31739e332a8146d10c0f80</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ent_top</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>e527c8a8f61890ad71ea7a83aa8de89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ent_size</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>3da795096f85b4d5896ba523831909e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>stub_top</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>54218334d911d3abe7c19838020b019a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>stub_size</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>9290f3a674d49c57e1074e019cf13823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>unknown4</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>0c6f8555d6c006b181f1fa8c86a9c143</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>entry_addr</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>7c06dc8a89cfa4220736257e046c6914</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>gp_value</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>b870b2e165b065ee85dcfa1ae38c6479</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>text_addr</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>eace195f86505da4d24937acc8e9bbf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>text_size</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>2d8cfac72766dc9164a96ce35566c3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>data_size</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>366858eee90c033e666cd86488702104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>bss_size</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>815002802070789fa39f3e4ff623f199</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nsegment</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>c4344083893694d6a4114ea68f86a602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>segmentaddr</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>2c48b6e5ba37e05247e686142192b13c</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>segmentsize</name>
      <anchorfile>structSceModule.html</anchorfile>
      <anchor>e50a804371118edd0b79e9d9e75ff70a</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceMpegAu</name>
    <filename>structSceMpegAu.html</filename>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk0</name>
      <anchorfile>structSceMpegAu.html</anchorfile>
      <anchor>0fe80afc6bc948d8e544278cd02866cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceInt32</type>
      <name>iTimestamp</name>
      <anchorfile>structSceMpegAu.html</anchorfile>
      <anchor>be46c9b128813481ec29409a9a725e60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk1</name>
      <anchorfile>structSceMpegAu.html</anchorfile>
      <anchor>1f5a6776d14901c1dc9cdf320d5097c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk2</name>
      <anchorfile>structSceMpegAu.html</anchorfile>
      <anchor>ada5ed8b67186e39b5f3d0b157dd6701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk3</name>
      <anchorfile>structSceMpegAu.html</anchorfile>
      <anchor>33cc2f351b2a8086a79c19c3e26f62d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk4</name>
      <anchorfile>structSceMpegAu.html</anchorfile>
      <anchor>2acb392f58692459060403fee3d926f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceMpegAvcMode</name>
    <filename>structSceMpegAvcMode.html</filename>
    <member kind="variable">
      <type>SceInt32</type>
      <name>iUnk0</name>
      <anchorfile>structSceMpegAvcMode.html</anchorfile>
      <anchor>40036283ac4f37d8b6a5562bd3bfb7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceInt32</type>
      <name>iUnk1</name>
      <anchorfile>structSceMpegAvcMode.html</anchorfile>
      <anchor>a9330488ef1391d69b980537dac5240b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceMpegRingbuffer</name>
    <filename>structSceMpegRingbuffer.html</filename>
    <member kind="variable">
      <type>SceInt32</type>
      <name>iPackets</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>0356e6aa245fd9d3f93a57483a7b7b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk0</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>04e36e035e66fc40ebc2391d985bff3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk1</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>bc029db933a90232a76ee860b5ef32b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk2</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>c34d2bc6f4aedd77cabd5f04ce2447d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk3</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>ef4b7b3c4f93970f4df6fec140df1aab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePVoid</type>
      <name>pData</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>cfc2b07c4b0481896ada167952a1e537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sceMpegRingbufferCB</type>
      <name>Callback</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>987b96f3829ae1c0ac9fe290c88e0ff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePVoid</type>
      <name>pCBparam</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>3548e6f46cac02da8176690bf17ac816</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk4</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>313aa438ba798ea2e0de9f8b07ed2ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceUInt32</type>
      <name>iUnk5</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>146f49b17e1196ec2c68a4e3cbe97b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceMpeg</type>
      <name>pSceMpeg</name>
      <anchorfile>structSceMpegRingbuffer.html</anchorfile>
      <anchor>4c936bc92c0af3741c2bd3e6c8f3246f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspDateTime</name>
    <filename>structScePspDateTime.html</filename>
    <member kind="variable">
      <type>unsigned short</type>
      <name>year</name>
      <anchorfile>structScePspDateTime.html</anchorfile>
      <anchor>d4e215d14d7c62783c6a9aab82659387</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>month</name>
      <anchorfile>structScePspDateTime.html</anchorfile>
      <anchor>15d89e687e955ca7079345e8b2b8b6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>day</name>
      <anchorfile>structScePspDateTime.html</anchorfile>
      <anchor>121bc54d91dd2e26a3d182e51c05dac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>hour</name>
      <anchorfile>structScePspDateTime.html</anchorfile>
      <anchor>00c60649f6631f216b177fb69e170118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>minute</name>
      <anchorfile>structScePspDateTime.html</anchorfile>
      <anchor>cb7edbda1ad35f55636633aea9c2e27b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>second</name>
      <anchorfile>structScePspDateTime.html</anchorfile>
      <anchor>dfbef7257c2eeeaee7020447bde0afb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>microsecond</name>
      <anchorfile>structScePspDateTime.html</anchorfile>
      <anchor>4035d66f935fd6cae01ff4c5d0459c6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFColor</name>
    <filename>structScePspFColor.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>structScePspFColor.html</anchorfile>
      <anchor>608d2b23e869357393a8280cf96a8157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>g</name>
      <anchorfile>structScePspFColor.html</anchorfile>
      <anchor>35dc2ee5fa12701243273cb1b53e7712</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>b</name>
      <anchorfile>structScePspFColor.html</anchorfile>
      <anchor>d148a16e417e1deaaf82c0e9d1747500</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>a</name>
      <anchorfile>structScePspFColor.html</anchorfile>
      <anchor>6d55c1ee12062ac51c26f4996b99679e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFColorUnaligned</name>
    <filename>structScePspFColorUnaligned.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>r</name>
      <anchorfile>structScePspFColorUnaligned.html</anchorfile>
      <anchor>75af781fc09464ef2ecb7ec1fda71b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>g</name>
      <anchorfile>structScePspFColorUnaligned.html</anchorfile>
      <anchor>71d65c5d6603bae2d6ae22756f2978ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>b</name>
      <anchorfile>structScePspFColorUnaligned.html</anchorfile>
      <anchor>15631022d6ae10ccf7d61ccb6e8073c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>a</name>
      <anchorfile>structScePspFColorUnaligned.html</anchorfile>
      <anchor>9e80b5c7c3c7c70354000e80041a8f3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFMatrix2</name>
    <filename>structScePspFMatrix2.html</filename>
    <member kind="variable">
      <type>ScePspFVector2</type>
      <name>x</name>
      <anchorfile>structScePspFMatrix2.html</anchorfile>
      <anchor>1147301595ffcfc5442d904ef26d8748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector2</type>
      <name>y</name>
      <anchorfile>structScePspFMatrix2.html</anchorfile>
      <anchor>e9f4c864fbb0f6d581216a6f89f8918c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFMatrix3</name>
    <filename>structScePspFMatrix3.html</filename>
    <member kind="variable">
      <type>ScePspFVector3</type>
      <name>x</name>
      <anchorfile>structScePspFMatrix3.html</anchorfile>
      <anchor>ff9d92be5670c6cdf985a5cdbae148e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector3</type>
      <name>y</name>
      <anchorfile>structScePspFMatrix3.html</anchorfile>
      <anchor>bb9a6e35fabec80002f7d37d8f8d9001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector3</type>
      <name>z</name>
      <anchorfile>structScePspFMatrix3.html</anchorfile>
      <anchor>147cef57ec6cdb55318768af7660838a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFMatrix4</name>
    <filename>structScePspFMatrix4.html</filename>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>x</name>
      <anchorfile>structScePspFMatrix4.html</anchorfile>
      <anchor>9023373038a782a16af8f3533bfa7aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>y</name>
      <anchorfile>structScePspFMatrix4.html</anchorfile>
      <anchor>941806d35b5741b260629ef4f9abd857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>z</name>
      <anchorfile>structScePspFMatrix4.html</anchorfile>
      <anchor>e2645ba21a790b3f2cc165c555843920</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>w</name>
      <anchorfile>structScePspFMatrix4.html</anchorfile>
      <anchor>7d2a63b765080dd58af49c08e2261f42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFMatrix4Unaligned</name>
    <filename>structScePspFMatrix4Unaligned.html</filename>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>x</name>
      <anchorfile>structScePspFMatrix4Unaligned.html</anchorfile>
      <anchor>1d4218d7916ccde4d0d107796213711c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>y</name>
      <anchorfile>structScePspFMatrix4Unaligned.html</anchorfile>
      <anchor>7a3ec8bdbdc992705b612cc1222ce65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>z</name>
      <anchorfile>structScePspFMatrix4Unaligned.html</anchorfile>
      <anchor>52ac62e27f6389fdec662c406af1e844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>w</name>
      <anchorfile>structScePspFMatrix4Unaligned.html</anchorfile>
      <anchor>239992f04d390935c815040fb26a540c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFQuaternion</name>
    <filename>structScePspFQuaternion.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structScePspFQuaternion.html</anchorfile>
      <anchor>82258ba857eb883736821267f3969b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structScePspFQuaternion.html</anchorfile>
      <anchor>7d7f160874f574bc8af6707c0561a4cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structScePspFQuaternion.html</anchorfile>
      <anchor>777a570a43824ae11c39d02540f70e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>structScePspFQuaternion.html</anchorfile>
      <anchor>c618b2c1b7e6a2a762b0fa68b6b04c71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFQuaternionUnaligned</name>
    <filename>structScePspFQuaternionUnaligned.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structScePspFQuaternionUnaligned.html</anchorfile>
      <anchor>a8d9f48de0ae4daf4faa2bdba196c4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structScePspFQuaternionUnaligned.html</anchorfile>
      <anchor>97d6b87a833fbef72415ced7cf1e4c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structScePspFQuaternionUnaligned.html</anchorfile>
      <anchor>e33683e677fa01351f813af78b4887e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>structScePspFQuaternionUnaligned.html</anchorfile>
      <anchor>1853a90c0c9887e35c17558974d0ac02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFRect</name>
    <filename>structScePspFRect.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structScePspFRect.html</anchorfile>
      <anchor>7db2d9d4e27d7525700191399cba271a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structScePspFRect.html</anchorfile>
      <anchor>688d528b0915d10cabd5bd20aaffa8dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>structScePspFRect.html</anchorfile>
      <anchor>ad9a37a49ec14dd6b3d9244789c614aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>h</name>
      <anchorfile>structScePspFRect.html</anchorfile>
      <anchor>c06a449077b05326c40ddee2d636a258</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFVector2</name>
    <filename>structScePspFVector2.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structScePspFVector2.html</anchorfile>
      <anchor>dabea252fab4201ce72efb685c71c4eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structScePspFVector2.html</anchorfile>
      <anchor>63e5c546653e04deda5730a9e58acbf5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFVector3</name>
    <filename>structScePspFVector3.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structScePspFVector3.html</anchorfile>
      <anchor>fa5b519c7c03920c0a4b530106cc8c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structScePspFVector3.html</anchorfile>
      <anchor>6b046ddf977cb962b75b4c0418ef9284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structScePspFVector3.html</anchorfile>
      <anchor>dfafaf08c517fed0db4b784599db44fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFVector4</name>
    <filename>structScePspFVector4.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structScePspFVector4.html</anchorfile>
      <anchor>2edc194d5a7e8b2c32343a758e16a288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structScePspFVector4.html</anchorfile>
      <anchor>98c199b3770cd26a94b4bf57999f81ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structScePspFVector4.html</anchorfile>
      <anchor>5d6676676313e8c5979afed2209d50e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>structScePspFVector4.html</anchorfile>
      <anchor>87170fb6c4794386116fcfa190c30821</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspFVector4Unaligned</name>
    <filename>structScePspFVector4Unaligned.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>structScePspFVector4Unaligned.html</anchorfile>
      <anchor>7348791def16b225654ca41a16e0e6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>structScePspFVector4Unaligned.html</anchorfile>
      <anchor>3b0cc177b296908716981293dc5b08ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>structScePspFVector4Unaligned.html</anchorfile>
      <anchor>df59e59605677dcee08867486dea320f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>w</name>
      <anchorfile>structScePspFVector4Unaligned.html</anchorfile>
      <anchor>4b431a392942e7c2b4feccd4c0f6cdd7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspIMatrix2</name>
    <filename>structScePspIMatrix2.html</filename>
    <member kind="variable">
      <type>ScePspIVector2</type>
      <name>x</name>
      <anchorfile>structScePspIMatrix2.html</anchorfile>
      <anchor>64a721727f88f02dd7376a7a1694f5c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector2</type>
      <name>y</name>
      <anchorfile>structScePspIMatrix2.html</anchorfile>
      <anchor>f2790e8666ef4a008a7f40ff4218e5e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspIMatrix3</name>
    <filename>structScePspIMatrix3.html</filename>
    <member kind="variable">
      <type>ScePspIVector3</type>
      <name>x</name>
      <anchorfile>structScePspIMatrix3.html</anchorfile>
      <anchor>775192fc9e18c7c251af123f61083c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector3</type>
      <name>y</name>
      <anchorfile>structScePspIMatrix3.html</anchorfile>
      <anchor>77e4f8678a0dde023e911cd64f2dd332</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector3</type>
      <name>z</name>
      <anchorfile>structScePspIMatrix3.html</anchorfile>
      <anchor>d5eb7a011b007449cc90d79fca986682</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspIMatrix4</name>
    <filename>structScePspIMatrix4.html</filename>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>x</name>
      <anchorfile>structScePspIMatrix4.html</anchorfile>
      <anchor>5b5bf858bbed225f5ad03d14c3274b8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>y</name>
      <anchorfile>structScePspIMatrix4.html</anchorfile>
      <anchor>74b3e013c4e3318c42963a1ae497bf37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>z</name>
      <anchorfile>structScePspIMatrix4.html</anchorfile>
      <anchor>c935f32e6454435d4a19b2f27ccb3bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>w</name>
      <anchorfile>structScePspIMatrix4.html</anchorfile>
      <anchor>9136178f51ba9b5a3692cb3a2101d411</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspIMatrix4Unaligned</name>
    <filename>structScePspIMatrix4Unaligned.html</filename>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>x</name>
      <anchorfile>structScePspIMatrix4Unaligned.html</anchorfile>
      <anchor>a7f75012ba4305da4647a4a32c8f6bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>y</name>
      <anchorfile>structScePspIMatrix4Unaligned.html</anchorfile>
      <anchor>58778c87d6c61ea361d3f6b9f89a6e2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>z</name>
      <anchorfile>structScePspIMatrix4Unaligned.html</anchorfile>
      <anchor>1a5785c2001be8b8a5419f2def5a76d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>w</name>
      <anchorfile>structScePspIMatrix4Unaligned.html</anchorfile>
      <anchor>0fb28d0fbbe8362c90ecc2c2b355602b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspIRect</name>
    <filename>structScePspIRect.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structScePspIRect.html</anchorfile>
      <anchor>8b3adaa0085efc722e7935e32bd460fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structScePspIRect.html</anchorfile>
      <anchor>484c7a91d5722ad31542708b7896a274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>w</name>
      <anchorfile>structScePspIRect.html</anchorfile>
      <anchor>7dbbd82eddfb5c5ba535fce4862bcae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>h</name>
      <anchorfile>structScePspIRect.html</anchorfile>
      <anchor>419efffc2a01bd61fbe7d586f55990eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspIVector2</name>
    <filename>structScePspIVector2.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structScePspIVector2.html</anchorfile>
      <anchor>b894ed837102243c7826c638089ac0d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structScePspIVector2.html</anchorfile>
      <anchor>9c5435613650acefa0415fc2edcae037</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspIVector3</name>
    <filename>structScePspIVector3.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structScePspIVector3.html</anchorfile>
      <anchor>1dab938f221b6f9133b704df0888c9c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structScePspIVector3.html</anchorfile>
      <anchor>e3a8bd83e7f667ec255d1bc2d8f3d54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>z</name>
      <anchorfile>structScePspIVector3.html</anchorfile>
      <anchor>c13665f79bf6c4688cd95b11e3b9ac68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspIVector4</name>
    <filename>structScePspIVector4.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structScePspIVector4.html</anchorfile>
      <anchor>b1933c68ad177aab2ab90c1b54b50b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structScePspIVector4.html</anchorfile>
      <anchor>6b90ebf84d37be5e228e1a33a40a3622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>z</name>
      <anchorfile>structScePspIVector4.html</anchorfile>
      <anchor>c884efaba5b70e88fe08555e18c01138</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>w</name>
      <anchorfile>structScePspIVector4.html</anchorfile>
      <anchor>15eebf30ed2000781bd43407b352e4cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspL64Rect</name>
    <filename>structScePspL64Rect.html</filename>
    <member kind="variable">
      <type>SceLong64</type>
      <name>x</name>
      <anchorfile>structScePspL64Rect.html</anchorfile>
      <anchor>c8325a6b419e93c1bdee794117aab83f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>y</name>
      <anchorfile>structScePspL64Rect.html</anchorfile>
      <anchor>dd850d1d02264fb0089733189d232b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>w</name>
      <anchorfile>structScePspL64Rect.html</anchorfile>
      <anchor>25dc9190771f5a3dc019a9f857957383</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>h</name>
      <anchorfile>structScePspL64Rect.html</anchorfile>
      <anchor>161b01ee741f7d9a905778026f157f45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspL64Vector2</name>
    <filename>structScePspL64Vector2.html</filename>
    <member kind="variable">
      <type>SceLong64</type>
      <name>x</name>
      <anchorfile>structScePspL64Vector2.html</anchorfile>
      <anchor>62dcbcbbf7a9f5a38deb1518e8519db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>y</name>
      <anchorfile>structScePspL64Vector2.html</anchorfile>
      <anchor>e3b81369bbd7bcbae782175526de5145</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspL64Vector3</name>
    <filename>structScePspL64Vector3.html</filename>
    <member kind="variable">
      <type>SceLong64</type>
      <name>x</name>
      <anchorfile>structScePspL64Vector3.html</anchorfile>
      <anchor>fa095579dd49cefa61b4e152f977082e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>y</name>
      <anchorfile>structScePspL64Vector3.html</anchorfile>
      <anchor>7d2dca877238f8e531f0fd26d21104e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>z</name>
      <anchorfile>structScePspL64Vector3.html</anchorfile>
      <anchor>13b9a8ad2b64a7ee5eba29443a12702c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspL64Vector4</name>
    <filename>structScePspL64Vector4.html</filename>
    <member kind="variable">
      <type>SceLong64</type>
      <name>x</name>
      <anchorfile>structScePspL64Vector4.html</anchorfile>
      <anchor>724ea114ad513cb2a124020bab3fb34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>y</name>
      <anchorfile>structScePspL64Vector4.html</anchorfile>
      <anchor>1fe7180bc50df566b056dc9d28456eae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>z</name>
      <anchorfile>structScePspL64Vector4.html</anchorfile>
      <anchor>de8934282708b0a998acc02fa7d3fda1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>w</name>
      <anchorfile>structScePspL64Vector4.html</anchorfile>
      <anchor>90cea1a81e471e9b251aebb05387ef0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ScePspMatrix2</name>
    <filename>unionScePspMatrix2.html</filename>
    <member kind="variable">
      <type>ScePspFMatrix2</type>
      <name>fm</name>
      <anchorfile>unionScePspMatrix2.html</anchorfile>
      <anchor>372e6ac48ddddae8256caf2f4dd7a8a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIMatrix2</type>
      <name>im</name>
      <anchorfile>unionScePspMatrix2.html</anchorfile>
      <anchor>9039cf097c8bc714343c17a7481ba3be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector2</type>
      <name>fv</name>
      <anchorfile>unionScePspMatrix2.html</anchorfile>
      <anchor>ab626c0ed62569784e20d98976f31d24</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector2</type>
      <name>iv</name>
      <anchorfile>unionScePspMatrix2.html</anchorfile>
      <anchor>e86b410e527502510d2ceba066e16dc6</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspVector2</type>
      <name>v</name>
      <anchorfile>unionScePspMatrix2.html</anchorfile>
      <anchor>a92666fc44c01d274d829e081118621a</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f</name>
      <anchorfile>unionScePspMatrix2.html</anchorfile>
      <anchor>4143e16e756d870a006737f8b5da2182</anchor>
      <arglist>[2][2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionScePspMatrix2.html</anchorfile>
      <anchor>f3e4b6da595f36b2e1da62a655b9705b</anchor>
      <arglist>[2][2]</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ScePspMatrix3</name>
    <filename>unionScePspMatrix3.html</filename>
    <member kind="variable">
      <type>ScePspFMatrix3</type>
      <name>fm</name>
      <anchorfile>unionScePspMatrix3.html</anchorfile>
      <anchor>fe19697aa463f3539b423eb1517590b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIMatrix3</type>
      <name>im</name>
      <anchorfile>unionScePspMatrix3.html</anchorfile>
      <anchor>e5d21621c3574f3449ea9de5b39d7917</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector3</type>
      <name>fv</name>
      <anchorfile>unionScePspMatrix3.html</anchorfile>
      <anchor>d5ae7b79caadd35e17e1130b2e58bc74</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector3</type>
      <name>iv</name>
      <anchorfile>unionScePspMatrix3.html</anchorfile>
      <anchor>bc6c930d68a1e7f5341cbaa3e9254963</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspVector3</type>
      <name>v</name>
      <anchorfile>unionScePspMatrix3.html</anchorfile>
      <anchor>37da210d7dd5469d0660997854a7ec0c</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f</name>
      <anchorfile>unionScePspMatrix3.html</anchorfile>
      <anchor>1e9095b759dc3874d99cd974f9d4d58f</anchor>
      <arglist>[3][3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionScePspMatrix3.html</anchorfile>
      <anchor>8061832f2c34808ae89a6c0ea9139d6f</anchor>
      <arglist>[3][3]</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ScePspMatrix4</name>
    <filename>unionScePspMatrix4.html</filename>
    <member kind="variable">
      <type>ScePspFMatrix4</type>
      <name>fm</name>
      <anchorfile>unionScePspMatrix4.html</anchorfile>
      <anchor>546bb8d303bc9424a1d906615e0d96c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIMatrix4</type>
      <name>im</name>
      <anchorfile>unionScePspMatrix4.html</anchorfile>
      <anchor>62bfecd7fcc5006d94f3b740c0e45f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>fv</name>
      <anchorfile>unionScePspMatrix4.html</anchorfile>
      <anchor>6f63c7fecc5f535e858e1bb04b47e31d</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>iv</name>
      <anchorfile>unionScePspMatrix4.html</anchorfile>
      <anchor>ea0fbef3e0a6984227682e504ba604c0</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspVector4</type>
      <name>v</name>
      <anchorfile>unionScePspMatrix4.html</anchorfile>
      <anchor>7e6630e6ce5019f5f8668a99d71f0e89</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f</name>
      <anchorfile>unionScePspMatrix4.html</anchorfile>
      <anchor>91471cc83dffa09d74fae5793eee0687</anchor>
      <arglist>[4][4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionScePspMatrix4.html</anchorfile>
      <anchor>83e80002f1c865b8302f53f05a717173</anchor>
      <arglist>[4][4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspSRect</name>
    <filename>structScePspSRect.html</filename>
    <member kind="variable">
      <type>short int</type>
      <name>x</name>
      <anchorfile>structScePspSRect.html</anchorfile>
      <anchor>5fb48af1cdc47b6f88abe4ce2046e871</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>y</name>
      <anchorfile>structScePspSRect.html</anchorfile>
      <anchor>68e31d683010f03fc3ae0c77face2295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>w</name>
      <anchorfile>structScePspSRect.html</anchorfile>
      <anchor>687e96a1c8fb96d95fc6418fcab93563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>h</name>
      <anchorfile>structScePspSRect.html</anchorfile>
      <anchor>b6cdaa55dcdcbd338f9d35396906bc6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspSVector2</name>
    <filename>structScePspSVector2.html</filename>
    <member kind="variable">
      <type>short int</type>
      <name>x</name>
      <anchorfile>structScePspSVector2.html</anchorfile>
      <anchor>091eb100284ffaf12f764df0f6dc6c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>y</name>
      <anchorfile>structScePspSVector2.html</anchorfile>
      <anchor>6c73927dc4a97d5c8e962bd136eba45f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspSVector3</name>
    <filename>structScePspSVector3.html</filename>
    <member kind="variable">
      <type>short int</type>
      <name>x</name>
      <anchorfile>structScePspSVector3.html</anchorfile>
      <anchor>334066f3468debfb26ba8bce3ea23054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>y</name>
      <anchorfile>structScePspSVector3.html</anchorfile>
      <anchor>036c4a8d4b2ec1219a4e7bf1d66569f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>z</name>
      <anchorfile>structScePspSVector3.html</anchorfile>
      <anchor>91f2681fa134aa8b0341251bbc38b128</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScePspSVector4</name>
    <filename>structScePspSVector4.html</filename>
    <member kind="variable">
      <type>short int</type>
      <name>x</name>
      <anchorfile>structScePspSVector4.html</anchorfile>
      <anchor>bc5b1617c929d8e1a404779d1732f8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>y</name>
      <anchorfile>structScePspSVector4.html</anchorfile>
      <anchor>2586e36efa0cf9ded35d87b91ddfe422</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>z</name>
      <anchorfile>structScePspSVector4.html</anchorfile>
      <anchor>416850235331c0c9e1b1916332287a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>w</name>
      <anchorfile>structScePspSVector4.html</anchorfile>
      <anchor>f2cb9732ed825bdb62c377f6f71556d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ScePspUnion128</name>
    <filename>unionScePspUnion128.html</filename>
    <member kind="variable">
      <type>SceULong64</type>
      <name>ul</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>906c1f49c9e8b881e1f391925b43ba48</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>l</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>6280b5e8b933b6793a57c9efec71d3c3</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ui</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>4afce892a9709e1e0d409824d9e6bd24</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>2bc2267d55747a899bc47d955a9842c3</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>us</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>df3fbfe66fce5e42dbde9660e91559a9</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>s</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>926aba0c1be58648d3507d68f5ca595c</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>uc</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>da6afb25e60bdc80cef1caee1018b5b5</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>c</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>7277c9653a06065d01a55c48ffcdc77f</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>4f69a2c1437d6fcc36a0eb96722a6d77</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspFRect</type>
      <name>fr</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>1ec7a126d3c21433cfd846c9053b70f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIRect</type>
      <name>ir</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>f4f51969c2386689d107412fe1b2118d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>fv</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>9daed5a084d3c769f088862212d7791e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>iv</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>462cf0769e7ccf09352d619808cc5c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFQuaternion</type>
      <name>fq</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>151131d525d33d388d1c2ffd98b25104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspFColor</type>
      <name>fc</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>39b101bd4bacf85efeb7760b139b55ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGBA8888</type>
      <name>rgba8888</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>40780d23b8634a959cbeccb008a0a66f</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGBA4444</type>
      <name>rgba4444</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>4fbfcd38544ed68df88976742b347196</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGBA5551</type>
      <name>rgba5551</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>ae18cf6e867315b442f89c9b22279098</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGB565</type>
      <name>rgb565</name>
      <anchorfile>unionScePspUnion128.html</anchorfile>
      <anchor>a270e20af19e5457b65d73e36b73543f</anchor>
      <arglist>[8]</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ScePspUnion32</name>
    <filename>unionScePspUnion32.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ui</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>2aa2db4cea1b474f7e9171a85e726909</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>5b86f47ccce300c2009eaf0b84c29dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>us</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>54dbe12af41598830ca7560244c7fe11</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>s</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>b8c8c32c9cd369bbfa1b27282d8d4bb9</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>uc</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>5f627ca8e187ab2e20f303bc0be3a745</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>c</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>f888c350361dc1ce6ff0dcbdf2a512a1</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>6b0888cbf3a7cef18d79eec2c3ff6804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGBA8888</type>
      <name>rgba8888</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>e1eddfc4ba096d6583e6ed3cf112c144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGBA4444</type>
      <name>rgba4444</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>b6e13a2fda7957e3de1a40b8f117384a</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGBA5551</type>
      <name>rgba5551</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>a8f00ad84c6590e3095bf2932d4ae24f</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGB565</type>
      <name>rgb565</name>
      <anchorfile>unionScePspUnion32.html</anchorfile>
      <anchor>4b71c02a3ffc0b9fa2a6769fd5ffd69b</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ScePspUnion64</name>
    <filename>unionScePspUnion64.html</filename>
    <member kind="variable">
      <type>SceULong64</type>
      <name>ul</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>f17e3bd9544e1b80525a8ab446f31d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceLong64</type>
      <name>l</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>26e2fd6e75ee463139c0d0b6b9f1882d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ui</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>8c718f8f860a15f0e6cab88aec53ec33</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>800047f90d8c4cff733b5eb355d612c7</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>us</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>a732d632c88f40b0ccfb0222f165431c</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>s</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>9bf5fb2634c0e8cdae79e693bdcb3262</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>uc</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>890e13019fe139dc0dcd8fb1f0a63afd</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>c</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>c72073903ecc9f0f3dca9c4923609a9a</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>db02d28ac16462903a1c8fc41a7b3d64</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspSRect</type>
      <name>sr</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>0c2aa5d02692e3e7bd7cf682761ad175</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspSVector4</type>
      <name>sv</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>89b19e5520f6a628490c186bbe48ad54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGBA8888</type>
      <name>rgba8888</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>9b876a716b702881cea446324cd57cea</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGBA4444</type>
      <name>rgba4444</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>d64809cee5195cbdf9e6b3d0808b8780</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGBA5551</type>
      <name>rgba5551</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>6842d3323eb2456b84c1765945d2ecbd</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>ScePspRGB565</type>
      <name>rgb565</name>
      <anchorfile>unionScePspUnion64.html</anchorfile>
      <anchor>5a680f8080fe1a7c88da06ef6dd3f52b</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ScePspVector2</name>
    <filename>unionScePspVector2.html</filename>
    <member kind="variable">
      <type>ScePspFVector2</type>
      <name>fv</name>
      <anchorfile>unionScePspVector2.html</anchorfile>
      <anchor>c0b4c46534fbc6aa8c9eea66396d8f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector2</type>
      <name>iv</name>
      <anchorfile>unionScePspVector2.html</anchorfile>
      <anchor>170b14daabec113632a6e830d1f9053e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f</name>
      <anchorfile>unionScePspVector2.html</anchorfile>
      <anchor>3b38ff1e8987e22631528096ce59ea36</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionScePspVector2.html</anchorfile>
      <anchor>9d8b6d735e0fa467a7a141d41a3952d4</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ScePspVector3</name>
    <filename>unionScePspVector3.html</filename>
    <member kind="variable">
      <type>ScePspFVector3</type>
      <name>fv</name>
      <anchorfile>unionScePspVector3.html</anchorfile>
      <anchor>ac213c90570d7b1568325e37d1806a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector3</type>
      <name>iv</name>
      <anchorfile>unionScePspVector3.html</anchorfile>
      <anchor>a565cde3f7776cdb108d103b6777fdbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f</name>
      <anchorfile>unionScePspVector3.html</anchorfile>
      <anchor>133bc30bfed575c37f3d7e2e51369f95</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionScePspVector3.html</anchorfile>
      <anchor>09170fbb145054f7aa43df95cf1ec4e9</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ScePspVector4</name>
    <filename>unionScePspVector4.html</filename>
    <member kind="variable">
      <type>ScePspFVector4</type>
      <name>fv</name>
      <anchorfile>unionScePspVector4.html</anchorfile>
      <anchor>2bd9286cec82c5db7a2d338ca017b374</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScePspIVector4</type>
      <name>iv</name>
      <anchorfile>unionScePspVector4.html</anchorfile>
      <anchor>c7141b486cf0d6a5a8cc6a85a02120a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f</name>
      <anchorfile>unionScePspVector4.html</anchorfile>
      <anchor>368a3d789a9a6b1189fcb262b24c1c36</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>i</name>
      <anchorfile>unionScePspVector4.html</anchorfile>
      <anchor>1451ef9663ea5678527d026cdcfd51dc</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SceUtilitySavedataParam</name>
    <filename>structSceUtilitySavedataParam.html</filename>
    <member kind="variable">
      <type>SceSize</type>
      <name>size</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>04e6ec47d39b9304b847780fe0f6ac0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>language</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>fd58809cbc884a80b4104580b875068c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>buttonSwap</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>6b9d98c296e73eee4c4cb89bfe4327da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unknown</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>c987d023d8660c92df771b8a01b66745</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>result</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>499e8b234793dc439c7b632dd233a3a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unknown2</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>c761018c0aa893e4e1c38dbba4a721ab</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mode</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>519a39463757e418ca4443bc2168a297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unknown12</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>eb7bf4bc859c6c3cf5eb757d5ce38afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unknown13</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>17acdbfe81f4622f4fa239c6772ae946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>gameName</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>5fe7ee42473fd3ccac5054c4c5723d8d</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>saveName</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>6141115252e3f48a26ca7222663606b3</anchor>
      <arglist>[24]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>fileName</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>9f5fd268f3e395f92dc95481c853b5c2</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>dataBuf</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>33e6bf6475f99c09db72321890f6fbf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceSize</type>
      <name>dataBufSize</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>9087aa533786d7654f9fc0009da77484</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceSize</type>
      <name>dataSize</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>b63b616896aebcc17367c31196400f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspUtilitySavedataSFOParam</type>
      <name>sfoParam</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>68eede8147af68a594d520c214d3f662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspUtilitySavedataFileData</type>
      <name>icon0FileData</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>e12ea31323d7c52af83aa11a29b5ea1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspUtilitySavedataFileData</type>
      <name>icon1FileData</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>79aefb1e6ff9eeee601b0a71eca2848d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspUtilitySavedataFileData</type>
      <name>pic1FileData</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>4c2d863cd5e12eccdb51911d03456c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PspUtilitySavedataFileData</type>
      <name>snd0FileData</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>8fa91166fb856e7c7d74d1c86fbf47a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>unknown17</name>
      <anchorfile>structSceUtilitySavedataParam.html</anchorfile>
      <anchor>a52e239ffcc30d3f31a3f14e771305df</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sha1_ctx</name>
    <filename>structsha1__ctx.html</filename>
    <member kind="variable">
      <type>sha1_32t</type>
      <name>count</name>
      <anchorfile>structsha1__ctx.html</anchorfile>
      <anchor>ac0b513724a0fb22d4ba7b8e20288812</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>sha1_32t</type>
      <name>hash</name>
      <anchorfile>structsha1__ctx.html</anchorfile>
      <anchor>b865e15817d3a250b6a0f4ebba5d74c3</anchor>
      <arglist>[5]</arglist>
    </member>
    <member kind="variable">
      <type>sha1_32t</type>
      <name>wbuf</name>
      <anchorfile>structsha1__ctx.html</anchorfile>
      <anchor>88320f88dfe758f877bf8b8f1ad762ec</anchor>
      <arglist>[16]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sircs_data</name>
    <filename>structsircs__data.html</filename>
    <member kind="variable">
      <type>u8</type>
      <name>type</name>
      <anchorfile>structsircs__data.html</anchorfile>
      <anchor>d7de770f7061d9b422fb98099ab95931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8</type>
      <name>cmd</name>
      <anchorfile>structsircs__data.html</anchorfile>
      <anchor>218005f1e69d8e7e166ca42f075b78c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>dev</name>
      <anchorfile>structsircs__data.html</anchorfile>
      <anchor>ef6af355e4d79f32682df735a109455c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>StringDescriptor</name>
    <filename>structStringDescriptor.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bLength</name>
      <anchorfile>structStringDescriptor.html</anchorfile>
      <anchor>aaf26dc46513f1b0c6e96596e9ac80fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>bDescriptorType</name>
      <anchorfile>structStringDescriptor.html</anchorfile>
      <anchor>88180817fac9649a8d650981d81c050f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>bString</name>
      <anchorfile>structStringDescriptor.html</anchorfile>
      <anchor>7633f5a00b95ca083c1a701c7cee4887</anchor>
      <arglist>[32]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sw_breakpoint</name>
    <filename>structsw__breakpoint.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>addr</name>
      <anchorfile>structsw__breakpoint.html</anchorfile>
      <anchor>9c91bce25aca717e1c08968c1425937b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>oldinst</name>
      <anchorfile>structsw__breakpoint.html</anchorfile>
      <anchor>9f93437f839f537571de73da8df3909d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>active</name>
      <anchorfile>structsw__breakpoint.html</anchorfile>
      <anchor>0c9438878592ab9739a4079fcccb9ce8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tag_IntrHandlerOptionParam</name>
    <filename>structtag__IntrHandlerOptionParam.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>size</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>563c9ec5f27b1eb973079b33998da1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>entry</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>73ebb1f0d0397d8a7e894744cab31169</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>common</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>ef96a6b1520dd8b11f36bd8d0acf5c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>gp</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>c5153c289ac335350d33be6b9a9abc14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>intr_code</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>95ba2ba97f128aeff4fd8a0ea3f8e3f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>sub_count</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>38a2e00fb548c2a008b22ed7e0169d69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>intr_level</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>1151843882197574633e5574ac2d4c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u16</type>
      <name>enabled</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>d8f45fd7c1fd9a75da3fefdc4f6beedd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>calls</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>213c8ba4a5d68d7950b6ccfcc3170b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>field_1C</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>6a76ccd51e31c0fb3d876da0de059519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>total_clock_lo</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>8c54961ad76ba88315fecc28f638fc98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>total_clock_hi</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>7cf8260c7fe8433e567d4d298cbf09e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>min_clock_lo</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>7d554ef921e286f76663966e02e8c1aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>min_clock_hi</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>66675d6929e2472f1c02bb08a9be42b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>max_clock_lo</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>0ec5e07a589dfde7ab8841e9de387fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32</type>
      <name>max_clock_hi</name>
      <anchorfile>structtag__IntrHandlerOptionParam.html</anchorfile>
      <anchor>5e10d234dbf5ec63cdf89552137befe4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tm</name>
    <filename>structtm.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>tm_sec</name>
      <anchorfile>structtm.html</anchorfile>
      <anchor>4d098a9a5c03a00b2ee61e10851de81e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tm_min</name>
      <anchorfile>structtm.html</anchorfile>
      <anchor>f414eb7c86cc3099595211eee4d4211b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tm_hour</name>
      <anchorfile>structtm.html</anchorfile>
      <anchor>3e7ca4e37f1abcaf56b8a916c38eb9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tm_mday</name>
      <anchorfile>structtm.html</anchorfile>
      <anchor>b8d8904bad43b0c8b96e61941c5b5310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tm_mon</name>
      <anchorfile>structtm.html</anchorfile>
      <anchor>112ac36fa2f593777138a417cf031e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tm_year</name>
      <anchorfile>structtm.html</anchorfile>
      <anchor>33adf78fd6476b2120ce3b9c4a852053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tm_wday</name>
      <anchorfile>structtm.html</anchorfile>
      <anchor>fe81a8c46f1c693c43f259b288859f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tm_yday</name>
      <anchorfile>structtm.html</anchorfile>
      <anchor>93a0ba77cc23796df84405dcbcc57eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tm_isdst</name>
      <anchorfile>structtm.html</anchorfile>
      <anchor>5645ca0580c8ab2c24f6c2965d9c9f9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbConfiguration</name>
    <filename>structUsbConfiguration.html</filename>
    <member kind="variable">
      <type>ConfigDescriptor *</type>
      <name>confp</name>
      <anchorfile>structUsbConfiguration.html</anchorfile>
      <anchor>b6d95a9a33449c16c7ecaf6ed5e0de98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UsbInterfaces *</type>
      <name>infs</name>
      <anchorfile>structUsbConfiguration.html</anchorfile>
      <anchor>0df0dc2275d7adb95dde0a6ba63e3ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>InterfaceDescriptor *</type>
      <name>infp</name>
      <anchorfile>structUsbConfiguration.html</anchorfile>
      <anchor>83499fb8ad67b44e13d594e46c2a508a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EndpointDescriptor *</type>
      <name>endp</name>
      <anchorfile>structUsbConfiguration.html</anchorfile>
      <anchor>0f010125586ab462ecb62e87f019b5b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbData</name>
    <filename>structUsbData.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>devdesc</name>
      <anchorfile>structUsbData.html</anchorfile>
      <anchor>86c0549a709fe4a08525a48525086d80</anchor>
      <arglist>[20]</arglist>
    </member>
    <member kind="variable">
      <type>UsbData::Config</type>
      <name>config</name>
      <anchorfile>structUsbData.html</anchorfile>
      <anchor>d89023b141c4760d00abf27a7ab35e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UsbData::ConfDesc</type>
      <name>confdesc</name>
      <anchorfile>structUsbData.html</anchorfile>
      <anchor>8fdb78b409439de105387f865589cffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>pad1</name>
      <anchorfile>structUsbData.html</anchorfile>
      <anchor>e97d7c56e8944b8aa2e10f0f31e4d193</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>UsbData::Interfaces</type>
      <name>interfaces</name>
      <anchorfile>structUsbData.html</anchorfile>
      <anchor>b6898b76c8c2c60775de732dbdb59933</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UsbData::InterDesc</type>
      <name>interdesc</name>
      <anchorfile>structUsbData.html</anchorfile>
      <anchor>31a6a8eb7359e7ca05d5a890ae219de7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UsbData::Endp</type>
      <name>endp</name>
      <anchorfile>structUsbData.html</anchorfile>
      <anchor>f9e30ca82945602863d4cdb02ae3e0fe</anchor>
      <arglist>[4]</arglist>
    </member>
    <class kind="struct">UsbData::ConfDesc</class>
    <class kind="struct">UsbData::Config</class>
    <class kind="struct">UsbData::Endp</class>
    <class kind="struct">UsbData::InterDesc</class>
    <class kind="struct">UsbData::Interfaces</class>
  </compound>
  <compound kind="struct">
    <name>UsbData::ConfDesc</name>
    <filename>structUsbData_1_1ConfDesc.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>desc</name>
      <anchorfile>structUsbData_1_1ConfDesc.html</anchorfile>
      <anchor>7409ce3dd8b3244e2f04dd8e217ad79c</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pinterfaces</name>
      <anchorfile>structUsbData_1_1ConfDesc.html</anchorfile>
      <anchor>e49834f6191d1fc42678418eeccc216e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbData::Config</name>
    <filename>structUsbData_1_1Config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>pconfdesc</name>
      <anchorfile>structUsbData_1_1Config.html</anchorfile>
      <anchor>73be35aac94c8b0a0daaada039cc4715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pinterfaces</name>
      <anchorfile>structUsbData_1_1Config.html</anchorfile>
      <anchor>01fa6ccd82207e3287e4e89fa31db94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pinterdesc</name>
      <anchorfile>structUsbData_1_1Config.html</anchorfile>
      <anchor>da44cd109c4d7ee4df977c94b8a4fe7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pendp</name>
      <anchorfile>structUsbData_1_1Config.html</anchorfile>
      <anchor>56a897f3743b8c655b212ef45c57b050</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbData::Endp</name>
    <filename>structUsbData_1_1Endp.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>desc</name>
      <anchorfile>structUsbData_1_1Endp.html</anchorfile>
      <anchor>6e04641e72cb7bd69bd096c099f26b08</anchor>
      <arglist>[16]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbData::InterDesc</name>
    <filename>structUsbData_1_1InterDesc.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>desc</name>
      <anchorfile>structUsbData_1_1InterDesc.html</anchorfile>
      <anchor>2a24ef6ce98676c132244246830c078e</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pendp</name>
      <anchorfile>structUsbData_1_1InterDesc.html</anchorfile>
      <anchor>7832bd7fb9f12aa337b87084c38754e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>pad</name>
      <anchorfile>structUsbData_1_1InterDesc.html</anchorfile>
      <anchor>65e905bc93bbb5df2fd045c0b7fb86fe</anchor>
      <arglist>[32]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbData::Interfaces</name>
    <filename>structUsbData_1_1Interfaces.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>pinterdesc</name>
      <anchorfile>structUsbData_1_1Interfaces.html</anchorfile>
      <anchor>a91dea494221861930f0163809db2c71</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>intcount</name>
      <anchorfile>structUsbData_1_1Interfaces.html</anchorfile>
      <anchor>d3b751acf25ec7b38db8a60c2252c6cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbdDeviceReq</name>
    <filename>structUsbdDeviceReq.html</filename>
    <member kind="variable">
      <type>UsbEndpoint *</type>
      <name>endp</name>
      <anchorfile>structUsbdDeviceReq.html</anchorfile>
      <anchor>42e29c4276034b2c2d79ae6caf8b7c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>data</name>
      <anchorfile>structUsbdDeviceReq.html</anchorfile>
      <anchor>7eaccb9148cfe299878407b6fb25d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>size</name>
      <anchorfile>structUsbdDeviceReq.html</anchorfile>
      <anchor>ea7ad3b0dd6336d4e4b01294a216bd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unkc</name>
      <anchorfile>structUsbdDeviceReq.html</anchorfile>
      <anchor>50e719d74f545099e24ed1505a5a5854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>func</name>
      <anchorfile>structUsbdDeviceReq.html</anchorfile>
      <anchor>3b846649272f75a8cd3a9df6da0c10ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>recvsize</name>
      <anchorfile>structUsbdDeviceReq.html</anchorfile>
      <anchor>dcfc22a12a03b0f7d23c7c3bdaa13ff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>retcode</name>
      <anchorfile>structUsbdDeviceReq.html</anchorfile>
      <anchor>748ea1a6ef82bc9f3ae4305a89e11e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk1c</name>
      <anchorfile>structUsbdDeviceReq.html</anchorfile>
      <anchor>2c5719e1cdaf330fd56925f406407f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>structUsbdDeviceReq.html</anchorfile>
      <anchor>ecdbf03269b0c919191c98e4541127cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>link</name>
      <anchorfile>structUsbdDeviceReq.html</anchorfile>
      <anchor>9f605d951d27669ae377e590d0f156f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbDriver</name>
    <filename>structUsbDriver.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>70a1e9f9dc31368fafb8dd02f06f95a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>endpoints</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>e16871cccecc440a5c97bdcda3277934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UsbEndpoint *</type>
      <name>endp</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>5930f79baa63df3d2f08cff31099eeb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UsbInterface *</type>
      <name>intp</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>c7579c7a741e941270c2c037176db4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>devp_hi</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>395ef63b40e5f5c1a4e08ff723efa5e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>confp_hi</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>3aa8722de50e55f3edc9934aac702459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>devp</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>0ef81a8cab49db2e8e95264781cb37d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>confp</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>0cf716fae20d0f68ecdd6eebd3cea341</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringDescriptor *</type>
      <name>str</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>563a6799b9cf87019240301ef741d104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>recvctl</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>05fe75b2ab2a537366d3298eeb45f426</anchor>
      <arglist>)(int arg1, int arg2, struct DeviceRequest *req)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>func28</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>fedcd3fb08c85b42b2cf35ed60ad4b9e</anchor>
      <arglist>)(int arg1, int arg2, int arg3)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>attach</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>13d7ea1c24a3927410d9d335bf904eed</anchor>
      <arglist>)(int speed, void *arg2, void *arg3)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>detach</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>7d91e5d122cd96fc03316d58567c8e9e</anchor>
      <arglist>)(int arg1, int arg2, int arg3)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk34</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>9830a94a2c0ec9307137cc7bfe32efc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>start_func</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>bdba36ac322c0c1308304236fa9fe029</anchor>
      <arglist>)(int size, void *args)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>stop_func</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>0ee82d312694948911c6985ffc274c60</anchor>
      <arglist>)(int size, void *args)</arglist>
    </member>
    <member kind="variable">
      <type>UsbDriver *</type>
      <name>link</name>
      <anchorfile>structUsbDriver.html</anchorfile>
      <anchor>06247582d3e31e3e2c21e95b16213ac1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbEndpoint</name>
    <filename>structUsbEndpoint.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>endpnum</name>
      <anchorfile>structUsbEndpoint.html</anchorfile>
      <anchor>fb6bfebf3b932c0850376251c0ba50e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk2</name>
      <anchorfile>structUsbEndpoint.html</anchorfile>
      <anchor>3e2418a7cf224e30a362414e836b40f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk3</name>
      <anchorfile>structUsbEndpoint.html</anchorfile>
      <anchor>a20a3325c36911d36a1b0cf612e2b62a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbInterface</name>
    <filename>structUsbInterface.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>expect_interface</name>
      <anchorfile>structUsbInterface.html</anchorfile>
      <anchor>02bfe4cf904d788b9a25510016936e34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk8</name>
      <anchorfile>structUsbInterface.html</anchorfile>
      <anchor>18f0dd9ca76b3c011145a1303dda55ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_interface</name>
      <anchorfile>structUsbInterface.html</anchorfile>
      <anchor>26e804cb737c9e41219dce59eaefa795</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UsbInterfaces</name>
    <filename>structUsbInterfaces.html</filename>
    <member kind="variable">
      <type>InterfaceDescriptor *</type>
      <name>infp</name>
      <anchorfile>structUsbInterfaces.html</anchorfile>
      <anchor>df34d6c2aafb0d4e502680539665a7c4</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>num</name>
      <anchorfile>structUsbInterfaces.html</anchorfile>
      <anchor>082db7a0dd7062a5af0e20fecba99a66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Audio</name>
    <title>User Audio Library</title>
    <filename>group__Audio.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_VOLUME_MAX</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gaab777e0b57444bed7ac07c18ff872ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_CHANNEL_MAX</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g3bd90f8c4aa5dbc381fe8cdb58be6e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_NEXT_CHANNEL</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g0e01e447bf4113d7c6bd559d2b6e36b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_SAMPLE_MIN</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g87cfa28a9144f86cd76650fe8b238dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_SAMPLE_MAX</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g3e9b128344bcc6bdbc6240015884eaf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_AUDIO_SAMPLE_ALIGN</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gb8e37624a159b94eefda6233ad984d2d</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="enumeration">
      <name>PspAudioFormats</name>
      <anchor>g6702fbaaa77ffb52c74d793a75fa360b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_AUDIO_FORMAT_STEREO</name>
      <anchor>gg6702fbaaa77ffb52c74d793a75fa360b12c202f73d11a6b26bef848062ed9e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_AUDIO_FORMAT_MONO</name>
      <anchor>gg6702fbaaa77ffb52c74d793a75fa360b9f623888ae7964db1138fdc08a521421</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioChReserve</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gbab65eb9c2159293645e8303cef44899</anchor>
      <arglist>(int channel, int samplecount, int format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioChRelease</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g877ee14881ad511ae41f3d71e87c2056</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioOutput</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gb2a5d427b64fcaa332c5f1378c289d8f</anchor>
      <arglist>(int channel, int vol, void *buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioOutputBlocking</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gd5949b6f96df0361dfb44b351a204d51</anchor>
      <arglist>(int channel, int vol, void *buf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioOutputPanned</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g76a51277df01b4fa85a0840bce2e6678</anchor>
      <arglist>(int channel, int leftvol, int rightvol, void *buffer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioOutputPannedBlocking</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>ga035cfe8d6c8342ac14ae5941948ac2a</anchor>
      <arglist>(int channel, int leftvol, int rightvol, void *buffer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioGetChannelRestLen</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gf4cbd647f859f501e7a1f5bea48dca7d</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioSetChannelDataLen</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gea7a75ede127573d72db93f24f5c5dde</anchor>
      <arglist>(int channel, int samplecount)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioChangeChannelConfig</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>gc2adda2ba525f28786309b106d02ffe6</anchor>
      <arglist>(int channel, int format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceAudioChangeChannelVolume</name>
      <anchorfile>group__Audio.html</anchorfile>
      <anchor>g359bc8aaf48d5064b5e05e7af7bdd550</anchor>
      <arglist>(int channel, int leftvol, int rightvol)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Debug</name>
    <title>Debug Utility Library</title>
    <filename>group__Debug.html</filename>
    <class kind="struct">_PspDebugRegBlock</class>
    <class kind="struct">_PspDebugStackTrace</class>
    <class kind="struct">_PspDebugProfilerRegs</class>
    <member kind="typedef">
      <type>_PspDebugRegBlock</type>
      <name>PspDebugRegBlock</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gf8d9fc67d83617eed6366d7373f4feb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PspDebugErrorHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>ga07aff507b18bcbe00061a66e6051aee</anchor>
      <arglist>)(PspDebugRegBlock *regs)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>PspDebugKprintfHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g5794b7a2e2e596302fb474b2ee4d51e2</anchor>
      <arglist>)(const char *format, u32 *args)</arglist>
    </member>
    <member kind="typedef">
      <type>_PspDebugStackTrace</type>
      <name>PspDebugStackTrace</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g4c92813fe84b2d2db01d06b51304576a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_PspDebugProfilerRegs</type>
      <name>PspDebugProfilerRegs</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gf305cb386bf6644509d529ec10af4adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>PspDebugPrintHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g6832689be2b410b9b4e38d88e926013e</anchor>
      <arglist>)(const char *data, int len)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>PspDebugInputHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>ga73e9c04df2bfdd471e951d16a683aac</anchor>
      <arglist>)(char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenInit</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gb24c5c5086373fb3f73f697599ab319b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenInitEx</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0ef4d04d3d8d1a37d89ff02c6243f454</anchor>
      <arglist>(void *vram_base, int mode, int setup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenPrintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g67b7e77414f3c5c254e3b16c4f3e8ca3</anchor>
      <arglist>(const char *fmt,...) __attribute__((format(printf</arglist>
    </member>
    <member kind="function">
      <type>void void</type>
      <name>pspDebugScreenSetBackColor</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g2c5a2783ab0395683307809c96d06631</anchor>
      <arglist>(u32 color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenSetTextColor</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gb1751e31775b604a2d523761e033bce0</anchor>
      <arglist>(u32 color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenSetColorMode</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g03c456352997b2220d4d1929f981ed41</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenPutChar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g114089a48f311499c48782079dde52ff</anchor>
      <arglist>(int x, int y, u32 color, u8 ch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenSetXY</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g3fa70748882c7721499d3546c560d873</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenSetOffset</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g3744543fbab5314d3966b68d1fc71975</anchor>
      <arglist>(int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenSetBase</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gbee9c157300b2d3d48b4c2247a1af9a6</anchor>
      <arglist>(u32 *base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugScreenGetX</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g9783b0f8e313d916efba1c660ad89316</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugScreenGetY</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g7cef92ba9751dd75a12cf91b1e335641</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugScreenClear</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g9d3d3812e154fde63f19b3eaf35bd57f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugScreenPrintData</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g3222992580abcfd13cfb26e67a3f5808</anchor>
      <arglist>(const char *buff, int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugScreenPuts</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g6bb41fc101dcd6ebcafa450eeb28aa83</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugGetStackTrace</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>ge7d79791ee824851275743e7b14baa94</anchor>
      <arglist>(unsigned int *results, int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallErrorHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g3c958d6fd5eafdd6fba0b09f7a36cdbb</anchor>
      <arglist>(PspDebugErrorHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugDumpException</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g99fae026f36eb39cef48a9bd047a3b89</anchor>
      <arglist>(PspDebugRegBlock *regs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallKprintfHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0c2d5eaaf0d22cdff836ff320088a88b</anchor>
      <arglist>(PspDebugKprintfHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugGetStackTrace2</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>geb15f6270468ffe5b321811288f0b6ce</anchor>
      <arglist>(PspDebugRegBlock *regs, PspDebugStackTrace *trace, int max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerEnable</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gda92d9c1ce23a795b25ab4ab5b3ead73</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerDisable</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g477c88ead96847d58dcee3042c36b7e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerClear</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g30815af8ac341a0810ed6da0f518ea0b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerGetRegs</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g71b88c22bd36e9a18bfd7619bfb16dc7</anchor>
      <arglist>(PspDebugProfilerRegs *regs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugProfilerPrint</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g5c83cbc8151971c490e9ece83aa78a91</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallStdinHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g4ad6d941b6f9685097753b492484b72c</anchor>
      <arglist>(PspDebugInputHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallStdoutHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g146321cbb09124bcd8dc980d973184fb</anchor>
      <arglist>(PspDebugPrintHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugInstallStderrHandler</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g431f3e4aa6d48be0f3eef728bb72eccb</anchor>
      <arglist>(PspDebugPrintHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioPutchar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g2c653ac86cdde9e3b49320181082c032</anchor>
      <arglist>(int ch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugSioGetchar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g1f4fcce25cda39e3824964209b71359b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioPuts</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>gbfa5a17fd3247e52f3931c42925d4c30</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugSioPutData</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g1b37cb52375a34f9980654d4a7b5ac3d</anchor>
      <arglist>(const char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspDebugSioPutText</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g2e5054480c8f6c043cddcf4f66d6b945</anchor>
      <arglist>(const char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioInit</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g62216e1680b34089e383f21652ef0362</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioSetBaud</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g067f407660f4f7c2f5597e058af4f0dd</anchor>
      <arglist>(int baud)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugEnablePutchar</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g5d6b5d2dfa8f5410c8ba860fca75c43d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioInstallKprintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>ga9615d508def61d0d5fdc1929f22d65b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugGdbStubInit</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g21799ac24d3d70e71f1920b24f8bc5bb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugBreakpoint</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g6267156e18eb382c8919f703627ae73c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioEnableKprintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0139c524cb26cc4808b713e3df0a9c47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspDebugSioDisableKprintf</name>
      <anchorfile>group__Debug.html</anchorfile>
      <anchor>g0fc6e948191f8889803ec9ddf0f30189</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GU</name>
    <title>Graphics Utility Library</title>
    <filename>group__GU.html</filename>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthBuffer</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gaddbaeebaca67482f31a619ca0bd2fc7</anchor>
      <arglist>(void *zbp, int zbw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDispBuffer</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g01a1668e175f969f9b958545f62b7c20</anchor>
      <arglist>(int width, int height, void *dispbp, int dispbw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawBuffer</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3e7c2b5f4924a1cfdfc32d8f51295f50</anchor>
      <arglist>(int psm, void *fbp, int fbw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawBufferList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gc7d6c3ed379cc1c3f1636a259cb1c0ba</anchor>
      <arglist>(int psm, void *fbp, int fbw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuDisplay</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga0ba3cce0fe889f2f2721bacaf59cbed</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gba382986606097023274007bb941dc20</anchor>
      <arglist>(int function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthMask</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g51027f015aad4029c707f0497cb2d448</anchor>
      <arglist>(int mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthOffset</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7eaca35ca0b1a236dfd530349f681101</anchor>
      <arglist>(unsigned int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDepthRange</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g0d58d8ec47c41a0cda0c84ed614c200a</anchor>
      <arglist>(int near, int far)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuFog</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g030adaea9c11f8b0158ecdc6bd748d3c</anchor>
      <arglist>(float near, float far, unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuInit</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5a558b76a14b6f984ba65ca37e03a707</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTerm</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g48509fdeab83a025f3b42b7fab3007b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuBreak</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g4dc14fec56667092692401aa532b2758</anchor>
      <arglist>(int a0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuContinue</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g58c444e2dc8a29d04e3036b93c6e5e11</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceGuSetCallback</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8c9589d644b40244f61a6a15bc806e60</anchor>
      <arglist>(int signal, void(*callback)(int))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSignal</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g78f05baa327357993b7579cbedbf27f4</anchor>
      <arglist>(int signal, int behavior)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSendCommandf</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfdf6924e24dbfa9ca7300b8cb4d504eb</anchor>
      <arglist>(int cmd, float argument)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSendCommandi</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbf7e28a9cc4b22ce7decad4beb26ef12</anchor>
      <arglist>(int cmd, int argument)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceGuGetMemory</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gf2763dad05b15d96bbc88180521b8f7d</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuStart</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7b86d1928f2d2ee318a390ae9412f30e</anchor>
      <arglist>(int cid, void *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuFinish</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g4915d6d8f42788827415bc6a89003903</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuCallList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g625ac5e4f78cea145a3273339a0b2b24</anchor>
      <arglist>(const void *list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuCallMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcbd9777eca05f9494d4594b57fd36067</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuCheckList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g67d567a61d6aa70f7c3319cc39cf2ad1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSendList</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g86a62ed2b49d7d7a024697144b521563</anchor>
      <arglist>(int mode, const void *list, PspGeContext *context)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceGuSwapBuffers</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gff5ebbf31f55dee4dfc06bd664f4d30a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuSync</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge00791f322904876a72a567ff745863c</anchor>
      <arglist>(int mode, int a1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawArray</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7ee605d6909a72f989cae1cc4bf6264f</anchor>
      <arglist>(int prim, int vtype, int count, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuBeginObject</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g34af9914f37a3775e436987137316e5e</anchor>
      <arglist>(int vtype, int count, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuEndObject</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga98bf249f36838b3da59e3d5dceabb4a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g920cb4c9648e37997228250619126b2c</anchor>
      <arglist>(int state, int status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuGetStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g345195e997c170f04b9c284d0e0416ad</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetAllStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8a381555c413c0bf9f999808b23de097</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceGuGetAllStatus</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb101d45f4cf2c482204fccd6c225ab75</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuEnable</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcedc4901fe91df74116ee3cd9f4da38d</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDisable</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g30b63d090b231a54abc381877775191c</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLight</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7b2b6b86b69545f4ba709153efb67252</anchor>
      <arglist>(int light, int type, int components, const ScePspFVector3 *position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightAtt</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g863ec858d565519fa04c570dcd38ac01</anchor>
      <arglist>(int light, float atten0, float atten1, float atten2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcc72f0eae1a6aaaa169932973af01946</anchor>
      <arglist>(int light, int component, unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g685b0059355f98c16ef1252cc491eaa8</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLightSpot</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gc9e08caa9aaa059ceb2105cf9656fc61</anchor>
      <arglist>(int light, const ScePspFVector3 *direction, float exponent, float cutoff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClear</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gd112581876eb55b6f6874266971bfab3</anchor>
      <arglist>(int flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClearColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gf98b62599df95bf34785914a257cce80</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClearDepth</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga7c7558f994ff1ee4b41b46517aa62fb</anchor>
      <arglist>(unsigned int depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClearStencil</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g1376203db05d61b12a16525d29ff01eb</anchor>
      <arglist>(unsigned int stencil)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuPixelMask</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb5aaddc4bb962ed04025c4fcdece6884</anchor>
      <arglist>(unsigned int mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb600ec994006cfebde05d1c09d984519</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuColorFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge1acf5fd1246cc521f3ca974aff646bf</anchor>
      <arglist>(int func, unsigned int color, unsigned int mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuColorMaterial</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g9ca8f103ac961cdb5307a008886a3812</anchor>
      <arglist>(int components)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuAlphaFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gb6cec3a1c12dcc426f1bfc4f13240123</anchor>
      <arglist>(int func, int value, int mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuAmbient</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gabf04f3faed4a5ea104fc48aa2fd38ef</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuAmbientColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge5f425ec4fb9e48e75fa111f00faf458</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuBlendFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8cb7979517331dd069d3bf7d032c62b6</anchor>
      <arglist>(int op, int src, int dest, unsigned int srcfix, unsigned int destfix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuMaterial</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3de697a71b8c193d6e7cb8b1134d2a80</anchor>
      <arglist>(int mode, int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuModelColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5804dcc74429517a937d223c8d5467ba</anchor>
      <arglist>(unsigned int emissive, unsigned int ambient, unsigned int diffuse, unsigned int specular)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuStencilFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3603616d44c4bba38681523470a2ea5a</anchor>
      <arglist>(int func, int ref, int mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuStencilOp</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gdc55c81ea1aaa01bb3f63cb7e91afa2a</anchor>
      <arglist>(int fail, int zfail, int zpass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSpecular</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g0150df156b4680dc9888f0c4aa064fec</anchor>
      <arglist>(float power)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuFrontFace</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5448854d2e6642569eac1785f90c0d36</anchor>
      <arglist>(int order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuLogicalOp</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g28cac6c3c05ec1314c0ba857ef8cb4c3</anchor>
      <arglist>(int op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetDither</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfb0d3524d0eee8f5dd94e790de4737d6</anchor>
      <arglist>(const ScePspIMatrix4 *matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuShadeModel</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfb174570249804d65dc03b88e9d92697</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuCopyImage</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g7c00c20bcec6ab9e0a6f63793af35a1d</anchor>
      <arglist>(int psm, int sx, int sy, int width, int height, int srcw, void *src, int dx, int dy, int destw, void *dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexEnvColor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8a00206d24c68986eda3606e9cec3b25</anchor>
      <arglist>(unsigned int color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexFilter</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5f7def0c32648184da0212567beb8f2d</anchor>
      <arglist>(int min, int mag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexFlush</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g41a9734a89941db4d5b2bb0e2982841e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexFunc</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g6a9fbd3c775d2e1e8ff7b4b6b853b13c</anchor>
      <arglist>(int tfx, int tcc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexImage</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gee7f589ac1b5ee7ea5c19c88ed2c84b6</anchor>
      <arglist>(int mipmap, int width, int height, int tbw, const void *tbp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexLevelMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ga07e29ca00db77d61196cd2938b182ff</anchor>
      <arglist>(unsigned int a0, float f12)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexMapMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge1c7be9aaf7ac850ccc5a7a494048707</anchor>
      <arglist>(int mode, unsigned int a1, unsigned int a2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbe8fe8f1375e0b5c13a8fd311a201295</anchor>
      <arglist>(int tpsm, int maxmips, int a2, int swizzle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexOffset</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbabe30e36adc94779cb6fcec4e8ab007</anchor>
      <arglist>(float u, float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexProjMapMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g040a13d7f8f9bef0379965c16fccd533</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexScale</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g05fead0b2cede570cc1c464c27f641a9</anchor>
      <arglist>(float u, float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexSlope</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>ge99899311920ceef125679a55cf51e73</anchor>
      <arglist>(float slope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexSync</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5d972d0389f66395679748b8a6ea827d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuTexWrap</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gfe5bec2f75da4462ea5458eb60cb3e30</anchor>
      <arglist>(int u, int v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClutLoad</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g29aac9f52b2c154a78f0a86b16c3e2b9</anchor>
      <arglist>(int num_blocks, const void *cbp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuClutMode</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gdb4f47752f55e37b53fd9e571abb9804</anchor>
      <arglist>(unsigned int cpsm, unsigned int a1, unsigned int a2, unsigned int a3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuOffset</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gec7e1497765bb4d74cd9ef8ad0f3d277</anchor>
      <arglist>(unsigned int x, unsigned int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuScissor</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g4e871b47f1af025bcfa17ae03ba4d9ba</anchor>
      <arglist>(int x, int y, int w, int h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuViewport</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3b08429c4197622db7919f66012e6eb2</anchor>
      <arglist>(int cx, int cy, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawBezier</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g3aad626dfeaa39a1273d39a91443fc27</anchor>
      <arglist>(int vtype, int ucount, int vcount, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuPatchDivide</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g1e156ed304c78e97df44ce3330c39c8a</anchor>
      <arglist>(unsigned int a0, unsigned int a1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuPatchFrontFace</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g9c413fdbf081c9978ee97ffa7b632e14</anchor>
      <arglist>(unsigned int a0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuPatchPrim</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gcbed51f79d2b8849d43f699e2cafae47</anchor>
      <arglist>(unsigned int a0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawSpline</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gbadd31d7feae1d6137b5c12e6932f154</anchor>
      <arglist>(int vtype, int ucount, int vcount, int uedge, int vedge, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuSetMatrix</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g1bc913d994e4bbc8e74b28d1fec77640</anchor>
      <arglist>(int type, const ScePspFMatrix4 *matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuBoneMatrix</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g782ba64506040cec624f64729522c828</anchor>
      <arglist>(unsigned int index, const ScePspFMatrix4 *matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuMorphWeight</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g52ad77c265c5bd34efbe0898a2481c1d</anchor>
      <arglist>(int index, float weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceGuDrawArrayN</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g8a377d73b1a273f8354e6d5fa11a40a4</anchor>
      <arglist>(int primitive_type, int vertex_type, int count, int a3, const void *indices, const void *vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>guSwapBuffersBehaviour</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>g5a52a71c4544f2f7668c76fa2b89c258</anchor>
      <arglist>(int behaviour)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>guSwapBuffersCallback</name>
      <anchorfile>group__GU.html</anchorfile>
      <anchor>gefd8c04a678070e623f62402f7fcecd9</anchor>
      <arglist>(GuSwapBuffersCallback callback)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Hprm</name>
    <title>Hprm Remote</title>
    <filename>group__Hprm.html</filename>
    <member kind="enumeration">
      <name>PspHprmKeys</name>
      <anchor>gcc8a52c6d23be65979bdb7049b7039ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_PLAYPAUSE</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039eae7fc2f4db76242ca1cc78a0bdbef0834</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_FORWARD</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039ea5c87db127bbd18c700b2716c9abc6204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_BACK</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039eac361e9dd9d9577dea743c272836f516e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_VOL_UP</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039eafcff84287ead01ee961fd7d8384b97ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_VOL_DOWN</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039ead04d2aa1d65b7f2729fcd202c4b99ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPRM_HOLD</name>
      <anchor>ggcc8a52c6d23be65979bdb7049b7039ea67f88ec4a3526f601089d35f5aefa6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmPeekCurrentKey</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>g9e9ede30a19591e1b9aaf167e89c0186</anchor>
      <arglist>(u32 *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmPeekLatch</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>g1921ab85075c563e73293b2569b11d51</anchor>
      <arglist>(u32 *latch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmReadLatch</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>g58bd6214ba8451d11cc09cc5805e43f3</anchor>
      <arglist>(u32 *latch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmIsHeadphoneExist</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>g055446e61b833ae1fcc453eba2403ba5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmIsRemoteExist</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>ge63a15bfc8d3f18b812c9aebc546c9fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceHprmIsMicrophoneExist</name>
      <anchorfile>group__Hprm.html</anchorfile>
      <anchor>g6bedc342dd457f15c5da66b1c2730a71</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>IntrManKern</name>
    <title>Interrupt Manager Kernel</title>
    <filename>group__IntrManKern.html</filename>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterIntrHandler</name>
      <anchorfile>group__IntrManKern.html</anchorfile>
      <anchor>ge250aebaf5d9dbab1a7366d51b13cd5d</anchor>
      <arglist>(int intno, int no, void *handler, void *arg1, void *arg2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelEnableIntr</name>
      <anchorfile>group__IntrManKern.html</anchorfile>
      <anchor>g11bc0003d68cf0601102aab873a94e50</anchor>
      <arglist>(int intno)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDisableIntr</name>
      <anchorfile>group__IntrManKern.html</anchorfile>
      <anchor>gd2da304b0e1868cdb37242744cb86ba8</anchor>
      <arglist>(int intno)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelIsIntrContext</name>
      <anchorfile>group__IntrManKern.html</anchorfile>
      <anchor>g989ecd629ecf840094cda960a158981d</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>IoFileMgr_Kernel</name>
    <title>Driver interface to IoFileMgr</title>
    <filename>group__IoFileMgr__Kernel.html</filename>
    <class kind="struct">PspIoDrvArg</class>
    <class kind="struct">PspIoDrvFileArg</class>
    <class kind="struct">PspIoDrvFuncs</class>
    <class kind="struct">PspIoDrv</class>
    <member kind="function">
      <type>int</type>
      <name>sceIoAddDrv</name>
      <anchorfile>group__IoFileMgr__Kernel.html</anchorfile>
      <anchor>g2cf4581dc8338a5f03dfb7d86e81f3e4</anchor>
      <arglist>(PspIoDrv *drv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoDelDrv</name>
      <anchorfile>group__IoFileMgr__Kernel.html</anchorfile>
      <anchor>gc7214128b9695de66ba4fbe5a393de60</anchor>
      <arglist>(const char *drv_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoReopen</name>
      <anchorfile>group__IoFileMgr__Kernel.html</anchorfile>
      <anchor>gdedc353add8bec459fe5f45a34a2444c</anchor>
      <arglist>(const char *file, int flags, SceMode mode, SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoGetThreadCwd</name>
      <anchorfile>group__IoFileMgr__Kernel.html</anchorfile>
      <anchor>g1b74e1096d8cd872c7c70b8e5f910b35</anchor>
      <arglist>(SceUID uid, char *dir, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoChangeThreadCwd</name>
      <anchorfile>group__IoFileMgr__Kernel.html</anchorfile>
      <anchor>ge7c998f238ffa7105183b40479d06964</anchor>
      <arglist>(SceUID uid, char *dir)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Kdebug</name>
    <title>Interface to the KDebugForKernel library.</title>
    <filename>group__Kdebug.html</filename>
    <member kind="typedef">
      <type>void(*</type>
      <name>PspDebugPutChar</name>
      <anchorfile>group__Kdebug.html</anchorfile>
      <anchor>gb09ee43d75d34fc1ff10fda27eca75c2</anchor>
      <arglist>)(unsigned short *args, unsigned int ch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelRegisterDebugPutchar</name>
      <anchorfile>group__Kdebug.html</anchorfile>
      <anchor>g2a8cc20142d09ceb251b325c58fbef0b</anchor>
      <arglist>(PspDebugPutChar func)</arglist>
    </member>
    <member kind="function">
      <type>PspDebugPutChar</type>
      <name>sceKernelGetDebugPutchar</name>
      <anchorfile>group__Kdebug.html</anchorfile>
      <anchor>g2bfd12db3e7292980c60556c82e1b976</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Kprintf</name>
      <anchorfile>group__Kdebug.html</anchorfile>
      <anchor>ga565fce3def7711714cc3167d0dca64d</anchor>
      <arglist>(const char *format,...) __attribute__((format(printf</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>LoadCore</name>
    <title>Interface to the LoadCoreForKernel library.</title>
    <filename>group__LoadCore.html</filename>
    <class kind="struct">SceModule</class>
    <class kind="struct">SceLibraryEntryTable</class>
    <class kind="struct">SceLibraryStubTable</class>
    <member kind="function">
      <type>SceModule *</type>
      <name>sceKernelFindModuleByName</name>
      <anchorfile>group__LoadCore.html</anchorfile>
      <anchor>g3041d89b2dd273cf191738ee904fd688</anchor>
      <arglist>(const char *modname)</arglist>
    </member>
    <member kind="function">
      <type>SceModule *</type>
      <name>sceKernelFindModuleByAddress</name>
      <anchorfile>group__LoadCore.html</anchorfile>
      <anchor>g6e948156e040fc739825d5bb54ad2088</anchor>
      <arglist>(unsigned int addr)</arglist>
    </member>
    <member kind="function">
      <type>SceModule *</type>
      <name>sceKernelFindModuleByUID</name>
      <anchorfile>group__LoadCore.html</anchorfile>
      <anchor>gcc5457be6ef3a174cdb113cf92d07747</anchor>
      <arglist>(SceUID modid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelModuleCount</name>
      <anchorfile>group__LoadCore.html</anchorfile>
      <anchor>g6c99306da8f1654ac6b3181cb0639a81</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelIcacheClearAll</name>
      <anchorfile>group__LoadCore.html</anchorfile>
      <anchor>g25e2eacbf67f0a0132bf6550b5e31f2f</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ModuleMgrKern</name>
    <title>Kernel Module Manager Library</title>
    <filename>group__ModuleMgrKern.html</filename>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetModuleList</name>
      <anchorfile>group__ModuleMgrKern.html</anchorfile>
      <anchor>gf4e1781f143f012fc7587d976227165a</anchor>
      <arglist>(int readbufsize, SceUID *readbuf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelModuleCount</name>
      <anchorfile>group__ModuleMgrKern.html</anchorfile>
      <anchor>g6c99306da8f1654ac6b3181cb0639a81</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelLoadModuleBuffer</name>
      <anchorfile>group__ModuleMgrKern.html</anchorfile>
      <anchor>g973f8b56a3212e88cedef363a3ca504e</anchor>
      <arglist>(void *buf, SceSize bufsize, int flags, SceKernelLMOption *option)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Stdio_Kernel</name>
    <title>Driver interface to Stdio</title>
    <filename>group__Stdio__Kernel.html</filename>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStdoutReopen</name>
      <anchorfile>group__Stdio__Kernel.html</anchorfile>
      <anchor>ga1ef08d9ce1a0747e0e9bbd7088cfd33</anchor>
      <arglist>(const char *file, int flags, SceMode mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStderrReopen</name>
      <anchorfile>group__Stdio__Kernel.html</anchorfile>
      <anchor>g11577cd937a55f413ef1c45e9d5d19d7</anchor>
      <arglist>(const char *file, int flags, SceMode mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fdprintf</name>
      <anchorfile>group__Stdio__Kernel.html</anchorfile>
      <anchor>g3a668e8f866d4cae6df9c1eb2324fec8</anchor>
      <arglist>(int fd, const char *format,...)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Syscon</name>
    <title>Interface to the sceSyscon_driver library.</title>
    <filename>group__Syscon.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCE_LED_POWER</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>g68e72e2e51a75b246eb01d5e3ab26f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LED_ON</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>gf2e697ac60e05813d45ea2c9c9e79c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LED_OFF</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>g80700bb63bd56ebabbb4728aa433fd29</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceSysconPowerStandby</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>g3342392d3a650b2f6955566f382c61d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceSysconResetDevice</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>gd236725bef14ad3f906079cd17154335</anchor>
      <arglist>(int unk1, int unk2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysconCtrlLED</name>
      <anchorfile>group__Syscon.html</anchorfile>
      <anchor>gea06db293a8a6ed1d27adc282de3c6e0</anchor>
      <arglist>(int SceLED, int state)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SysMemKern</name>
    <title>System Memory Manager Kernel</title>
    <filename>group__SysMemKern.html</filename>
    <class kind="struct">_PspSysmemPartitionInfo</class>
    <member kind="typedef">
      <type>_PspSysmemPartitionInfo</type>
      <name>PspSysmemPartitionInfo</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g98bf50c180d07aceab88c32aa495ff8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelQueryMemoryPartitionInfo</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g5326946ce66edc521cd20b7213c62357</anchor>
      <arglist>(int pid, PspSysmemPartitionInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>SceSize</type>
      <name>sceKernelPartitionTotalFreeMemSize</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g773cca39fa1dc802852bb98700672492</anchor>
      <arglist>(int pid)</arglist>
    </member>
    <member kind="function">
      <type>SceSize</type>
      <name>sceKernelPartitionMaxFreeMemSize</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>gda62bfa3c5098c4b9fd32b92d2e67559</anchor>
      <arglist>(int pid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelSysMemDump</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g811591cef28dc4c5e89224205b0973ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelSysMemDumpBlock</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>ge56f384547331d9320595f7e916a3e69</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelSysMemDumpTail</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g0dacda00a078f2d8ee66ed73be1a2d31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSetDdrMemoryProtection</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>gdf29962d26adbf4f907356dd7b1b342e</anchor>
      <arglist>(void *addr, int size, int prot)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateHeap</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g13fc6e8979dcc3da32660685e8589dcf</anchor>
      <arglist>(SceUID partitionid, SceSize size, int unk, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceKernelAllocHeapMemory</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g9f9decae3cbf231a01e3b8a74c97c9fa</anchor>
      <arglist>(SceUID heapid, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelFreeHeapMemory</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>g90944113949fd679a367bf0410a63ac9</anchor>
      <arglist>(SceUID heapid, void *block)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteHeap</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>gbc3e843fd2c68f771fedf0a846e47c65</anchor>
      <arglist>(SceUID heapid)</arglist>
    </member>
    <member kind="function">
      <type>SceSize</type>
      <name>sceKernelHeapTotalFreeSize</name>
      <anchorfile>group__SysMemKern.html</anchorfile>
      <anchor>gf77c69c149c4f35a716b4367eeb7303c</anchor>
      <arglist>(SceUID heapid)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Sysreg</name>
    <title>Interface to the sceSysreg_driver library.</title>
    <filename>group__Sysreg.html</filename>
    <member kind="function">
      <type>int</type>
      <name>sceSysregMeResetEnable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>g7a6b2599cf98f4983e347ad77f1a5abc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregMeResetDisable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>g7ec130f2855725f5547f554b39325b24</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregVmeResetEnable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>g34dfea12bc149ef19c1bac4f419e05f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregVmeResetDisable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>g3b4184fab0689480d30c69a0bde8ef45</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregMeBusClockEnable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>g0b11924aae2df3b2196c8f29b7cc5ce3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceSysregMeBusClockDisable</name>
      <anchorfile>group__Sysreg.html</anchorfile>
      <anchor>ge728b84b3b81038c1c5e6eb565f58920</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ThreadmanKern</name>
    <title>Thread Manager kernel functions</title>
    <filename>group__ThreadmanKern.html</filename>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSuspendAllUserThreads</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>gd3ddd1324a257630fdd8a3865ff47f90</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelIsUserModeThread</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g3de0194a496bd680c037f8967cae6a7a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetUserLevel</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g5f36092c80a2987511d5ebbe171972a2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceKernelGetSyscallRA</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>gba0c6f47dc72b1593454293e51464e57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadKernelStackFreeSize</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>gdaf8fc7f42720e66f170faf673c98ff6</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCheckThreadKernelStack</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g25f7e3584ccbe03ad4965b3aaa65b765</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelExtendKernelStack</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g8d5c9aea05f5405903643c7cadcbbc50</anchor>
      <arglist>(int type, void(*cb)(void *), void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceKernelGetSystemStatusFlag</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g5a4739de702a7596e8be93f371e81338</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelAllocateKTLS</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g937d60280c1f198d552d83d81f54a929</anchor>
      <arglist>(int id, int(*cb)(unsigned int *size, void *arg), void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelFreeKTLS</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g4aed09e02f39cdae1f84f7d699a77275</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceKernelGetKTLS</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g0b8a23f9ceebbf5d8bba83a683aad333</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceKernelGetThreadKTLS</name>
      <anchorfile>group__ThreadmanKern.html</anchorfile>
      <anchor>g8fe8cdfc51821acb1d0ad237c61c79cd</anchor>
      <arglist>(int id, SceUID thid, int mode)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PSPSDK</name>
    <title>PSPSDK Utility Library</title>
    <filename>group__PSPSDK.html</filename>
    <member kind="function">
      <type>int</type>
      <name>pspSdkQueryModuleInfoV1</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gaf5eb7555dcb00bb14ba71e4c9aaf9ae</anchor>
      <arglist>(SceUID uid, SceKernelModuleInfo *modinfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkGetModuleIdList</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g4b9b9591a734742d89b4f5c42dcde003</anchor>
      <arglist>(SceUID *readbuf, int readbufsize, int *idcount)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkInstallNoDeviceCheckPatch</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g4775f35740e43fe1a996d0b7fd4adb06</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkInstallNoPlainModuleCheckPatch</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g2d1a2c4e279b923e2012a299a712fb4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkInstallKernelLoadModulePatch</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gc031e9b36286d2177619ef4f7325db3d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>pspSdkLoadStartModule</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g6dbe70989cabbae006f7ed2ef9895482</anchor>
      <arglist>(const char *filename, int mpid)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>pspSdkLoadStartModuleWithArgs</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gb34f07aee47accf18728f8cf4fc9e0ac</anchor>
      <arglist>(const char *filename, int mpid, int argc, char *const argv[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspSdkFixupImports</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g97957bacea23cc5bf521b52671d04ce5</anchor>
      <arglist>(int moduleId)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkLoadInetModules</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>ge4c7daa71da75c7322b747deda6c463e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkInetInit</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gffa0a49ba4124d44208b627cd189b745</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspSdkInetTerm</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g2a9a073ccf913ebd2097011d20e2fd28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferThreadStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>ga4cc7d7c0f2eb14bdb1545c610097170</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelThreadInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferSemaStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g138994835bbd18b19ef36500e607ca9e</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelSemaInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferEventFlagStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g20c963aae827b5dced9695ef76ad0be0</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelEventFlagInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferMboxStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g25db1e4c1efd57c87e934fc467488a40</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelMbxInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferVplStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gaca8d57f7599026733bbd401a34b3c69</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelVplInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferFplStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g57467ac986eb6a116647a0d7c3b3d6ba</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelFplInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferMppStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g0b8b13b3d9d4e65ddc4dffccc841e00e</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelMppInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferCallbackStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g91c934dc66b4581a6c4f7e1e492f6949</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelCallbackInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferVTimerStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g71ba33f062d205ae7b1c585672271862</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelVTimerInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pspSdkReferThreadEventHandlerStatusByName</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g7019884873fff3b25a11df394a72780b</anchor>
      <arglist>(const char *name, SceUID *pUID, SceKernelThreadEventHandlerInfo *pInfo)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>pspSdkDisableInterrupts</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gb6e28443f96f8154c60406370ed108f3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspSdkEnableInterrupts</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g7b99cb77286650b56db3a386f316271c</anchor>
      <arglist>(unsigned int istate)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>pspSdkSetK1</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>g6ea9541e8d5876fc622dea88809a4849</anchor>
      <arglist>(unsigned int k1)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>pspSdkGetK1</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gca5f7f8ef71173220d6329379252821c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pspSdkDisableFPUExceptions</name>
      <anchorfile>group__PSPSDK.html</anchorfile>
      <anchor>gdc1d709584108aac358b629dc8ae1443</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Sony</name>
    <title>Integrated Remote Control System Library</title>
    <filename>group__Sony.html</filename>
    <class kind="struct">sircs_data</class>
    <member kind="function">
      <type>int</type>
      <name>sceSircsSend</name>
      <anchorfile>group__Sony.html</anchorfile>
      <anchor>g997701f7aa7068520bd3555a5574439a</anchor>
      <arglist>(struct sircs_data *sd, int count)</arglist>
    </member>
    <member kind="variable">
      <type>sircs_data</type>
      <name>__packed__</name>
      <anchorfile>group__Sony.html</anchorfile>
      <anchor>g6a70ecbfa58c13c6210e588a5fc0caf9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>IntrMan</name>
    <title>Interrupt Manager</title>
    <filename>group__IntrMan.html</filename>
    <class kind="struct">tag_IntrHandlerOptionParam</class>
    <member kind="typedef">
      <type>tag_IntrHandlerOptionParam</type>
      <name>PspIntrHandlerOptionParam</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>gdc73c9028c18c20b4a6a471a41584cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspInterrupts</name>
      <anchor>g874be3160e810262a9d5f2b13137b418</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GPIO_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4183df41a30d55d2b2d3040f65c99f838be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_ATA_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418a2a0e828073a2775e34e235bbc9e8aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_UMD_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4187ca2d97f83f18cfd7bc97aa9ac26b923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MSCM0_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418daf97089a16b7ab98f5c00e2f3c68fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_WLAN_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418eea3f461bc117b2fd0b5cc2fd24dc8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_AUDIO_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418acfe9e7bb9372a30e190384852d93b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_I2C_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418034adcf32de7dfefe1e6579fe187520b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SIRCS_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418bb0faa2536306abf466de757e0ece755</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SYSTIMER0_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4187a75fa417f5d019374167cedb56ab924</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SYSTIMER1_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b41886477df879ea06e0c8fd8f1e934492a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SYSTIMER2_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418c2ddf549e5fd5500643d1c242bd872ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SYSTIMER3_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b41815a1425115605da1311e266d3bb09dae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD0_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418ba0de3ae55b368ed52ad66c2da4eabd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_NAND_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4180b9987b290aa305713abdd500133951f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DMACPLUS_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418253a5429747f8c1415c13a890c32f6b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DMA0_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b41815edb5887ae5ff441dd21affac940899</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DMA1_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418e0be86007c9f20b11137a2c37e406ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MEMLMD_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b41832486d6edd04c8b76fea096a8b6cb5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418bbaa789159d83db14a7890e4f8d6749c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_VBLANK_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4182f75e8267ccb30ca4085c6dc09792239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MECODEC_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418ef7c0702366a82ec79349497575857de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_HPREMOTE_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b41809bd891276f72e1894561b9e9d2f832f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MSCM1_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418452b27c99b10e16f9f0e857527977afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_MSCM2_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418806b9b1c2f540dc8fbbdbb53fb568579</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD1_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b4183b6085aca67f456d2d3ad3cc84a7cc10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_INTERRUPT_INT</name>
      <anchor>gg874be3160e810262a9d5f2b13137b418cba21ec01998d3423c869c89bd515a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspSubInterrupts</name>
      <anchor>ge7e3c131fa486f14a43fb227f917235e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GPIO_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e0e5d79b2a9a3baf820f2e3a8a66ed650</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_ATA_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e0e9b45a322bf120e886f627cb49157ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_UMD_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e1db41e42b9a89fe7b2af6f2c091f925c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DMACPLUS_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e9056966f28b9d9c552641e199a24764e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_GE_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e2e578ab73681766526de23e585625688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_DISPLAY_SUBINT</name>
      <anchor>gge7e3c131fa486f14a43fb227f917235e1df13ad849592c6df5563bca041d5c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceKernelCpuSuspendIntr</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>gb1cbec8ea57619d48d976d69b39a92a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelCpuResumeIntr</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g0c5fac7e64d11aa2bc7ad5230e1df2c9</anchor>
      <arglist>(unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelCpuResumeIntrWithSync</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g38fcd93ef8191157fb05244278cec981</anchor>
      <arglist>(unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelIsCpuIntrSuspended</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g6a8c9f8a9ec6e261d907debf70090677</anchor>
      <arglist>(unsigned int flags)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelIsCpuIntrEnable</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g3d65233da71bc8d175c12248f6f4fdd6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterSubIntrHandler</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g7a27912be794f9248990cb96b4b545f4</anchor>
      <arglist>(int intno, int no, void *handler, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReleaseSubIntrHandler</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g1f8f56b23583574e0af27f3e624cad10</anchor>
      <arglist>(int intno, int no)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelEnableSubIntr</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>gd92a22a4636759d6d6ba24f0223b46b2</anchor>
      <arglist>(int intno, int no)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDisableSubIntr</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>gcd25cf5519ced517f2401375d7c28a2c</anchor>
      <arglist>(int intno, int no)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>QueryIntrHandlerInfo</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>g7614df312587fcfd458d4069748cb0a6</anchor>
      <arglist>(SceUID intr_code, SceUID sub_intr_code, PspIntrHandlerOptionParam *data)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>PspInterruptNames</name>
      <anchorfile>group__IntrMan.html</anchorfile>
      <anchor>ge1a813cbd3ff86f7ae336b0ab3ef1b43</anchor>
      <arglist>[67]</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>FileIO</name>
    <title>File IO Library</title>
    <filename>group__FileIO.html</filename>
    <member kind="enumeration">
      <name>IoAssignPerms</name>
      <anchor>gf213fbe01f0bc49c7fab6d44e654fadb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IOASSIGN_RDWR</name>
      <anchor>ggf213fbe01f0bc49c7fab6d44e654fadb1c3bd4a89fb014f64ea24ec9fd4d682c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IOASSIGN_RDONLY</name>
      <anchor>ggf213fbe01f0bc49c7fab6d44e654fadb5a7db17c765149ef88e62ab19cfc75b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceIoOpen</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g88dc53eaa661c18698ff606859f69ec8</anchor>
      <arglist>(const char *file, int flags, SceMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceIoOpenAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>ga40c35536dfada200f9963b51ebc0b0b</anchor>
      <arglist>(const char *file, int flags, SceMode mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoClose</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g125921b287807c747491aed6ef16acd9</anchor>
      <arglist>(SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoCloseAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g2e37fd75f4a07b76bb0a9e4a4deda70e</anchor>
      <arglist>(SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoRead</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g5dc250bdac642a1c7365ea18a21d3635</anchor>
      <arglist>(SceUID fd, void *data, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoReadAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gc39b5495f04c81e5efefc7b7fbabdf7b</anchor>
      <arglist>(SceUID fd, void *data, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoWrite</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gbead74a0aac2fded08b72a5a43902170</anchor>
      <arglist>(SceUID fd, const void *data, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoWriteAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g8ebeef57f41f8fe8aa435cfe889589bf</anchor>
      <arglist>(SceUID fd, const void *data, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>SceOff</type>
      <name>sceIoLseek</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g7a57926cba9d70d9632396eaf69e0e96</anchor>
      <arglist>(SceUID fd, SceOff offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoLseekAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g39a8423cdcb9a592df18ece834962461</anchor>
      <arglist>(SceUID fd, SceOff offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoLseek32</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gca489d7dcc95d9ee8f85248601c2102c</anchor>
      <arglist>(SceUID fd, int offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoLseek32Async</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g5bb7c1bb1c61591dabb6f8462be88fa4</anchor>
      <arglist>(SceUID fd, int offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoRemove</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gf0878533048cf65a30d96350d296b253</anchor>
      <arglist>(const char *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoMkdir</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>ge05d18e89cc4baa82de5ce6aa14e7e95</anchor>
      <arglist>(const char *dir, SceMode mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoRmdir</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g98e7df109a5a86ba764cd9e534626d16</anchor>
      <arglist>(const char *path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoChdir</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g7f07e12c4eec503340746a30eaff8a6d</anchor>
      <arglist>(const char *path)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoRename</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>ga574a64450b9f7a8aa062f48872e47e6</anchor>
      <arglist>(const char *oldname, const char *newname)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceIoDopen</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g99e6868991c01f146ecdd86b924eef1c</anchor>
      <arglist>(const char *dirname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoDread</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g9ed21c046e24cab62913f8d39e26809b</anchor>
      <arglist>(SceUID fd, SceIoDirent *dir)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoDclose</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gcc2ca2130e3e8947f5fd18f5e2bd10e9</anchor>
      <arglist>(SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoDevctl</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>ga2d114c652feb1e81b4e6ef1d3edc846</anchor>
      <arglist>(const char *dev, unsigned int cmd, void *indata, int inlen, void *outdata, int outlen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoAssign</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>ga372b5342f993bac97475b110671d9e7</anchor>
      <arglist>(const char *dev1, const char *dev2, const char *dev3, int mode, void *unk1, long unk2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoUnassign</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g0d7732acd8a4229a3a256a63a4ee6efc</anchor>
      <arglist>(const char *dev)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoGetstat</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g4e3afddc6b738ae99872eb74eb70a509</anchor>
      <arglist>(const char *file, SceIoStat *stat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoChstat</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g89361a511354826e6ac54ff587368e33</anchor>
      <arglist>(const char *file, SceIoStat *stat, int bits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoIoctl</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gb2297b50c65edb09c2175f8f262c7f20</anchor>
      <arglist>(SceUID fd, unsigned int cmd, void *indata, int inlen, void *outdata, int outlen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoIoctlAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g71371e769022cfa0eac4fa7003c9c94a</anchor>
      <arglist>(SceUID fd, unsigned int cmd, void *indata, int inlen, void *outdata, int outlen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoSync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g67be32ffdbd12b23149ebbc78b09c775</anchor>
      <arglist>(const char *device, unsigned int unk)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoWaitAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gec0343058b21c5c2ece5f25fda929efa</anchor>
      <arglist>(SceUID fd, SceInt64 *res)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoWaitAsyncCB</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gd66745a9a6b78309b6ddfc1be7475929</anchor>
      <arglist>(SceUID fd, SceInt64 *res)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoPollAsync</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g6065e5b5f6e1851fea13662e0f241901</anchor>
      <arglist>(SceUID fd, SceInt64 *res)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoGetAsyncStat</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g5ec46984e483737b1ad50edc61f6ad4d</anchor>
      <arglist>(SceUID fd, int poll, SceInt64 *res)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoCancel</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gd59b308f9923ebc9f7ea6ff18a8ede22</anchor>
      <arglist>(SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoGetDevType</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>gcadaf47fc7a88a01a23262a49be60e15</anchor>
      <arglist>(SceUID fd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoChangeAsyncPriority</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g099e9c6cb3e72104424cb391ad77b0a0</anchor>
      <arglist>(SceUID fd, int pri)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceIoSetAsyncCallback</name>
      <anchorfile>group__FileIO.html</anchorfile>
      <anchor>g765de85ca20cd84bee1b69f6e0f27d0c</anchor>
      <arglist>(SceUID fd, SceUID cb, void *argp)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>LoadExec</name>
    <title>LoadExec Library</title>
    <filename>group__LoadExec.html</filename>
    <class kind="struct">SceKernelLoadExecParam</class>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRegisterExitCallback</name>
      <anchorfile>group__LoadExec.html</anchorfile>
      <anchor>g2edcc6cc908579fd877c39378b06a792</anchor>
      <arglist>(int cbid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelExitGame</name>
      <anchorfile>group__LoadExec.html</anchorfile>
      <anchor>gdc458eebc603ffc5a3748ef7b08baeb9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelLoadExec</name>
      <anchorfile>group__LoadExec.html</anchorfile>
      <anchor>g19b06a8225cbdf630c7618de9f2815a4</anchor>
      <arglist>(const char *file, struct SceKernelLoadExecParam *param)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ModuleMgr</name>
    <title>Module Manager Library</title>
    <filename>group__ModuleMgr.html</filename>
    <class kind="struct">SceKernelLMOption</class>
    <class kind="struct">SceKernelSMOption</class>
    <class kind="struct">SceKernelModuleInfo</class>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MEMORY_PARTITION_KERNEL</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g2c0807fdae4d8932361ac4e77fb9689c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PSP_MEMORY_PARTITION_USER</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g3e50ae40e67fb6172ab7d86e87d3c464</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelLoadModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g7777a48e07030061c3b5da63697d27b2</anchor>
      <arglist>(const char *path, int flags, SceKernelLMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelLoadModuleMs</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g89789d907f5bc2300758a42bfa7b020f</anchor>
      <arglist>(const char *path, int flags, SceKernelLMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelLoadModuleByID</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g2a5c45e6a0268ec89aaf3942c73000e8</anchor>
      <arglist>(SceUID fid, int flags, SceKernelLMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelLoadModuleBufferUsbWlan</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g6896a8a63029aee4ba4264689b685fc7</anchor>
      <arglist>(SceSize bufsize, void *buf, int flags, SceKernelLMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStartModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g69c3f128b68a8b0ec89fb1f17a5bd5b5</anchor>
      <arglist>(SceUID modid, SceSize argsize, void *argp, int *status, SceKernelSMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStopModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>gf77c0abd9c45a2c10abea0cbddb29673</anchor>
      <arglist>(SceUID modid, SceSize argsize, void *argp, int *status, SceKernelSMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUnloadModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g5f22506e4149fdf094c0eccce9550984</anchor>
      <arglist>(SceUID modid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSelfStopUnloadModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g4572fedc91a1809d94cdb5f97bc4928f</anchor>
      <arglist>(int unknown, SceSize argsize, void *argp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStopUnloadSelfModule</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g1d5b57655b0bf5993fa85cfea6c7659b</anchor>
      <arglist>(SceSize argsize, void *argp, int *status, SceKernelSMOption *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelQueryModuleInfo</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>g88cf2be2180bd819ebdd9fa61a3ee5fb</anchor>
      <arglist>(SceUID modid, SceKernelModuleInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetModuleIdList</name>
      <anchorfile>group__ModuleMgr.html</anchorfile>
      <anchor>ge31cbf0c71d52e2299137c01ef9a1302</anchor>
      <arglist>(SceUID *readbuf, int readbufsize, int *idcount)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Stdio</name>
    <title>Stdio Library</title>
    <filename>group__Stdio.html</filename>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelStdin</name>
      <anchorfile>group__Stdio.html</anchorfile>
      <anchor>gebd94e416c1e8687e4a6b7b8bee105a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelStdout</name>
      <anchorfile>group__Stdio.html</anchorfile>
      <anchor>gdd72283aae22376cd224ea5e1b8aacc8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelStderr</name>
      <anchorfile>group__Stdio.html</anchorfile>
      <anchor>g9338f8d2a40064bfaf8c41ffae93e693</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SysMem</name>
    <title>System Memory Manager</title>
    <filename>group__SysMem.html</filename>
    <member kind="typedef">
      <type>int</type>
      <name>SceKernelSysMemAlloc_t</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>gbfff3ced4a4f23fcab7991ad022a616a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspSysMemBlockTypes</name>
      <anchor>g5b65e055e1f9e99169cb1cde1e18eb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SMEM_Low</name>
      <anchor>gg5b65e055e1f9e99169cb1cde1e18eb18c285b32b36a59c00c68648c1110332ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SMEM_High</name>
      <anchor>gg5b65e055e1f9e99169cb1cde1e18eb18bc800ef1c1f23da39e3bbf92b203d8a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_SMEM_Addr</name>
      <anchor>gg5b65e055e1f9e99169cb1cde1e18eb18ca9f8f1182820c3108ab8a9639bba7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelAllocPartitionMemory</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g0b5c821e691437713fd193a0c071ef87</anchor>
      <arglist>(SceUID partitionid, const char *name, int type, SceSize size, void *addr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelFreePartitionMemory</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g5e990d285f800cb78da505ffad2accf1</anchor>
      <arglist>(SceUID blockid)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>sceKernelGetBlockHeadAddr</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g9d937f1ec38c51c14fc28b7c8e81988e</anchor>
      <arglist>(SceUID blockid)</arglist>
    </member>
    <member kind="function">
      <type>SceSize</type>
      <name>sceKernelTotalFreeMemSize</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g34bb6bfa7d932f92714a7b797c94cd93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceSize</type>
      <name>sceKernelMaxFreeMemSize</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g20fc6133296639788ccc048ff00eee20</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDevkitVersion</name>
      <anchorfile>group__SysMem.html</anchorfile>
      <anchor>g451583bfbb351d0882b1317a8eb39a72</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ThreadMan</name>
    <title>Thread Manager Library</title>
    <filename>group__ThreadMan.html</filename>
    <class kind="struct">SceKernelSysClock</class>
    <class kind="struct">SceKernelThreadOptParam</class>
    <class kind="struct">SceKernelThreadInfo</class>
    <class kind="struct">SceKernelThreadRunStatus</class>
    <class kind="struct">SceKernelSemaOptParam</class>
    <class kind="struct">SceKernelSemaInfo</class>
    <class kind="struct">SceKernelEventFlagInfo</class>
    <class kind="struct">SceKernelEventFlagOptParam</class>
    <class kind="struct">SceKernelMbxOptParam</class>
    <class kind="struct">SceKernelMbxInfo</class>
    <class kind="struct">SceKernelAlarmInfo</class>
    <class kind="struct">SceKernelCallbackInfo</class>
    <class kind="struct">SceKernelSystemStatus</class>
    <class kind="struct">SceKernelMppInfo</class>
    <class kind="struct">SceKernelVplOptParam</class>
    <class kind="struct">SceKernelVplInfo</class>
    <class kind="struct">SceKernelFplOptParam</class>
    <class kind="struct">SceKernelFplInfo</class>
    <class kind="struct">SceKernelVTimerOptParam</class>
    <class kind="struct">SceKernelVTimerInfo</class>
    <class kind="struct">SceKernelThreadEventHandlerInfo</class>
    <member kind="define">
      <type>#define</type>
      <name>THREAD_ATTR_VFPU</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gcbb85068a4f54a6fce5458ec81ec6854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>THREAD_ATTR_USER</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g57be9021cb33707141430dc5524529e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>SceKernelThreadEntry</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gf7130e206fb9d413e14aea94c79dcbad</anchor>
      <arglist>)(SceSize args, void *argp)</arglist>
    </member>
    <member kind="typedef">
      <type>SceKernelEventFlagOptParam</type>
      <name>SceKernelEventFlagOptParam</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gdc6125df8272095fea2c6781d6e385d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SceUInt(*</type>
      <name>SceKernelAlarmHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gf3cef078f5af8364f15e31d4671763f0</anchor>
      <arglist>)(void *common)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>SceKernelCallbackFunction</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g2ef311fd2c3f8219b6bc422f98c3f5a1</anchor>
      <arglist>)(int arg1, int arg2, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>SceUInt(*</type>
      <name>SceKernelVTimerHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g0ea8f43b3c0c0d0a51b29007c4548345</anchor>
      <arglist>)(SceUID uid, SceKernelSysClock *, SceKernelSysClock *, void *)</arglist>
    </member>
    <member kind="typedef">
      <type>SceUInt(*</type>
      <name>SceKernelVTimerHandlerWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g81386d1e87bc24c7cf606ded0051fd46</anchor>
      <arglist>)(SceUID uid, SceInt64, SceInt64, void *)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>SceKernelThreadEventHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbc6c9928cfb4a9b2b3478e66363d30b8</anchor>
      <arglist>)(int mask, SceUID thid, void *common)</arglist>
    </member>
    <member kind="enumeration">
      <name>PspThreadAttributes</name>
      <anchor>g895c9fb39c6f2480e73f3a695b271011</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_VFPU</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b271011d12b52dc01863c5862471f9746649142</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_USER</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b271011f00a8f5aa8d490eee4eb4a68d4737238</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_USBWLAN</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b271011c38a1bd8d9897c8a8efb7cc806f413e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_VSH</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b2710115583462f4cd68e3b0f3b549ab580cb46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_SCRATCH_SRAM</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b2710113da917d7a661dab77ec5e996f5c7f33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_NO_FILLSTACK</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b271011ffcbcb433bade17e77262d8f2ca198fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_ATTR_CLEAR_STACK</name>
      <anchor>gg895c9fb39c6f2480e73f3a695b271011c56103d5c7eb7a7a0891ffa324753f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspThreadStatus</name>
      <anchor>g90e3d817b79f1eecb4dd489376dcd1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_RUNNING</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e02c8325adb7b04073fcf3cacb15ea8c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_READY</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e092c9a856b85aa13923e17a989528968f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_WAITING</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e0caa25801243338626dc1c1fc8e23c99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_SUSPEND</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e0515ddafa29ab1ef334b1ceadd27767b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_STOPPED</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e0bc5bde06150a9431fef9c9e5a198b46c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_THREAD_KILLED</name>
      <anchor>gg90e3d817b79f1eecb4dd489376dcd1e03e589104e603d85e312319571cfce26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspEventFlagAttributes</name>
      <anchor>g6eb030ea3ffd2dfb0be56e6a5b48900c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_EVENT_WAITMULTIPLE</name>
      <anchor>gg6eb030ea3ffd2dfb0be56e6a5b48900c9db3ef4e8966b159e6da0fe2590e6004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspEventFlagWaitTypes</name>
      <anchor>g6447ecb6b82e11f3ba8c3e895c430cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_EVENT_WAITAND</name>
      <anchor>gg6447ecb6b82e11f3ba8c3e895c430cbd6d38f9a78fc1e1851e32b9069bde450e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_EVENT_WAITOR</name>
      <anchor>gg6447ecb6b82e11f3ba8c3e895c430cbd4c71f66ed18eec4d291bc688dee9be7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_EVENT_WAITCLEAR</name>
      <anchor>gg6447ecb6b82e11f3ba8c3e895c430cbd6bff82fe9789e33a6f0b31720db224ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SceKernelIdListType</name>
      <anchor>gb73e1647ba8ce49d40132e57883602dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Thread</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc6c07486899e0df175dcb90cefb2ac7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Semaphore</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc6f586e8489418f6428ac915abfa3320e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_EventFlag</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc8abd95cf3cd992b483d74e71490a366c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Mbox</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dcb0c48409be61f88ae379761cdf5e98ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Vpl</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dcda22acf5747579086eb359e0ddc183d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Fpl</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc411fae0b430b218535117cb750048ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Mpipe</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc60147b6fe440e3c4770cfd1a61892376</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Callback</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc14cad08b131ef9371a6a0a7322d7af5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_ThreadEventHandler</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc205a48351680e34a080bb3958ab179b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_Alarm</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc673bce289cfe11dfa9daac5dc5405167</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_VTimer</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc13a6f5bc10feb810635e18a9e63994cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_SleepThread</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc2e1cada1f0344173360de9aba065bd2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_DelayThread</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc3a02bc58bf1ba70ac6dc77d2cb16aadb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_SuspendThread</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc93d8b4b14edcd3b462df1b11a0cc4442</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCE_KERNEL_TMID_DormantThread</name>
      <anchor>ggb73e1647ba8ce49d40132e57883602dc874f26b72bce479b904e5b8d50fb89d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ThreadEventIds</name>
      <anchor>g226d814114ef3e0bb0d59a68456b2ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREADEVENT_ALL</name>
      <anchor>gg226d814114ef3e0bb0d59a68456b2ffef526905585202be533dca81edb69b722</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREADEVENT_KERN</name>
      <anchor>gg226d814114ef3e0bb0d59a68456b2ffef3f2fe247faf4ec061eb5f191af01997</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREADEVENT_USER</name>
      <anchor>gg226d814114ef3e0bb0d59a68456b2ffec9f31bd1243008f7fcf6f2f03bac83d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREADEVENT_CURRENT</name>
      <anchor>gg226d814114ef3e0bb0d59a68456b2ffe4df18851c6b405a926229cfa04bed4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ThreadEvents</name>
      <anchor>g3257fc32dd732c0009124610b68859b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREAD_CREATE</name>
      <anchor>gg3257fc32dd732c0009124610b68859b82caf5764996f4b2b062a359ca3cb93d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREAD_START</name>
      <anchor>gg3257fc32dd732c0009124610b68859b8ae8f7fe4c447de6809ddfcbf2b9254ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREAD_EXIT</name>
      <anchor>gg3257fc32dd732c0009124610b68859b8ab31e2753b087bbf42820595baed5604</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>THREAD_DELETE</name>
      <anchor>gg3257fc32dd732c0009124610b68859b8306d243f6c5886c6a3890c8b925d6eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gd7e21acdf3aca23200c81f73f69521a3</anchor>
      <arglist>(const char *name, SceKernelThreadEntry entry, int initPriority, int stackSize, SceUInt attr, SceKernelThreadOptParam *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5ca67bdd8f53d50a169befe55b0c9684</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStartThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ga3b54986929bad87d48b5c4d11b8678e</anchor>
      <arglist>(SceUID thid, SceSize arglen, void *argp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelExitThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3e4b74175f4aefa6bc6f410ac11a50c6</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelExitDeleteThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g1d2c7c3946da4fa98b26ac755fcf3cd1</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTerminateThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge2205c7bae95732218b797d67fe8b84d</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTerminateDeleteThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g12bdc656af48deb3352c1f5fa206f3b0</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSuspendDispatchThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g2443643769063468e6a57075f468d16b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelResumeDispatchThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g72c7c502932ec04792f1a87952649700</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSleepThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g9702b337be697c9d3bb0551770dbe176</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSleepThreadCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc180fba0281f65ce3ec623fc126e788b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWakeupThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7f9c78cb8602ecb7949b8d91fc755a0b</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelWakeupThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g32bb92de043c02c61974f10034b80a96</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSuspendThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g89460ef8c3815a4534508ce0a00b24bd</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelResumeThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3df65329e59b2591d3336613e42bc01b</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitThreadEnd</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gaf86416e6c601f8dcb92f66050066f10</anchor>
      <arglist>(SceUID thid, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitThreadEndCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbba95470fda6fdb60aa17b58905e9698</anchor>
      <arglist>(SceUID thid, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDelayThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g76893a433dee550c0b7be52d807e62a8</anchor>
      <arglist>(SceUInt delay)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDelayThreadCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7b51417e5999e727715379282cc2bf8b</anchor>
      <arglist>(SceUInt delay)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDelaySysClockThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ga5c1205eba3b45fa5e89721598df844c</anchor>
      <arglist>(SceKernelSysClock *delay)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDelaySysClockThreadCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g108196035af9f3c8895b646bef2ad2d7</anchor>
      <arglist>(SceKernelSysClock *delay)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelChangeCurrentThreadAttr</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gf951d0cf8f791972e4b467e16042364c</anchor>
      <arglist>(int unknown, SceUInt attr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelChangeThreadPriority</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g9495237d122769ed5ea5c6f2c6285e43</anchor>
      <arglist>(SceUID thid, int priority)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelRotateThreadReadyQueue</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ga8bc5f547a985ed13ec982bc83c0a895</anchor>
      <arglist>(int priority)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReleaseWaitThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g864276ceccb242a7d3df092de89020ba</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadId</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5a71c2dc9a2d3e412fc9eeaae0c5a3c7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadCurrentPriority</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5e010f92f8ea412645ee00124dab3d89</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadExitStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7fa2373891f0175338c0c5975b371c1c</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCheckThreadStack</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g58fa38bffbe03d73b6a33a9df6623757</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadStackFreeSize</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gfee4714c33cfa560511663e4110e1f9d</anchor>
      <arglist>(SceUID thid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferThreadStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge148cfb2a2228ca761be2efd0e3821c4</anchor>
      <arglist>(SceUID thid, SceKernelThreadInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferThreadRunStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g86f5d844c044c7aa237d5a4b1dccba9e</anchor>
      <arglist>(SceUID thid, SceKernelThreadRunStatus *status)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateSema</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gda2ceb5a89c2a999545844fa2cae9dad</anchor>
      <arglist>(const char *name, SceUInt attr, int initVal, int maxVal, SceKernelSemaOptParam *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteSema</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbfae2ae4f32fd9b1ffdfbb7ddd4af114</anchor>
      <arglist>(SceUID semaid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSignalSema</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gb81b0362839d7f9cbdcbf64305e7e603</anchor>
      <arglist>(SceUID semaid, int signal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitSema</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbae55d2ad8fa3ea26c7402fe34bbf8d5</anchor>
      <arglist>(SceUID semaid, int signal, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitSemaCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g39f2a84f2c014b35ca17a2412dafbd4b</anchor>
      <arglist>(SceUID semaid, int signal, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelPollSema</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g57b23ac4e988e2f461812aa06cb7928a</anchor>
      <arglist>(SceUID semaid, int signal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferSemaStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc059ca45489dc7be2c4d775d069d68f2</anchor>
      <arglist>(SceUID semaid, SceKernelSemaInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g983a3acb8fb04c7a46ebe8f5930582d7</anchor>
      <arglist>(const char *name, int attr, int bits, SceKernelEventFlagOptParam *opt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSetEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gdde2f5b79018af3aa642a0e29ed704e3</anchor>
      <arglist>(SceUID evid, u32 bits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelClearEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g358e93729e050e1b4f210f9436a00e6a</anchor>
      <arglist>(SceUID evid, u32 bits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelPollEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gef9269cf1887848425a551bda1b6eacf</anchor>
      <arglist>(int evid, u32 bits, u32 wait, u32 *outBits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g42d698e62bcf49b2271818e01e9937ce</anchor>
      <arglist>(int evid, u32 bits, u32 wait, u32 *outBits, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelWaitEventFlagCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gd294c995f7e18847b0a27d2f8c5e3c77</anchor>
      <arglist>(int evid, u32 bits, u32 wait, u32 *outBits, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteEventFlag</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbcb2a121e8e7821396cbf644fb2d377d</anchor>
      <arglist>(int evid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferEventFlagStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge73e26eac189d1ff6746599fa6d23024</anchor>
      <arglist>(SceUID event, SceKernelEventFlagInfo *status)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g9704f79e78233e67da16bb9b87a868d8</anchor>
      <arglist>(const char *name, SceUInt attr, SceKernelMbxOptParam *option)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g0cc49472c5a3e2dda56acc8aef68acf3</anchor>
      <arglist>(SceUID mbxid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSendMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g6930c1105435faeabaec757d7b848d88</anchor>
      <arglist>(SceUID mbxid, void *message)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReceiveMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g69c85e9c86abc554d0c2c959231c42b2</anchor>
      <arglist>(SceUID mbxid, void **pmessage, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReceiveMbxCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gfc560e025518290d37d8c5da97013d09</anchor>
      <arglist>(SceUID mbxid, void **pmessage, SceUInt *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelPollMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gb81151d04f6509423c8fa3545f50fa2f</anchor>
      <arglist>(SceUID mbxid, void **pmessage)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelReceiveMbx</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g93912582ff46abefde57c6d0de2ca832</anchor>
      <arglist>(SceUID mbxid, int *pnum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferMbxStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ga80af9c14450220c306e3f937146a302</anchor>
      <arglist>(SceUID mbxid, SceKernelMbxInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelSetAlarm</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g8d38f0b59dda60a504e477c88989ce14</anchor>
      <arglist>(SceUInt clock, SceKernelAlarmHandler handler, void *common)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelSetSysClockAlarm</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc7f93246d141c6ca9c2ba44c73dbec35</anchor>
      <arglist>(SceKernelSysClock *clock, SceKernelAlarmHandler handler, void *common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelAlarm</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g8ad33fa1eaa23222da02188fd7c41578</anchor>
      <arglist>(SceUID alarmid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferAlarmStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gf699e1a5bbf4ad781ef009dc7ab2b7a0</anchor>
      <arglist>(SceUID alarmid, SceKernelAlarmInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCreateCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3cf9b8f5cdd47b687d65ba345eed4d09</anchor>
      <arglist>(const char *name, SceKernelCallbackFunction func, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferCallbackStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gd19a071c4337a5ec31ca8809fb0d5862</anchor>
      <arglist>(SceUID cb, SceKernelCallbackInfo *status)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g08fcc15c1357518a5b910066c9cb1666</anchor>
      <arglist>(SceUID cb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelNotifyCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3786870930297f68fe805758c0970153</anchor>
      <arglist>(SceUID cb, int arg2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gca08520842550dcac247e7c7839e1881</anchor>
      <arglist>(SceUID cb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetCallbackCount</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g1540f817f8d121a979fbbb9f8c01d15e</anchor>
      <arglist>(SceUID cb)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCheckCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gefe11af04ae86030017a9c7c9c80c365</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetThreadmanIdList</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g0a6c792d8a94bf2b5432191fe1703c06</anchor>
      <arglist>(enum SceKernelIdListType type, SceUID *readbuf, int readbufsize, int *idcount)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferSystemStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g4e74b287ca83f2fe1e2b541f41c9bdbe</anchor>
      <arglist>(SceKernelSystemStatus *status)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g8c06b5cdeb43dc608bb1c0292b266b4d</anchor>
      <arglist>(const char *name, int part, int attr, void *unk1, void *opt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g73595f343ff0270f9d14ceba5b629cce</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSendMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gd1b98f9743cae9a86d6414da646c61a0</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSendMsgPipeCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g9ee6e90080f74d9118f867024f2d6beb</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTrySendMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge9f6a8ec2fdc925ddf915f36320b3ae1</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReceiveMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gecd0cce97640372fbc0905426f9e367e</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReceiveMsgPipeCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge0943b8da3da312380dffbbec9b0593d</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTryReceiveMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge0d3fcb370b8a7af271376a9fdbaae6a</anchor>
      <arglist>(SceUID uid, void *message, unsigned int size, int unk1, void *unk2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelMsgPipe</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7011e5610981eae9983059ca93b4eaba</anchor>
      <arglist>(SceUID uid, int *psend, int *precv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferMsgPipeStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc655a59e88952387ca3ea928b31c1c33</anchor>
      <arglist>(SceUID uid, SceKernelMppInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc85e85797cd8d6c09b6312cd3429e22f</anchor>
      <arglist>(const char *name, int part, int attr, unsigned int size, struct SceKernelVplOptParam *opt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g54508dbefa85f028cb3d55cd7be0b769</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelAllocateVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gbdd10c4ca3ec4b3b9700a95cb787fbe5</anchor>
      <arglist>(SceUID uid, unsigned int size, void **data, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelAllocateVplCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g34a3b111c2e38b7f704923abe7e44210</anchor>
      <arglist>(SceUID uid, unsigned int size, void **data, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTryAllocateVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g81e91873d2143f2b3c65e1c1089e0158</anchor>
      <arglist>(SceUID uid, unsigned int size, void **data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelFreeVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc159e5ffe9635dea1eb85d627786a583</anchor>
      <arglist>(SceUID uid, void *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelVpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gb593a84a4a3c1d8aa6fe651e547315b3</anchor>
      <arglist>(SceUID uid, int *pnum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferVplStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g079bbc5c11c5f93fc2a4c2f2bec92885</anchor>
      <arglist>(SceUID uid, SceKernelVplInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCreateFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7e098eebd308eb91e60294ed37b9c235</anchor>
      <arglist>(const char *name, int part, int attr, unsigned int size, unsigned int blocks, struct SceKernelFplOptParam *opt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g043977cf9cab17da4f0fa9b623e7888c</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelAllocateFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gd5a967abb81ef358fc2becda292c2f6a</anchor>
      <arglist>(SceUID uid, void **data, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelAllocateFplCB</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gc24d52e91e1a5dc6b4291843606ecde4</anchor>
      <arglist>(SceUID uid, void **data, unsigned int *timeout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelTryAllocateFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g76964d8dbe53148df5456d48126d775f</anchor>
      <arglist>(SceUID uid, void **data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelFreeFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge1e19e8c2e984563ed8783d9b2d93f48</anchor>
      <arglist>(SceUID uid, void *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelFpl</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g183c20c5cfc1b8acbb1ff9f7b02bab04</anchor>
      <arglist>(SceUID uid, int *pnum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferFplStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gf7b9efbbd5595042716208ad1184bf0d</anchor>
      <arglist>(SceUID uid, SceKernelFplInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_sceKernelReturnFromTimerHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g8f05a3372ef8cad2dc42a06d4bcaf457</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_sceKernelReturnFromCallback</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gae487db2e6db3ccb706379238a00fac0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUSec2SysClock</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5ee607bd14adae69b9663507e956139b</anchor>
      <arglist>(unsigned int usec, SceKernelSysClock *clock)</arglist>
    </member>
    <member kind="function">
      <type>SceInt64</type>
      <name>sceKernelUSec2SysClockWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gee8843257778fe320893fda97efbddcd</anchor>
      <arglist>(unsigned int usec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSysClock2USec</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge526b70f31d9423498d8fd5e1e13952d</anchor>
      <arglist>(SceKernelSysClock *clock, unsigned int *low, unsigned int *high)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSysClock2USecWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5f7f37a4de60b6b036b44a1c5c3a3b97</anchor>
      <arglist>(SceInt64 clock, unsigned *low, unsigned int *high)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetSystemTime</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g44ecc68217cdadddb5591c603c78d6a4</anchor>
      <arglist>(SceKernelSysClock *time)</arglist>
    </member>
    <member kind="function">
      <type>SceInt64</type>
      <name>sceKernelGetSystemTimeWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g667b282cd3c9da73c237d39f8d7c11b3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>sceKernelGetSystemTimeLow</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g0a482d4b393b6db06a556bdac4e61508</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelCreateVTimer</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gb0cfea0e499d89300e8d502ba970bcae</anchor>
      <arglist>(const char *name, struct SceKernelVTimerOptParam *opt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelDeleteVTimer</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gdf2e118e60579bfc6fd0227551647fc1</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetVTimerBase</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g1b2532dae028592514e703a5230bf142</anchor>
      <arglist>(SceUID uid, SceKernelSysClock *base)</arglist>
    </member>
    <member kind="function">
      <type>SceInt64</type>
      <name>sceKernelGetVTimerBaseWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g438ece541868eb97c058ab339eecdbae</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelGetVTimerTime</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gdc8387108c2677056b8204b926a7f5c0</anchor>
      <arglist>(SceUID uid, SceKernelSysClock *time)</arglist>
    </member>
    <member kind="function">
      <type>SceInt64</type>
      <name>sceKernelGetVTimerTimeWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>ge2c6bc3543dfb447192b431f2887e5a3</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSetVTimerTime</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g9c12336521c4c964205d41d17a14fcc2</anchor>
      <arglist>(SceUID uid, SceKernelSysClock *time)</arglist>
    </member>
    <member kind="function">
      <type>SceInt64</type>
      <name>sceKernelSetVTimerTimeWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g6abf1adfe2d3a5a63d497189d1a126e4</anchor>
      <arglist>(SceUID uid, SceInt64 time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStartVTimer</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g121fd1875734c853e23794d25cd5cec9</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelStopVTimer</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3840dbadebf829cd6519df23f3f60eca</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSetVTimerHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g2aa9c2e5b5cb1a790edb37291352b1ed</anchor>
      <arglist>(SceUID uid, SceKernelSysClock *time, SceKernelVTimerHandler handler, void *common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelSetVTimerHandlerWide</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5b67259973b010ebe909904781ac737d</anchor>
      <arglist>(SceUID uid, SceInt64 time, SceKernelVTimerHandlerWide handler, void *common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelCancelVTimerHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g205d0b6d3dedb9e1614b110d935f95c7</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferVTimerStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g8231da2aad8b4b2d568635207299c0d9</anchor>
      <arglist>(SceUID uid, SceKernelVTimerInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_sceKernelExitThread</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g55c86963a5efee386a9ca618651cab6c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>enum SceKernelIdListType</type>
      <name>sceKernelGetThreadmanIdType</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g5cf2a9384ddd33eb3297eda50e041171</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>SceUID</type>
      <name>sceKernelRegisterThreadEventHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g7b2a7af60bcb78c68bf7d3ebde292a2c</anchor>
      <arglist>(const char *name, SceUID threadID, int mask, SceKernelThreadEventHandler handler, void *common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReleaseThreadEventHandler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>gcc1a3a552e9540c8fbb04ee628208072</anchor>
      <arglist>(SceUID uid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelReferThreadEventHandlerStatus</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3544261c572652289676a446350234ad</anchor>
      <arglist>(SceUID uid, struct SceKernelThreadEventHandlerInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>PspDebugProfilerRegs *</type>
      <name>sceKernelReferThreadProfiler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g91d45a31f37a49b12b1825191325abe9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>PspDebugProfilerRegs *</type>
      <name>sceKernelReferGlobalProfiler</name>
      <anchorfile>group__ThreadMan.html</anchorfile>
      <anchor>g3d08c312c9be09c66b384ed69d4b5ed7</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Utils</name>
    <title>Utils Library</title>
    <filename>group__Utils.html</filename>
    <class kind="struct">_SceKernelUtilsMt19937Context</class>
    <class kind="struct">_SceKernelUtilsMd5Context</class>
    <class kind="struct">_SceKernelUtilsSha1Context</class>
    <member kind="typedef">
      <type>_SceKernelUtilsMt19937Context</type>
      <name>SceKernelUtilsMt19937Context</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>ge6c6c8a949d86bd351d3c99b1d5f2192</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_SceKernelUtilsMd5Context</type>
      <name>SceKernelUtilsMd5Context</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g49280010ed7a876fd38d7e2fd23672ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_SceKernelUtilsSha1Context</type>
      <name>SceKernelUtilsSha1Context</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>gb388d53cc6f55e11644c0bc123f2f4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>sceKernelLibcTime</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g8e8636583212c489e771c350344b88b7</anchor>
      <arglist>(time_t *t)</arglist>
    </member>
    <member kind="function">
      <type>clock_t</type>
      <name>sceKernelLibcClock</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g7dba5448d6fc4a7a3885a896fe19fa39</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelLibcGettimeofday</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g283fe226093da5a60b328bd3e5c29bdb</anchor>
      <arglist>(struct timeval *tp, struct timezone *tzp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheWritebackAll</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g59010a512c23da7cde2686a33836fe1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheWritebackInvalidateAll</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g0ac61726fa3a5ec964b7f84888946cdc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheWritebackRange</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g2a9db4a80a3a500bc6a257caa35b7b36</anchor>
      <arglist>(const void *p, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheWritebackInvalidateRange</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g443582fa64137ea9b6bc164e4a00d13d</anchor>
      <arglist>(const void *p, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sceKernelDcacheInvalidateRange</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>gfae57e9a0e23197c10caf5294e4661fa</anchor>
      <arglist>(const void *p, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsMt19937Init</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>ge2e711b9152ea93fda05c35749be9cca</anchor>
      <arglist>(SceKernelUtilsMt19937Context *ctx, u32 seed)</arglist>
    </member>
    <member kind="function">
      <type>u32</type>
      <name>sceKernelUtilsMt19937UInt</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>ge7c2c682e735f4902d5c145ccb517f23</anchor>
      <arglist>(SceKernelUtilsMt19937Context *ctx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsMd5Digest</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g5a6de8e1dbf85e0f1ee7328ea14e8732</anchor>
      <arglist>(u8 *data, u32 size, u8 *digest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsMd5BlockInit</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g8fcf72d726d2f03878c50203b80a7e63</anchor>
      <arglist>(SceKernelUtilsMd5Context *ctx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsMd5BlockUpdate</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>ge35c1b6c43469150ab131d37f0f541ab</anchor>
      <arglist>(SceKernelUtilsMd5Context *ctx, u8 *data, u32 size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsMd5BlockResult</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g0a9ee2e863b0c05d30f854395c0ef092</anchor>
      <arglist>(SceKernelUtilsMd5Context *ctx, u8 *digest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsSha1Digest</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g547a72b744e2f08ebdf155ca4e890e2b</anchor>
      <arglist>(u8 *data, u32 size, u8 *digest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsSha1BlockInit</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>gb048a9243bcc9ecd5436bf098470ba0a</anchor>
      <arglist>(SceKernelUtilsSha1Context *ctx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsSha1BlockUpdate</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g93fbab8b219eeff7f2ba8f1c26aff613</anchor>
      <arglist>(SceKernelUtilsSha1Context *ctx, u8 *data, u32 size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceKernelUtilsSha1BlockResult</name>
      <anchorfile>group__Utils.html</anchorfile>
      <anchor>g384e1a2771bf565dcf846657b171d51b</anchor>
      <arglist>(SceKernelUtilsSha1Context *ctx, u8 *digest)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Chnnlsv</name>
    <title>Chnnlsv Library</title>
    <filename>group__Chnnlsv.html</filename>
    <class kind="struct">_pspChnnlsvContext1</class>
    <class kind="struct">_pspChnnlsvContext2</class>
    <member kind="typedef">
      <type>_pspChnnlsvContext1</type>
      <name>pspChnnlsvContext1</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>g45253017bd3f06e9907dba80bb9ed589</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_pspChnnlsvContext2</type>
      <name>pspChnnlsvContext2</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>ge0cebb1a074b51345637b62c4616f05c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_E7833020</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>gbeb942af1c8739b21fbee96a01a02e4c</anchor>
      <arglist>(pspChnnlsvContext1 *ctx, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_F21A1FCA</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>gd08f8774a3ff539d37347dc0f5d86faa</anchor>
      <arglist>(pspChnnlsvContext1 *ctx, unsigned char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_C4C494F8</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>g13d54931ff6367951ce3582ea58e27d6</anchor>
      <arglist>(pspChnnlsvContext1 *ctx, unsigned char *hash, unsigned char *cryptkey)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_ABFDFC8B</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>g26c7bcab00b4cbb7da86346c9e11ce1f</anchor>
      <arglist>(pspChnnlsvContext2 *ctx, int mode1, int mode2, unsigned char *hashkey, unsigned char *cipherkey)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_850A7FA1</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>g052c7b5884e3dfe89ba0895636b89851</anchor>
      <arglist>(pspChnnlsvContext2 *ctx, unsigned char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceChnnlsv_21BE78B4</name>
      <anchorfile>group__Chnnlsv.html</anchorfile>
      <anchor>g842d9c27e3be2918092462803668e758</anchor>
      <arglist>(pspChnnlsvContext2 *ctx)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Ctrl</name>
    <title>Controller Kernel Library</title>
    <filename>group__Ctrl.html</filename>
    <class kind="struct">SceCtrlData</class>
    <class kind="struct">SceCtrlLatch</class>
    <member kind="enumeration">
      <name>PspCtrlButtons</name>
      <anchor>gc080131ea3904c97efb6c31b1c4deb10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_SELECT</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10d602fe3cbb11af7d64cf0b026fd85ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_START</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb1083e1c527a4ffa833285106fb06e7409d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_UP</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb1006adc5c729726b68c158523f42ec2f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_RIGHT</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb100a9aa3f41b0eceb0570d5a44fbb98ba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_DOWN</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb1098174c2018bbe81da89c184147cef4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_LEFT</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10b1f3734d378520b3dd40eae9a056eab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_LTRIGGER</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10963eb5b0694c1d3743b2cad51aae576f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_RTRIGGER</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10693b6d46deb030ca8e20c02b2fb56076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_TRIANGLE</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10c4d072525ea17c12cbc96eeb52b1edfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_CIRCLE</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10a6f5a4ab35b6bb385151fea86b32781f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_CROSS</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb103198f413c14494e38dc9bd7d03ec48c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_SQUARE</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb100d39b80f965fd4f5a8b643ad850f77ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_HOME</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10f41ad6b8d068398a9a03c6158007978e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_HOLD</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb1017d94c81e78bb8152fcbec71514871c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_NOTE</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb1012d9fd8c1c68986f8feee0bf8e0729b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_SCREEN</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10b8fdbeea9bf93449489b22d48924bb54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_VOLUP</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb106809fd0241f39dc51ffe9f99b6365eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_VOLDOWN</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10de97447183c8eaf6438cbc1035b58607</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_WLAN_UP</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10e6512a1de7855d7c27f4c75cc2a1d4d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_REMOTE</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb104f94cffe72dda91a5158e6e05ce739e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_DISC</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb10a9e6e64dff7456e24ccc45e00a2e9bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_MS</name>
      <anchor>ggc080131ea3904c97efb6c31b1c4deb108fce19cf9d00d074d4ee22193ab33682</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PspCtrlMode</name>
      <anchor>g96dbe09509f8f258460c3f4eac17e2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_MODE_DIGITAL</name>
      <anchor>gg96dbe09509f8f258460c3f4eac17e2d741bb88c9849adda182c1c0e044d9271d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PSP_CTRL_MODE_ANALOG</name>
      <anchor>gg96dbe09509f8f258460c3f4eac17e2d7dfda9a89371309d59a86b018a34365c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlSetSamplingCycle</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g38cf8d7ba138a0c0edbedb5fd55731be</anchor>
      <arglist>(int cycle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlGetSamplingCycle</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g4d8bc5a7ff3d7e0de7745478b6591540</anchor>
      <arglist>(int *pcycle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlSetSamplingMode</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>gd4ffc21082be15723e6d1eb0979417e9</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlGetSamplingMode</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g29caa4711ddf8755fdf667f81a8d8de9</anchor>
      <arglist>(int *pmode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlPeekBufferPositive</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>gb7da915280028d02754ea42effacf995</anchor>
      <arglist>(SceCtrlData *pad_data, int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlPeekBufferNegative</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g2de9122992b1c88cbe07715f2ae45d8e</anchor>
      <arglist>(SceCtrlData *pad_data, int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlReadBufferPositive</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>gb6f0094cadc48b008c2079a9e89fba7f</anchor>
      <arglist>(SceCtrlData *pad_data, int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlReadBufferNegative</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>gded41c0b81c56158d720539cd7ced12e</anchor>
      <arglist>(SceCtrlData *pad_data, int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlPeekLatch</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g0bbdc4798a87ee1ceb0246aaf9bb65bc</anchor>
      <arglist>(SceCtrlLatch *latch_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceCtrlReadLatch</name>
      <anchorfile>group__Ctrl.html</anchorfile>
      <anchor>g440b3c15e9c77294fd04a4c1d378b8a6</anchor>
      <arglist>(SceCtrlLatch *latch_data)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Reg</name>
    <title>Registry Kernel Library</title>
    <filename>group__Reg.html</filename>
    <class kind="struct">RegParam</class>
    <member kind="define">
      <type>#define</type>
      <name>SYSTEM_REGISTRY</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g619b78e13c517b05b910d67969072ca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REG_KEYNAME_SIZE</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gc9063e82d27988422bcf76a88f00092c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegDriverOpenDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gf97cb729b0661d23f23da21168f139bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegDriverFlushDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>ga928c9911c49c4bc562befab118372be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegDriverCloseDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g172796f5f8a8104fa402b7155725aaad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegDriverCreateDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g4f8b771b4d6a8e3875e2278e7a8be694</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegOpenDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gccf24f12b4d29861dd3af05b8e0c8c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegFlushDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g3a4e0ce25692f5feab5bd13cb30de1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegCloseDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g2744f60dafc12c33fab288c549163055</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sceRegCreateDir</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g1f9af3f6cdc4ba6b1aaadef6f8aaa5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>REGHANDLE</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g1feb469ad4655ab138fba114a19fa9a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>RegKeyTypes</name>
      <anchor>ge7ca3cabd7b3c1eb8157c15db707b001</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REG_TYPE_DIR</name>
      <anchor>gge7ca3cabd7b3c1eb8157c15db707b001f6f4c04b3fbbc6765becf76f4d3e7ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REG_TYPE_INT</name>
      <anchor>gge7ca3cabd7b3c1eb8157c15db707b0010009340726bf291d938faa1557d2b676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REG_TYPE_STR</name>
      <anchor>gge7ca3cabd7b3c1eb8157c15db707b0010b4fef743a99b8938219768005d35aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REG_TYPE_BIN</name>
      <anchor>gge7ca3cabd7b3c1eb8157c15db707b001720618e2b17631f028466526f9e31bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegOpenRegistry</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gb3255b70e7cd189ccc72bdbec91316d9</anchor>
      <arglist>(struct RegParam *reg, int mode, REGHANDLE *h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegFlushRegistry</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g6c602e38a911e87bd97a6471a1fae9b1</anchor>
      <arglist>(REGHANDLE h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegCloseRegistry</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g7430326f07d46bfade87f2217b75dddc</anchor>
      <arglist>(REGHANDLE h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_driver_1D8A762E</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g0ef8a4c05d23e5b354e5061a3a28695f</anchor>
      <arglist>(REGHANDLE h, const char *name, int mode, REGHANDLE *hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_driver_0CAE832B</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gbf164f71c17886c80add88675b117c4b</anchor>
      <arglist>(REGHANDLE hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_driver_0D69BF40</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gb4a690a0fb060ee29976fe97dc75e5bd</anchor>
      <arglist>(REGHANDLE hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_driver_4CA16893</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g607523319eedd539260919365d52d79d</anchor>
      <arglist>(REGHANDLE h, const char *name, int unk)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_1D8A762E</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g9ffff3804649781bafe1b4fb8c6fe3e6</anchor>
      <arglist>(REGHANDLE h, const char *name, int mode, REGHANDLE *hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_4CA16893</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g144409e12d2a5f6cea72f88f10446c8c</anchor>
      <arglist>(REGHANDLE h, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_0CAE832B</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g1e6c844ba968cedf64e11ec5ed5e3a37</anchor>
      <arglist>(REGHANDLE hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceReg_0D69BF40</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g8bbf3f02231726c0ab3a378eddc03abd</anchor>
      <arglist>(REGHANDLE hd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeyInfo</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g270355b95080c36f2ce67e124976884b</anchor>
      <arglist>(REGHANDLE hd, const char *name, REGHANDLE *hk, unsigned int *type, SceSize *size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeyInfoByName</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g20129dac99bba9e44c34d3bff3a79f5a</anchor>
      <arglist>(REGHANDLE hd, const char *name, unsigned int *type, SceSize *size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeyValue</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g4b86b39ec419a421374d5b5d0fac15cf</anchor>
      <arglist>(REGHANDLE hd, REGHANDLE hk, void *buf, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeyValueByName</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g7f7f50bb13f789690233ed5d04fac65d</anchor>
      <arglist>(REGHANDLE hd, const char *name, void *buf, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegSetKeyValue</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g71de9ea38f7c71d141e2f7ef57e52749</anchor>
      <arglist>(REGHANDLE hd, const char *name, const void *buf, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeysNum</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>g782d5a8c482e7709ae3bb52fc432a826</anchor>
      <arglist>(REGHANDLE hd, int *num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegGetKeys</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>ga223cd8432e230749e5b4f5cec2cee99</anchor>
      <arglist>(REGHANDLE hd, char *buf, int num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegCreateKey</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gc6dd522f8ad4aae853af71251821e827</anchor>
      <arglist>(REGHANDLE hd, const char *name, int type, SceSize size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceRegRemoveRegistry</name>
      <anchorfile>group__Reg.html</anchorfile>
      <anchor>gce7eb67efcde24be599dd75606d3beaf</anchor>
      <arglist>(struct RegParam *reg)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>UMD</name>
    <title>UMD Kernel Library</title>
    <filename>group__UMD.html</filename>
    <member kind="typedef">
      <type>int(*</type>
      <name>UmdCallback</name>
      <anchorfile>group__UMD.html</anchorfile>
      <anchor>g5bc34455f119b1be13aaac5f24721687</anchor>
      <arglist>)(int unknown, int event)</arglist>
    </member>
    <member kind="enumeration">
      <name>UmdDriveStat</name>
      <anchor>g9c5d054a20187635e557b261de714e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UMD_WAITFORDISC</name>
      <anchor>gg9c5d054a20187635e557b261de714e42a577901c29dccadb6b7c85a61673ce4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UMD_WAITFORINIT</name>
      <anchor>gg9c5d054a20187635e557b261de714e42143876b024aa5f187141a542ef834585</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUmdCheckMedium</name>
      <anchorfile>group__UMD.html</anchorfile>
      <anchor>g63a1335999c4cf27dd1d5d533a0b5c2e</anchor>
      <arglist>(int a)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUmdActivate</name>
      <anchorfile>group__UMD.html</anchorfile>
      <anchor>gd3ba9d505f66b89a8bad9b978e35f2c7</anchor>
      <arglist>(int unit, const char *drive)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUmdWaitDriveStat</name>
      <anchorfile>group__UMD.html</anchorfile>
      <anchor>gf873c113d78cc22b8146ad599374ba90</anchor>
      <arglist>(int stat)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sceUmdRegisterUMDCallBack</name>
      <anchorfile>group__UMD.html</anchorfile>
      <anchor>g710b638596ad9798c72ee0b7d53f8340</anchor>
      <arglist>(int cbid)</arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>src/atrac3/</name>
    <path>/tmp/pspdev/pspsdk/src/atrac3/</path>
    <filename>dir_10d0d0448d58352d75af3819873afbd1.html</filename>
    <file>pspatrac3.h</file>
  </compound>
  <compound kind="dir">
    <name>src/audio/</name>
    <path>/tmp/pspdev/pspsdk/src/audio/</path>
    <filename>dir_fe2c7496d164dca110c114474d4c1293.html</filename>
    <file>pspaudio.h</file>
    <file>pspaudiocodec.h</file>
    <file>pspaudiolib.c</file>
    <file>pspaudiolib.h</file>
  </compound>
  <compound kind="dir">
    <name>src/base/</name>
    <path>/tmp/pspdev/pspsdk/src/base/</path>
    <filename>dir_27baca64dd12ca4469bb0266a8e3080a.html</filename>
    <file>as_reg_compat.h</file>
    <file>psptypes.h</file>
  </compound>
  <compound kind="dir">
    <name>src/ctrl/</name>
    <path>/tmp/pspdev/pspsdk/src/ctrl/</path>
    <filename>dir_92eb056b89752b0895a0a6088696222d.html</filename>
    <file>pspctrl.h</file>
    <file>pspctrl_kernel.h</file>
  </compound>
  <compound kind="dir">
    <name>src/debug/</name>
    <path>/tmp/pspdev/pspsdk/src/debug/</path>
    <filename>dir_d2bce673c67afca4f8781efc1b9bcece.html</filename>
    <file>callstack.c</file>
    <file>exception.c</file>
    <file>font.c</file>
    <file>gdb-kernellib.c</file>
    <file>gdb-stub.c</file>
    <file>gdb-userlib.c</file>
    <file>kprintf.c</file>
    <file>profiler.c</file>
    <file>pspdebug.h</file>
    <file>scr_printf.c</file>
    <file>sio.c</file>
    <file>stacktrace.c</file>
    <file>stdio.c</file>
  </compound>
  <compound kind="dir">
    <name>src/display/</name>
    <path>/tmp/pspdev/pspsdk/src/display/</path>
    <filename>dir_922f52369f7984baa70821b0b7892722.html</filename>
    <file>pspdisplay.h</file>
    <file>pspdisplay_kernel.h</file>
  </compound>
  <compound kind="dir">
    <name>src/fpu/</name>
    <path>/tmp/pspdev/pspsdk/src/fpu/</path>
    <filename>dir_372924dbcfd806b1c137c09a693875f2.html</filename>
    <file>pspfpu.c</file>
    <file>pspfpu.h</file>
  </compound>
  <compound kind="dir">
    <name>src/ge/</name>
    <path>/tmp/pspdev/pspsdk/src/ge/</path>
    <filename>dir_ba20a19c863c766d45e254abb842b1e1.html</filename>
    <file>pspge.h</file>
  </compound>
  <compound kind="dir">
    <name>src/gu/</name>
    <path>/tmp/pspdev/pspsdk/src/gu/</path>
    <filename>dir_3d25e104782bb86d397ca8d895b35642.html</filename>
    <file>callbackFin.c</file>
    <file>callbackSig.c</file>
    <file>guInternal.c</file>
    <file>guInternal.h</file>
    <file>pspgu.h</file>
    <file>resetValues.c</file>
    <file>sceGuAlphaFunc.c</file>
    <file>sceGuAmbient.c</file>
    <file>sceGuAmbientColor.c</file>
    <file>sceGuBeginObject.c</file>
    <file>sceGuBlendFunc.c</file>
    <file>sceGuBoneMatrix.c</file>
    <file>sceGuBreak.c</file>
    <file>sceGuCallList.c</file>
    <file>sceGuCallMode.c</file>
    <file>sceGuCheckList.c</file>
    <file>sceGuClear.c</file>
    <file>sceGuClearColor.c</file>
    <file>sceGuClearDepth.c</file>
    <file>sceGuClearStencil.c</file>
    <file>sceGuClutLoad.c</file>
    <file>sceGuClutMode.c</file>
    <file>sceGuColor.c</file>
    <file>sceGuColorFunc.c</file>
    <file>sceGuColorMaterial.c</file>
    <file>sceGuContinue.c</file>
    <file>sceGuCopyImage.c</file>
    <file>sceGuDepthBuffer.c</file>
    <file>sceGuDepthFunc.c</file>
    <file>sceGuDepthMask.c</file>
    <file>sceGuDepthOffset.c</file>
    <file>sceGuDepthRange.c</file>
    <file>sceGuDisable.c</file>
    <file>sceGuDispBuffer.c</file>
    <file>sceGuDisplay.c</file>
    <file>sceGuDrawArray.c</file>
    <file>sceGuDrawArrayN.c</file>
    <file>sceGuDrawBezier.c</file>
    <file>sceGuDrawBuffer.c</file>
    <file>sceGuDrawBufferList.c</file>
    <file>sceGuDrawSpline.c</file>
    <file>sceGuEnable.c</file>
    <file>sceGuEndObject.c</file>
    <file>sceGuFinish.c</file>
    <file>sceGuFog.c</file>
    <file>sceGuFrontFace.c</file>
    <file>sceGuGetAllStatus.c</file>
    <file>sceGuGetMemory.c</file>
    <file>sceGuGetStatus.c</file>
    <file>sceGuInit.c</file>
    <file>sceGuLight.c</file>
    <file>sceGuLightAtt.c</file>
    <file>sceGuLightColor.c</file>
    <file>sceGuLightMode.c</file>
    <file>sceGuLightSpot.c</file>
    <file>sceGuLogicalOp.c</file>
    <file>sceGuMaterial.c</file>
    <file>sceGuModelColor.c</file>
    <file>sceGuMorphWeight.c</file>
    <file>sceGuOffset.c</file>
    <file>sceGuPatchDivide.c</file>
    <file>sceGuPatchFrontFace.c</file>
    <file>sceGuPatchPrim.c</file>
    <file>sceGuPixelMask.c</file>
    <file>sceGuScissor.c</file>
    <file>sceGuSendCommandf.c</file>
    <file>sceGuSendCommandi.c</file>
    <file>sceGuSendList.c</file>
    <file>sceGuSetAllStatus.c</file>
    <file>sceGuSetCallback.c</file>
    <file>sceGuSetDither.c</file>
    <file>sceGuSetMatrix.c</file>
    <file>sceGuSetStatus.c</file>
    <file>sceGuShadeModel.c</file>
    <file>sceGuSignal.c</file>
    <file>sceGuSpecular.c</file>
    <file>sceGuStart.c</file>
    <file>sceGuStencilFunc.c</file>
    <file>sceGuStencilOp.c</file>
    <file>sceGuSwapBuffers.c</file>
    <file>sceGuSync.c</file>
    <file>sceGuTerm.c</file>
    <file>sceGuTexEnvColor.c</file>
    <file>sceGuTexFilter.c</file>
    <file>sceGuTexFlush.c</file>
    <file>sceGuTexFunc.c</file>
    <file>sceGuTexImage.c</file>
    <file>sceGuTexLevelMode.c</file>
    <file>sceGuTexMapMode.c</file>
    <file>sceGuTexMode.c</file>
    <file>sceGuTexOffset.c</file>
    <file>sceGuTexProjMapMode.c</file>
    <file>sceGuTexScale.c</file>
    <file>sceGuTexSlope.c</file>
    <file>sceGuTexSync.c</file>
    <file>sceGuTexWrap.c</file>
    <file>sceGuViewport.c</file>
    <file>sendCommand.c</file>
  </compound>
  <compound kind="dir">
    <name>src/gum/</name>
    <path>/tmp/pspdev/pspsdk/src/gum/</path>
    <filename>dir_56008a9a21e5996b0dfed9dc11f3798d.html</filename>
    <file>gumInternal.c</file>
    <file>gumInternal.h</file>
    <file>pspgum.c</file>
    <file>pspgum.h</file>
    <file>pspgum_vfpu.c</file>
  </compound>
  <compound kind="dir">
    <name>src/hprm/</name>
    <path>/tmp/pspdev/pspsdk/src/hprm/</path>
    <filename>dir_05d181cf4b1703cf2507dc04c9cb6128.html</filename>
    <file>psphprm.h</file>
  </compound>
  <compound kind="dir">
    <name>src/kernel/</name>
    <path>/tmp/pspdev/pspsdk/src/kernel/</path>
    <filename>dir_c3ca199bc86185c42595db7fd9a64d99.html</filename>
    <file>pspexception.h</file>
    <file>pspintrman_kernel.h</file>
    <file>pspiofilemgr_kernel.h</file>
    <file>pspkdebug.h</file>
    <file>pspkernel.h</file>
    <file>psploadcore.h</file>
    <file>pspmodulemgr_kernel.h</file>
    <file>pspstdio_kernel.h</file>
    <file>pspsyscon.h</file>
    <file>pspsysmem_kernel.h</file>
    <file>pspsysreg.h</file>
    <file>pspthreadman_kernel.h</file>
    <file>psputilsforkernel.h</file>
  </compound>
  <compound kind="dir">
    <name>src/libc/</name>
    <path>/tmp/pspdev/pspsdk/src/libc/</path>
    <filename>dir_72ce08fb3f55064fbacf477449c89a97.html</filename>
    <file>alloc.c</file>
    <file>assert.h</file>
    <file>ctype.h</file>
    <file>cxx.cpp</file>
    <file>init.c</file>
    <file>libcglue.c</file>
    <file>malloc.h</file>
    <file>qsort.c</file>
    <file>stdio.c</file>
    <file>stdio.h</file>
    <file>stdlib.c</file>
    <file>stdlib.h</file>
    <file>string.c</file>
    <file>string.h</file>
    <file>terminate.c</file>
    <file>time.h</file>
    <file>unistd.h</file>
    <file>xprintf.c</file>
  </compound>
  <compound kind="dir">
    <name>src/mpeg/</name>
    <path>/tmp/pspdev/pspsdk/src/mpeg/</path>
    <filename>dir_09456545276ff09c907462eeb1b0ad44.html</filename>
    <file>pspmpeg.h</file>
  </compound>
  <compound kind="dir">
    <name>src/nand/</name>
    <path>/tmp/pspdev/pspsdk/src/nand/</path>
    <filename>dir_dd9ee2760d50dd81d6f592f52929eaad.html</filename>
    <file>pspnand_driver.h</file>
  </compound>
  <compound kind="dir">
    <name>src/net/</name>
    <path>/tmp/pspdev/pspsdk/src/net/</path>
    <filename>dir_077fb9f5ee7e71fcdd323ded25f3bf0f.html</filename>
    <file>pspnet.h</file>
    <file>pspnet_adhoc.h</file>
    <file>pspnet_adhocctl.h</file>
    <file>pspnet_adhocmatching.h</file>
    <file>pspnet_apctl.h</file>
    <file>pspnet_inet.h</file>
    <file>pspnet_resolver.h</file>
  </compound>
  <compound kind="dir">
    <name>src/power/</name>
    <path>/tmp/pspdev/pspsdk/src/power/</path>
    <filename>dir_60d2d32ad0fe430436d93ce7de2ed83b.html</filename>
    <file>psppower.h</file>
  </compound>
  <compound kind="dir">
    <name>src/prof/</name>
    <path>/tmp/pspdev/pspsdk/src/prof/</path>
    <filename>dir_32ff64e82f9e91b74acc01a39bff29ee.html</filename>
    <file>prof.c</file>
    <file>pspprof.h</file>
  </compound>
  <compound kind="dir">
    <name>src/registry/</name>
    <path>/tmp/pspdev/pspsdk/src/registry/</path>
    <filename>dir_25ac38197e9e79a7d181e195986f9207.html</filename>
    <file>pspreg.h</file>
  </compound>
  <compound kind="dir">
    <name>src/rtc/</name>
    <path>/tmp/pspdev/pspsdk/src/rtc/</path>
    <filename>dir_339af598a627ee2171ffa252f5689a0d.html</filename>
    <file>psprtc.h</file>
  </compound>
  <compound kind="dir">
    <name>src/sdk/</name>
    <path>/tmp/pspdev/pspsdk/src/sdk/</path>
    <filename>dir_d6d4aaf190c2ffbe62b3635ce47f3ac3.html</filename>
    <file>fixup.c</file>
    <file>inethelper.c</file>
    <file>loadmodule.c</file>
    <file>modulemgr_patches.c</file>
    <file>pspsdk.h</file>
    <file>query_mod.c</file>
    <file>threadutils.c</file>
  </compound>
  <compound kind="dir">
    <name>src/sircs/</name>
    <path>/tmp/pspdev/pspsdk/src/sircs/</path>
    <filename>dir_4a50e70db24d01e1f210216c134e2ed9.html</filename>
    <file>pspsircs.h</file>
  </compound>
  <compound kind="dir">
    <name>src/</name>
    <path>/tmp/pspdev/pspsdk/src/</path>
    <filename>dir_a767a14c4ba279561bba8bcb1af2069f.html</filename>
    <dir>src/atrac3/</dir>
    <dir>src/audio/</dir>
    <dir>src/base/</dir>
    <dir>src/ctrl/</dir>
    <dir>src/debug/</dir>
    <dir>src/display/</dir>
    <dir>src/fpu/</dir>
    <dir>src/ge/</dir>
    <dir>src/gu/</dir>
    <dir>src/gum/</dir>
    <dir>src/hprm/</dir>
    <dir>src/kernel/</dir>
    <dir>src/libc/</dir>
    <dir>src/mpeg/</dir>
    <dir>src/nand/</dir>
    <dir>src/net/</dir>
    <dir>src/power/</dir>
    <dir>src/prof/</dir>
    <dir>src/registry/</dir>
    <dir>src/rtc/</dir>
    <dir>src/sdk/</dir>
    <dir>src/sircs/</dir>
    <dir>src/startup/</dir>
    <dir>src/umd/</dir>
    <dir>src/usb/</dir>
    <dir>src/usbstor/</dir>
    <dir>src/user/</dir>
    <dir>src/utility/</dir>
    <dir>src/vfpu/</dir>
    <dir>src/vsh/</dir>
    <dir>src/wlan/</dir>
  </compound>
  <compound kind="dir">
    <name>src/startup/</name>
    <path>/tmp/pspdev/pspsdk/src/startup/</path>
    <filename>dir_5f71bfce1d72cae746061ff009f42ae7.html</filename>
    <file>crt0.c</file>
    <file>crt0_prx.c</file>
    <file>dummy.c</file>
    <file>prxexports.c</file>
  </compound>
  <compound kind="dir">
    <name>tools/</name>
    <path>/tmp/pspdev/pspsdk/tools/</path>
    <filename>dir_a250d625b271754be4006cdf97905b80.html</filename>
    <file>bin2c.c</file>
    <file>bin2o.c</file>
    <file>bin2s.c</file>
    <file>elftypes.h</file>
    <file>getopt.h</file>
    <file>getopt_long.c</file>
    <file>mksfo.c</file>
    <file>pack-pbp.c</file>
    <file>prxtypes.h</file>
    <file>psp-build-exports.c</file>
    <file>psp-config.c</file>
    <file>psp-fixup-imports.c</file>
    <file>psp-prxgen.c</file>
    <file>sha1.c</file>
    <file>sha1.h</file>
    <file>types.h</file>
    <file>unpack-pbp.c</file>
  </compound>
  <compound kind="dir">
    <name>src/umd/</name>
    <path>/tmp/pspdev/pspsdk/src/umd/</path>
    <filename>dir_5d83cddc17e4b5fa095a520da637d1bd.html</filename>
    <file>pspumd.h</file>
  </compound>
  <compound kind="dir">
    <name>src/usb/</name>
    <path>/tmp/pspdev/pspsdk/src/usb/</path>
    <filename>dir_33065d0eb49b63ce5e40cebfac022915.html</filename>
    <file>pspusb.h</file>
    <file>pspusbbus.h</file>
  </compound>
  <compound kind="dir">
    <name>src/usbstor/</name>
    <path>/tmp/pspdev/pspsdk/src/usbstor/</path>
    <filename>dir_02c3583d3b289cb77dacebf64e3c02fe.html</filename>
    <file>pspusbstor.h</file>
  </compound>
  <compound kind="dir">
    <name>src/user/</name>
    <path>/tmp/pspdev/pspsdk/src/user/</path>
    <filename>dir_6244f9ebe9b54fb1f600a0092655669b.html</filename>
    <file>pspintrman.c</file>
    <file>pspintrman.h</file>
    <file>pspiofilemgr.h</file>
    <file>pspiofilemgr_dirent.h</file>
    <file>pspiofilemgr_fcntl.h</file>
    <file>pspiofilemgr_stat.h</file>
    <file>pspkerneltypes.h</file>
    <file>pspkerror.h</file>
    <file>psploadexec.h</file>
    <file>pspmoduleexport.h</file>
    <file>pspmoduleinfo.h</file>
    <file>pspmodulemgr.h</file>
    <file>pspmscm.h</file>
    <file>pspstdio.h</file>
    <file>pspsuspend.h</file>
    <file>pspsysmem.h</file>
    <file>pspthreadman.h</file>
    <file>pspuser.h</file>
    <file>psputils.h</file>
  </compound>
  <compound kind="dir">
    <name>src/utility/</name>
    <path>/tmp/pspdev/pspsdk/src/utility/</path>
    <filename>dir_4db3ffff9150bbd28e350e56f5fab80c.html</filename>
    <file>psputility.h</file>
    <file>psputility_msgdialog.h</file>
    <file>psputility_netconf.h</file>
    <file>psputility_netmodules.h</file>
    <file>psputility_netparam.h</file>
    <file>psputility_osk.h</file>
    <file>psputility_savedata.h</file>
    <file>psputility_sysparam.h</file>
  </compound>
  <compound kind="dir">
    <name>src/vfpu/</name>
    <path>/tmp/pspdev/pspsdk/src/vfpu/</path>
    <filename>dir_fa9000d8c52c9584c2ff68ba46fb06ed.html</filename>
    <file>pspvfpu.c</file>
    <file>pspvfpu.h</file>
  </compound>
  <compound kind="dir">
    <name>src/vsh/</name>
    <path>/tmp/pspdev/pspsdk/src/vsh/</path>
    <filename>dir_1c0cd958946be9efd343a92e2759a3f1.html</filename>
    <file>pspchnnlsv.h</file>
  </compound>
  <compound kind="dir">
    <name>src/wlan/</name>
    <path>/tmp/pspdev/pspsdk/src/wlan/</path>
    <filename>dir_2df5ee4291f2486aa426b43f877a6e3b.html</filename>
    <file>pspwlan.h</file>
  </compound>
</tagfile>
